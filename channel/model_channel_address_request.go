/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
)

// checks if the ChannelAddressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAddressRequest{}

// ChannelAddressRequest struct for ChannelAddressRequest
type ChannelAddressRequest struct {
	Gender *Gender `json:"Gender,omitempty"`
	// Optional. Company addressed too.
	CompanyName NullableString `json:"CompanyName,omitempty"`
	// The first name of the customer.
	FirstName NullableString `json:"FirstName,omitempty"`
	// The last name of the customer (includes the surname prefix [tussenvoegsel] like 'de', 'van', 'du').
	LastName NullableString `json:"LastName,omitempty"`
	// The name of the street (without house number information)  This field might be empty if address validation is disabled in ChannelEngine.
	StreetName NullableString `json:"StreetName,omitempty"`
	// The house number  This field might be empty if address validation is disabled in ChannelEngine.
	HouseNr NullableString `json:"HouseNr,omitempty"`
	// Optional. Addition to the house number  If the address is: Groenhazengracht 2c, the address will be:  StreetName: Groenhazengracht  HouseNo: 2  HouseNrAddition: c  This field might be empty if address validation is disabled in ChannelEngine.
	HouseNrAddition NullableString `json:"HouseNrAddition,omitempty"`
	// The zip or postal code.
	ZipCode NullableString `json:"ZipCode,omitempty"`
	// The name of the city.
	City NullableString `json:"City,omitempty"`
	// Optional. State/province/region.
	Region NullableString `json:"Region,omitempty"`
	// For example: NL, BE, FR.
	CountryIso NullableString `json:"CountryIso,omitempty"`
	// Optional. The address as a single string: use in case the address lines are entered  as single lines and later parsed into street, house number and house number addition.
	// Deprecated
	Original NullableString `json:"Original,omitempty"`
}

// NewChannelAddressRequest instantiates a new ChannelAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAddressRequest() *ChannelAddressRequest {
	this := ChannelAddressRequest{}
	return &this
}

// NewChannelAddressRequestWithDefaults instantiates a new ChannelAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAddressRequestWithDefaults() *ChannelAddressRequest {
	this := ChannelAddressRequest{}
	return &this
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *ChannelAddressRequest) GetGender() Gender {
	if o == nil || IsNil(o.Gender) {
		var ret Gender
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAddressRequest) GetGenderOk() (*Gender, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given Gender and assigns it to the Gender field.
func (o *ChannelAddressRequest) SetGender(v Gender) {
	o.Gender = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *ChannelAddressRequest) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}
// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *ChannelAddressRequest) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *ChannelAddressRequest) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *ChannelAddressRequest) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *ChannelAddressRequest) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *ChannelAddressRequest) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *ChannelAddressRequest) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *ChannelAddressRequest) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *ChannelAddressRequest) UnsetLastName() {
	o.LastName.Unset()
}

// GetStreetName returns the StreetName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetStreetName() string {
	if o == nil || IsNil(o.StreetName.Get()) {
		var ret string
		return ret
	}
	return *o.StreetName.Get()
}

// GetStreetNameOk returns a tuple with the StreetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetStreetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreetName.Get(), o.StreetName.IsSet()
}

// HasStreetName returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasStreetName() bool {
	if o != nil && o.StreetName.IsSet() {
		return true
	}

	return false
}

// SetStreetName gets a reference to the given NullableString and assigns it to the StreetName field.
func (o *ChannelAddressRequest) SetStreetName(v string) {
	o.StreetName.Set(&v)
}
// SetStreetNameNil sets the value for StreetName to be an explicit nil
func (o *ChannelAddressRequest) SetStreetNameNil() {
	o.StreetName.Set(nil)
}

// UnsetStreetName ensures that no value is present for StreetName, not even an explicit nil
func (o *ChannelAddressRequest) UnsetStreetName() {
	o.StreetName.Unset()
}

// GetHouseNr returns the HouseNr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetHouseNr() string {
	if o == nil || IsNil(o.HouseNr.Get()) {
		var ret string
		return ret
	}
	return *o.HouseNr.Get()
}

// GetHouseNrOk returns a tuple with the HouseNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetHouseNrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HouseNr.Get(), o.HouseNr.IsSet()
}

// HasHouseNr returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasHouseNr() bool {
	if o != nil && o.HouseNr.IsSet() {
		return true
	}

	return false
}

// SetHouseNr gets a reference to the given NullableString and assigns it to the HouseNr field.
func (o *ChannelAddressRequest) SetHouseNr(v string) {
	o.HouseNr.Set(&v)
}
// SetHouseNrNil sets the value for HouseNr to be an explicit nil
func (o *ChannelAddressRequest) SetHouseNrNil() {
	o.HouseNr.Set(nil)
}

// UnsetHouseNr ensures that no value is present for HouseNr, not even an explicit nil
func (o *ChannelAddressRequest) UnsetHouseNr() {
	o.HouseNr.Unset()
}

// GetHouseNrAddition returns the HouseNrAddition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetHouseNrAddition() string {
	if o == nil || IsNil(o.HouseNrAddition.Get()) {
		var ret string
		return ret
	}
	return *o.HouseNrAddition.Get()
}

// GetHouseNrAdditionOk returns a tuple with the HouseNrAddition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetHouseNrAdditionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HouseNrAddition.Get(), o.HouseNrAddition.IsSet()
}

// HasHouseNrAddition returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasHouseNrAddition() bool {
	if o != nil && o.HouseNrAddition.IsSet() {
		return true
	}

	return false
}

// SetHouseNrAddition gets a reference to the given NullableString and assigns it to the HouseNrAddition field.
func (o *ChannelAddressRequest) SetHouseNrAddition(v string) {
	o.HouseNrAddition.Set(&v)
}
// SetHouseNrAdditionNil sets the value for HouseNrAddition to be an explicit nil
func (o *ChannelAddressRequest) SetHouseNrAdditionNil() {
	o.HouseNrAddition.Set(nil)
}

// UnsetHouseNrAddition ensures that no value is present for HouseNrAddition, not even an explicit nil
func (o *ChannelAddressRequest) UnsetHouseNrAddition() {
	o.HouseNrAddition.Unset()
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode.Get()) {
		var ret string
		return ret
	}
	return *o.ZipCode.Get()
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZipCode.Get(), o.ZipCode.IsSet()
}

// HasZipCode returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasZipCode() bool {
	if o != nil && o.ZipCode.IsSet() {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given NullableString and assigns it to the ZipCode field.
func (o *ChannelAddressRequest) SetZipCode(v string) {
	o.ZipCode.Set(&v)
}
// SetZipCodeNil sets the value for ZipCode to be an explicit nil
func (o *ChannelAddressRequest) SetZipCodeNil() {
	o.ZipCode.Set(nil)
}

// UnsetZipCode ensures that no value is present for ZipCode, not even an explicit nil
func (o *ChannelAddressRequest) UnsetZipCode() {
	o.ZipCode.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *ChannelAddressRequest) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *ChannelAddressRequest) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *ChannelAddressRequest) UnsetCity() {
	o.City.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *ChannelAddressRequest) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *ChannelAddressRequest) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *ChannelAddressRequest) UnsetRegion() {
	o.Region.Unset()
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelAddressRequest) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.CountryIso.Get()
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelAddressRequest) GetCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryIso.Get(), o.CountryIso.IsSet()
}

// HasCountryIso returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasCountryIso() bool {
	if o != nil && o.CountryIso.IsSet() {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given NullableString and assigns it to the CountryIso field.
func (o *ChannelAddressRequest) SetCountryIso(v string) {
	o.CountryIso.Set(&v)
}
// SetCountryIsoNil sets the value for CountryIso to be an explicit nil
func (o *ChannelAddressRequest) SetCountryIsoNil() {
	o.CountryIso.Set(nil)
}

// UnsetCountryIso ensures that no value is present for CountryIso, not even an explicit nil
func (o *ChannelAddressRequest) UnsetCountryIso() {
	o.CountryIso.Unset()
}

// GetOriginal returns the Original field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ChannelAddressRequest) GetOriginal() string {
	if o == nil || IsNil(o.Original.Get()) {
		var ret string
		return ret
	}
	return *o.Original.Get()
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ChannelAddressRequest) GetOriginalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Original.Get(), o.Original.IsSet()
}

// HasOriginal returns a boolean if a field has been set.
func (o *ChannelAddressRequest) HasOriginal() bool {
	if o != nil && o.Original.IsSet() {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given NullableString and assigns it to the Original field.
// Deprecated
func (o *ChannelAddressRequest) SetOriginal(v string) {
	o.Original.Set(&v)
}
// SetOriginalNil sets the value for Original to be an explicit nil
func (o *ChannelAddressRequest) SetOriginalNil() {
	o.Original.Set(nil)
}

// UnsetOriginal ensures that no value is present for Original, not even an explicit nil
func (o *ChannelAddressRequest) UnsetOriginal() {
	o.Original.Unset()
}

func (o ChannelAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAddressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gender) {
		toSerialize["Gender"] = o.Gender
	}
	if o.CompanyName.IsSet() {
		toSerialize["CompanyName"] = o.CompanyName.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["FirstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["LastName"] = o.LastName.Get()
	}
	if o.StreetName.IsSet() {
		toSerialize["StreetName"] = o.StreetName.Get()
	}
	if o.HouseNr.IsSet() {
		toSerialize["HouseNr"] = o.HouseNr.Get()
	}
	if o.HouseNrAddition.IsSet() {
		toSerialize["HouseNrAddition"] = o.HouseNrAddition.Get()
	}
	if o.ZipCode.IsSet() {
		toSerialize["ZipCode"] = o.ZipCode.Get()
	}
	if o.City.IsSet() {
		toSerialize["City"] = o.City.Get()
	}
	if o.Region.IsSet() {
		toSerialize["Region"] = o.Region.Get()
	}
	if o.CountryIso.IsSet() {
		toSerialize["CountryIso"] = o.CountryIso.Get()
	}
	if o.Original.IsSet() {
		toSerialize["Original"] = o.Original.Get()
	}
	return toSerialize, nil
}

type NullableChannelAddressRequest struct {
	value *ChannelAddressRequest
	isSet bool
}

func (v NullableChannelAddressRequest) Get() *ChannelAddressRequest {
	return v.value
}

func (v *NullableChannelAddressRequest) Set(val *ChannelAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAddressRequest(val *ChannelAddressRequest) *NullableChannelAddressRequest {
	return &NullableChannelAddressRequest{value: val, isSet: true}
}

func (v NullableChannelAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


