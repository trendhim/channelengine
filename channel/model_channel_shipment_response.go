/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChannelShipmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelShipmentResponse{}

// ChannelShipmentResponse struct for ChannelShipmentResponse
type ChannelShipmentResponse struct {
	// The unique order reference used by the Channel.
	ChannelOrderNo string `json:"ChannelOrderNo"`
	// The unique shipment reference used by the Merchant.
	MerchantShipmentNo NullableString `json:"MerchantShipmentNo,omitempty"`
	Lines []ChannelShipmentLineResponse `json:"Lines"`
	// The date at which the shipment was created in ChannelEngine.
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	// The date at which the shipment was last modified in ChannelEngine.
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	// Extra data on the order. Each item must have an unqiue key
	ExtraData map[string]string `json:"ExtraData,omitempty"`
	// The unique shipping reference used by the Shipping carrier (track&trace number).
	TrackTraceNo NullableString `json:"TrackTraceNo,omitempty"`
	// A link to a page of the carrier where the customer can track the shipping of her package.
	TrackTraceUrl NullableString `json:"TrackTraceUrl,omitempty"`
	// The unique return shipping reference that may be used by the Shipping carrier (track & trace number) if the shipment is returned.
	ReturnTrackTraceNo NullableString `json:"ReturnTrackTraceNo,omitempty"`
	// Shipment method: the carrier used for shipping the package. E.g. DHL, postNL.
	Method NullableString `json:"Method,omitempty"`
	// The code of the country from where the package is being shipped.
	ShippedFromCountryCode NullableString `json:"ShippedFromCountryCode,omitempty"`
	// The id of the stock location where you ship the package from
	ShippedFromStockLocationId NullableInt32 `json:"ShippedFromStockLocationId,omitempty"`
	// The date at which the shipment was originally created in the source system (if available).
	ShipmentDate NullableTime `json:"ShipmentDate,omitempty"`
}

type _ChannelShipmentResponse ChannelShipmentResponse

// NewChannelShipmentResponse instantiates a new ChannelShipmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelShipmentResponse(channelOrderNo string, lines []ChannelShipmentLineResponse) *ChannelShipmentResponse {
	this := ChannelShipmentResponse{}
	this.ChannelOrderNo = channelOrderNo
	this.Lines = lines
	return &this
}

// NewChannelShipmentResponseWithDefaults instantiates a new ChannelShipmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelShipmentResponseWithDefaults() *ChannelShipmentResponse {
	this := ChannelShipmentResponse{}
	return &this
}

// GetChannelOrderNo returns the ChannelOrderNo field value
func (o *ChannelShipmentResponse) GetChannelOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelOrderNo
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value
// and a boolean to check if the value has been set.
func (o *ChannelShipmentResponse) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelOrderNo, true
}

// SetChannelOrderNo sets field value
func (o *ChannelShipmentResponse) SetChannelOrderNo(v string) {
	o.ChannelOrderNo = v
}

// GetMerchantShipmentNo returns the MerchantShipmentNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetMerchantShipmentNo() string {
	if o == nil || IsNil(o.MerchantShipmentNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantShipmentNo.Get()
}

// GetMerchantShipmentNoOk returns a tuple with the MerchantShipmentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetMerchantShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantShipmentNo.Get(), o.MerchantShipmentNo.IsSet()
}

// HasMerchantShipmentNo returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasMerchantShipmentNo() bool {
	if o != nil && o.MerchantShipmentNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantShipmentNo gets a reference to the given NullableString and assigns it to the MerchantShipmentNo field.
func (o *ChannelShipmentResponse) SetMerchantShipmentNo(v string) {
	o.MerchantShipmentNo.Set(&v)
}
// SetMerchantShipmentNoNil sets the value for MerchantShipmentNo to be an explicit nil
func (o *ChannelShipmentResponse) SetMerchantShipmentNoNil() {
	o.MerchantShipmentNo.Set(nil)
}

// UnsetMerchantShipmentNo ensures that no value is present for MerchantShipmentNo, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetMerchantShipmentNo() {
	o.MerchantShipmentNo.Unset()
}

// GetLines returns the Lines field value
func (o *ChannelShipmentResponse) GetLines() []ChannelShipmentLineResponse {
	if o == nil {
		var ret []ChannelShipmentLineResponse
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *ChannelShipmentResponse) GetLinesOk() ([]ChannelShipmentLineResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *ChannelShipmentResponse) SetLines(v []ChannelShipmentLineResponse) {
	o.Lines = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ChannelShipmentResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelShipmentResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ChannelShipmentResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ChannelShipmentResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelShipmentResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ChannelShipmentResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *ChannelShipmentResponse) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

// GetTrackTraceNo returns the TrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetTrackTraceNo() string {
	if o == nil || IsNil(o.TrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceNo.Get()
}

// GetTrackTraceNoOk returns a tuple with the TrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceNo.Get(), o.TrackTraceNo.IsSet()
}

// HasTrackTraceNo returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasTrackTraceNo() bool {
	if o != nil && o.TrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceNo gets a reference to the given NullableString and assigns it to the TrackTraceNo field.
func (o *ChannelShipmentResponse) SetTrackTraceNo(v string) {
	o.TrackTraceNo.Set(&v)
}
// SetTrackTraceNoNil sets the value for TrackTraceNo to be an explicit nil
func (o *ChannelShipmentResponse) SetTrackTraceNoNil() {
	o.TrackTraceNo.Set(nil)
}

// UnsetTrackTraceNo ensures that no value is present for TrackTraceNo, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetTrackTraceNo() {
	o.TrackTraceNo.Unset()
}

// GetTrackTraceUrl returns the TrackTraceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetTrackTraceUrl() string {
	if o == nil || IsNil(o.TrackTraceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceUrl.Get()
}

// GetTrackTraceUrlOk returns a tuple with the TrackTraceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetTrackTraceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceUrl.Get(), o.TrackTraceUrl.IsSet()
}

// HasTrackTraceUrl returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasTrackTraceUrl() bool {
	if o != nil && o.TrackTraceUrl.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceUrl gets a reference to the given NullableString and assigns it to the TrackTraceUrl field.
func (o *ChannelShipmentResponse) SetTrackTraceUrl(v string) {
	o.TrackTraceUrl.Set(&v)
}
// SetTrackTraceUrlNil sets the value for TrackTraceUrl to be an explicit nil
func (o *ChannelShipmentResponse) SetTrackTraceUrlNil() {
	o.TrackTraceUrl.Set(nil)
}

// UnsetTrackTraceUrl ensures that no value is present for TrackTraceUrl, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetTrackTraceUrl() {
	o.TrackTraceUrl.Unset()
}

// GetReturnTrackTraceNo returns the ReturnTrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetReturnTrackTraceNo() string {
	if o == nil || IsNil(o.ReturnTrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnTrackTraceNo.Get()
}

// GetReturnTrackTraceNoOk returns a tuple with the ReturnTrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetReturnTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnTrackTraceNo.Get(), o.ReturnTrackTraceNo.IsSet()
}

// HasReturnTrackTraceNo returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasReturnTrackTraceNo() bool {
	if o != nil && o.ReturnTrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetReturnTrackTraceNo gets a reference to the given NullableString and assigns it to the ReturnTrackTraceNo field.
func (o *ChannelShipmentResponse) SetReturnTrackTraceNo(v string) {
	o.ReturnTrackTraceNo.Set(&v)
}
// SetReturnTrackTraceNoNil sets the value for ReturnTrackTraceNo to be an explicit nil
func (o *ChannelShipmentResponse) SetReturnTrackTraceNoNil() {
	o.ReturnTrackTraceNo.Set(nil)
}

// UnsetReturnTrackTraceNo ensures that no value is present for ReturnTrackTraceNo, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetReturnTrackTraceNo() {
	o.ReturnTrackTraceNo.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *ChannelShipmentResponse) SetMethod(v string) {
	o.Method.Set(&v)
}
// SetMethodNil sets the value for Method to be an explicit nil
func (o *ChannelShipmentResponse) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetMethod() {
	o.Method.Unset()
}

// GetShippedFromCountryCode returns the ShippedFromCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetShippedFromCountryCode() string {
	if o == nil || IsNil(o.ShippedFromCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.ShippedFromCountryCode.Get()
}

// GetShippedFromCountryCodeOk returns a tuple with the ShippedFromCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetShippedFromCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromCountryCode.Get(), o.ShippedFromCountryCode.IsSet()
}

// HasShippedFromCountryCode returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasShippedFromCountryCode() bool {
	if o != nil && o.ShippedFromCountryCode.IsSet() {
		return true
	}

	return false
}

// SetShippedFromCountryCode gets a reference to the given NullableString and assigns it to the ShippedFromCountryCode field.
func (o *ChannelShipmentResponse) SetShippedFromCountryCode(v string) {
	o.ShippedFromCountryCode.Set(&v)
}
// SetShippedFromCountryCodeNil sets the value for ShippedFromCountryCode to be an explicit nil
func (o *ChannelShipmentResponse) SetShippedFromCountryCodeNil() {
	o.ShippedFromCountryCode.Set(nil)
}

// UnsetShippedFromCountryCode ensures that no value is present for ShippedFromCountryCode, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetShippedFromCountryCode() {
	o.ShippedFromCountryCode.Unset()
}

// GetShippedFromStockLocationId returns the ShippedFromStockLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetShippedFromStockLocationId() int32 {
	if o == nil || IsNil(o.ShippedFromStockLocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippedFromStockLocationId.Get()
}

// GetShippedFromStockLocationIdOk returns a tuple with the ShippedFromStockLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetShippedFromStockLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromStockLocationId.Get(), o.ShippedFromStockLocationId.IsSet()
}

// HasShippedFromStockLocationId returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasShippedFromStockLocationId() bool {
	if o != nil && o.ShippedFromStockLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippedFromStockLocationId gets a reference to the given NullableInt32 and assigns it to the ShippedFromStockLocationId field.
func (o *ChannelShipmentResponse) SetShippedFromStockLocationId(v int32) {
	o.ShippedFromStockLocationId.Set(&v)
}
// SetShippedFromStockLocationIdNil sets the value for ShippedFromStockLocationId to be an explicit nil
func (o *ChannelShipmentResponse) SetShippedFromStockLocationIdNil() {
	o.ShippedFromStockLocationId.Set(nil)
}

// UnsetShippedFromStockLocationId ensures that no value is present for ShippedFromStockLocationId, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetShippedFromStockLocationId() {
	o.ShippedFromStockLocationId.Unset()
}

// GetShipmentDate returns the ShipmentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelShipmentResponse) GetShipmentDate() time.Time {
	if o == nil || IsNil(o.ShipmentDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ShipmentDate.Get()
}

// GetShipmentDateOk returns a tuple with the ShipmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelShipmentResponse) GetShipmentDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentDate.Get(), o.ShipmentDate.IsSet()
}

// HasShipmentDate returns a boolean if a field has been set.
func (o *ChannelShipmentResponse) HasShipmentDate() bool {
	if o != nil && o.ShipmentDate.IsSet() {
		return true
	}

	return false
}

// SetShipmentDate gets a reference to the given NullableTime and assigns it to the ShipmentDate field.
func (o *ChannelShipmentResponse) SetShipmentDate(v time.Time) {
	o.ShipmentDate.Set(&v)
}
// SetShipmentDateNil sets the value for ShipmentDate to be an explicit nil
func (o *ChannelShipmentResponse) SetShipmentDateNil() {
	o.ShipmentDate.Set(nil)
}

// UnsetShipmentDate ensures that no value is present for ShipmentDate, not even an explicit nil
func (o *ChannelShipmentResponse) UnsetShipmentDate() {
	o.ShipmentDate.Unset()
}

func (o ChannelShipmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelShipmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ChannelOrderNo"] = o.ChannelOrderNo
	if o.MerchantShipmentNo.IsSet() {
		toSerialize["MerchantShipmentNo"] = o.MerchantShipmentNo.Get()
	}
	toSerialize["Lines"] = o.Lines
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.TrackTraceNo.IsSet() {
		toSerialize["TrackTraceNo"] = o.TrackTraceNo.Get()
	}
	if o.TrackTraceUrl.IsSet() {
		toSerialize["TrackTraceUrl"] = o.TrackTraceUrl.Get()
	}
	if o.ReturnTrackTraceNo.IsSet() {
		toSerialize["ReturnTrackTraceNo"] = o.ReturnTrackTraceNo.Get()
	}
	if o.Method.IsSet() {
		toSerialize["Method"] = o.Method.Get()
	}
	if o.ShippedFromCountryCode.IsSet() {
		toSerialize["ShippedFromCountryCode"] = o.ShippedFromCountryCode.Get()
	}
	if o.ShippedFromStockLocationId.IsSet() {
		toSerialize["ShippedFromStockLocationId"] = o.ShippedFromStockLocationId.Get()
	}
	if o.ShipmentDate.IsSet() {
		toSerialize["ShipmentDate"] = o.ShipmentDate.Get()
	}
	return toSerialize, nil
}

func (o *ChannelShipmentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelOrderNo",
		"Lines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelShipmentResponse := _ChannelShipmentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelShipmentResponse)

	if err != nil {
		return err
	}

	*o = ChannelShipmentResponse(varChannelShipmentResponse)

	return err
}

type NullableChannelShipmentResponse struct {
	value *ChannelShipmentResponse
	isSet bool
}

func (v NullableChannelShipmentResponse) Get() *ChannelShipmentResponse {
	return v.value
}

func (v *NullableChannelShipmentResponse) Set(val *ChannelShipmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelShipmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelShipmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelShipmentResponse(val *ChannelShipmentResponse) *NullableChannelShipmentResponse {
	return &NullableChannelShipmentResponse{value: val, isSet: true}
}

func (v NullableChannelShipmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelShipmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


