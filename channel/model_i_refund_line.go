/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
)

// checks if the IRefundLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IRefundLine{}

// IRefundLine struct for IRefundLine
type IRefundLine struct {
	Id *int32 `json:"Id,omitempty"`
	LineAmountInclTax *float32 `json:"LineAmountInclTax,omitempty"`
	OriginalLineAmountInclTax *float32 `json:"OriginalLineAmountInclTax,omitempty"`
	LineTotalInclTax *float32 `json:"LineTotalInclTax,omitempty"`
	OriginalLineTotalInclTax *float32 `json:"OriginalLineTotalInclTax,omitempty"`
	OriginalUnitTax *float32 `json:"OriginalUnitTax,omitempty"`
	RefundId *int32 `json:"RefundId,omitempty"`
	OrderLineId *int32 `json:"OrderLineId,omitempty"`
	ReturnLineId NullableInt32 `json:"ReturnLineId,omitempty"`
	ChannelOrderLineNo NullableString `json:"ChannelOrderLineNo,omitempty"`
	MerchantRefundLineNo NullableString `json:"MerchantRefundLineNo,omitempty"`
	ChannelProductNo NullableString `json:"ChannelProductNo,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	DeletedAt NullableTime `json:"DeletedAt,omitempty"`
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	ProductName NullableString `json:"ProductName,omitempty"`
	ProductId NullableInt32 `json:"ProductId,omitempty"`
}

// NewIRefundLine instantiates a new IRefundLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIRefundLine() *IRefundLine {
	this := IRefundLine{}
	return &this
}

// NewIRefundLineWithDefaults instantiates a new IRefundLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIRefundLineWithDefaults() *IRefundLine {
	this := IRefundLine{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IRefundLine) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IRefundLine) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IRefundLine) SetId(v int32) {
	o.Id = &v
}

// GetLineAmountInclTax returns the LineAmountInclTax field value if set, zero value otherwise.
func (o *IRefundLine) GetLineAmountInclTax() float32 {
	if o == nil || IsNil(o.LineAmountInclTax) {
		var ret float32
		return ret
	}
	return *o.LineAmountInclTax
}

// GetLineAmountInclTaxOk returns a tuple with the LineAmountInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetLineAmountInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.LineAmountInclTax) {
		return nil, false
	}
	return o.LineAmountInclTax, true
}

// HasLineAmountInclTax returns a boolean if a field has been set.
func (o *IRefundLine) HasLineAmountInclTax() bool {
	if o != nil && !IsNil(o.LineAmountInclTax) {
		return true
	}

	return false
}

// SetLineAmountInclTax gets a reference to the given float32 and assigns it to the LineAmountInclTax field.
func (o *IRefundLine) SetLineAmountInclTax(v float32) {
	o.LineAmountInclTax = &v
}

// GetOriginalLineAmountInclTax returns the OriginalLineAmountInclTax field value if set, zero value otherwise.
func (o *IRefundLine) GetOriginalLineAmountInclTax() float32 {
	if o == nil || IsNil(o.OriginalLineAmountInclTax) {
		var ret float32
		return ret
	}
	return *o.OriginalLineAmountInclTax
}

// GetOriginalLineAmountInclTaxOk returns a tuple with the OriginalLineAmountInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetOriginalLineAmountInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalLineAmountInclTax) {
		return nil, false
	}
	return o.OriginalLineAmountInclTax, true
}

// HasOriginalLineAmountInclTax returns a boolean if a field has been set.
func (o *IRefundLine) HasOriginalLineAmountInclTax() bool {
	if o != nil && !IsNil(o.OriginalLineAmountInclTax) {
		return true
	}

	return false
}

// SetOriginalLineAmountInclTax gets a reference to the given float32 and assigns it to the OriginalLineAmountInclTax field.
func (o *IRefundLine) SetOriginalLineAmountInclTax(v float32) {
	o.OriginalLineAmountInclTax = &v
}

// GetLineTotalInclTax returns the LineTotalInclTax field value if set, zero value otherwise.
func (o *IRefundLine) GetLineTotalInclTax() float32 {
	if o == nil || IsNil(o.LineTotalInclTax) {
		var ret float32
		return ret
	}
	return *o.LineTotalInclTax
}

// GetLineTotalInclTaxOk returns a tuple with the LineTotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetLineTotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.LineTotalInclTax) {
		return nil, false
	}
	return o.LineTotalInclTax, true
}

// HasLineTotalInclTax returns a boolean if a field has been set.
func (o *IRefundLine) HasLineTotalInclTax() bool {
	if o != nil && !IsNil(o.LineTotalInclTax) {
		return true
	}

	return false
}

// SetLineTotalInclTax gets a reference to the given float32 and assigns it to the LineTotalInclTax field.
func (o *IRefundLine) SetLineTotalInclTax(v float32) {
	o.LineTotalInclTax = &v
}

// GetOriginalLineTotalInclTax returns the OriginalLineTotalInclTax field value if set, zero value otherwise.
func (o *IRefundLine) GetOriginalLineTotalInclTax() float32 {
	if o == nil || IsNil(o.OriginalLineTotalInclTax) {
		var ret float32
		return ret
	}
	return *o.OriginalLineTotalInclTax
}

// GetOriginalLineTotalInclTaxOk returns a tuple with the OriginalLineTotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetOriginalLineTotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalLineTotalInclTax) {
		return nil, false
	}
	return o.OriginalLineTotalInclTax, true
}

// HasOriginalLineTotalInclTax returns a boolean if a field has been set.
func (o *IRefundLine) HasOriginalLineTotalInclTax() bool {
	if o != nil && !IsNil(o.OriginalLineTotalInclTax) {
		return true
	}

	return false
}

// SetOriginalLineTotalInclTax gets a reference to the given float32 and assigns it to the OriginalLineTotalInclTax field.
func (o *IRefundLine) SetOriginalLineTotalInclTax(v float32) {
	o.OriginalLineTotalInclTax = &v
}

// GetOriginalUnitTax returns the OriginalUnitTax field value if set, zero value otherwise.
func (o *IRefundLine) GetOriginalUnitTax() float32 {
	if o == nil || IsNil(o.OriginalUnitTax) {
		var ret float32
		return ret
	}
	return *o.OriginalUnitTax
}

// GetOriginalUnitTaxOk returns a tuple with the OriginalUnitTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetOriginalUnitTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalUnitTax) {
		return nil, false
	}
	return o.OriginalUnitTax, true
}

// HasOriginalUnitTax returns a boolean if a field has been set.
func (o *IRefundLine) HasOriginalUnitTax() bool {
	if o != nil && !IsNil(o.OriginalUnitTax) {
		return true
	}

	return false
}

// SetOriginalUnitTax gets a reference to the given float32 and assigns it to the OriginalUnitTax field.
func (o *IRefundLine) SetOriginalUnitTax(v float32) {
	o.OriginalUnitTax = &v
}

// GetRefundId returns the RefundId field value if set, zero value otherwise.
func (o *IRefundLine) GetRefundId() int32 {
	if o == nil || IsNil(o.RefundId) {
		var ret int32
		return ret
	}
	return *o.RefundId
}

// GetRefundIdOk returns a tuple with the RefundId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetRefundIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RefundId) {
		return nil, false
	}
	return o.RefundId, true
}

// HasRefundId returns a boolean if a field has been set.
func (o *IRefundLine) HasRefundId() bool {
	if o != nil && !IsNil(o.RefundId) {
		return true
	}

	return false
}

// SetRefundId gets a reference to the given int32 and assigns it to the RefundId field.
func (o *IRefundLine) SetRefundId(v int32) {
	o.RefundId = &v
}

// GetOrderLineId returns the OrderLineId field value if set, zero value otherwise.
func (o *IRefundLine) GetOrderLineId() int32 {
	if o == nil || IsNil(o.OrderLineId) {
		var ret int32
		return ret
	}
	return *o.OrderLineId
}

// GetOrderLineIdOk returns a tuple with the OrderLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetOrderLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderLineId) {
		return nil, false
	}
	return o.OrderLineId, true
}

// HasOrderLineId returns a boolean if a field has been set.
func (o *IRefundLine) HasOrderLineId() bool {
	if o != nil && !IsNil(o.OrderLineId) {
		return true
	}

	return false
}

// SetOrderLineId gets a reference to the given int32 and assigns it to the OrderLineId field.
func (o *IRefundLine) SetOrderLineId(v int32) {
	o.OrderLineId = &v
}

// GetReturnLineId returns the ReturnLineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetReturnLineId() int32 {
	if o == nil || IsNil(o.ReturnLineId.Get()) {
		var ret int32
		return ret
	}
	return *o.ReturnLineId.Get()
}

// GetReturnLineIdOk returns a tuple with the ReturnLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetReturnLineIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnLineId.Get(), o.ReturnLineId.IsSet()
}

// HasReturnLineId returns a boolean if a field has been set.
func (o *IRefundLine) HasReturnLineId() bool {
	if o != nil && o.ReturnLineId.IsSet() {
		return true
	}

	return false
}

// SetReturnLineId gets a reference to the given NullableInt32 and assigns it to the ReturnLineId field.
func (o *IRefundLine) SetReturnLineId(v int32) {
	o.ReturnLineId.Set(&v)
}
// SetReturnLineIdNil sets the value for ReturnLineId to be an explicit nil
func (o *IRefundLine) SetReturnLineIdNil() {
	o.ReturnLineId.Set(nil)
}

// UnsetReturnLineId ensures that no value is present for ReturnLineId, not even an explicit nil
func (o *IRefundLine) UnsetReturnLineId() {
	o.ReturnLineId.Unset()
}

// GetChannelOrderLineNo returns the ChannelOrderLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetChannelOrderLineNo() string {
	if o == nil || IsNil(o.ChannelOrderLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelOrderLineNo.Get()
}

// GetChannelOrderLineNoOk returns a tuple with the ChannelOrderLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetChannelOrderLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelOrderLineNo.Get(), o.ChannelOrderLineNo.IsSet()
}

// HasChannelOrderLineNo returns a boolean if a field has been set.
func (o *IRefundLine) HasChannelOrderLineNo() bool {
	if o != nil && o.ChannelOrderLineNo.IsSet() {
		return true
	}

	return false
}

// SetChannelOrderLineNo gets a reference to the given NullableString and assigns it to the ChannelOrderLineNo field.
func (o *IRefundLine) SetChannelOrderLineNo(v string) {
	o.ChannelOrderLineNo.Set(&v)
}
// SetChannelOrderLineNoNil sets the value for ChannelOrderLineNo to be an explicit nil
func (o *IRefundLine) SetChannelOrderLineNoNil() {
	o.ChannelOrderLineNo.Set(nil)
}

// UnsetChannelOrderLineNo ensures that no value is present for ChannelOrderLineNo, not even an explicit nil
func (o *IRefundLine) UnsetChannelOrderLineNo() {
	o.ChannelOrderLineNo.Unset()
}

// GetMerchantRefundLineNo returns the MerchantRefundLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetMerchantRefundLineNo() string {
	if o == nil || IsNil(o.MerchantRefundLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantRefundLineNo.Get()
}

// GetMerchantRefundLineNoOk returns a tuple with the MerchantRefundLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetMerchantRefundLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantRefundLineNo.Get(), o.MerchantRefundLineNo.IsSet()
}

// HasMerchantRefundLineNo returns a boolean if a field has been set.
func (o *IRefundLine) HasMerchantRefundLineNo() bool {
	if o != nil && o.MerchantRefundLineNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantRefundLineNo gets a reference to the given NullableString and assigns it to the MerchantRefundLineNo field.
func (o *IRefundLine) SetMerchantRefundLineNo(v string) {
	o.MerchantRefundLineNo.Set(&v)
}
// SetMerchantRefundLineNoNil sets the value for MerchantRefundLineNo to be an explicit nil
func (o *IRefundLine) SetMerchantRefundLineNoNil() {
	o.MerchantRefundLineNo.Set(nil)
}

// UnsetMerchantRefundLineNo ensures that no value is present for MerchantRefundLineNo, not even an explicit nil
func (o *IRefundLine) UnsetMerchantRefundLineNo() {
	o.MerchantRefundLineNo.Unset()
}

// GetChannelProductNo returns the ChannelProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetChannelProductNo() string {
	if o == nil || IsNil(o.ChannelProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelProductNo.Get()
}

// GetChannelProductNoOk returns a tuple with the ChannelProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetChannelProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelProductNo.Get(), o.ChannelProductNo.IsSet()
}

// HasChannelProductNo returns a boolean if a field has been set.
func (o *IRefundLine) HasChannelProductNo() bool {
	if o != nil && o.ChannelProductNo.IsSet() {
		return true
	}

	return false
}

// SetChannelProductNo gets a reference to the given NullableString and assigns it to the ChannelProductNo field.
func (o *IRefundLine) SetChannelProductNo(v string) {
	o.ChannelProductNo.Set(&v)
}
// SetChannelProductNoNil sets the value for ChannelProductNo to be an explicit nil
func (o *IRefundLine) SetChannelProductNoNil() {
	o.ChannelProductNo.Set(nil)
}

// UnsetChannelProductNo ensures that no value is present for ChannelProductNo, not even an explicit nil
func (o *IRefundLine) UnsetChannelProductNo() {
	o.ChannelProductNo.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IRefundLine) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IRefundLine) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IRefundLine) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IRefundLine) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IRefundLine) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IRefundLine) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *IRefundLine) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *IRefundLine) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *IRefundLine) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *IRefundLine) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *IRefundLine) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *IRefundLine) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *IRefundLine) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *IRefundLine) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *IRefundLine) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *IRefundLine) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *IRefundLine) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *IRefundLine) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *IRefundLine) UnsetProductName() {
	o.ProductName.Unset()
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IRefundLine) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IRefundLine) GetProductIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *IRefundLine) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableInt32 and assigns it to the ProductId field.
func (o *IRefundLine) SetProductId(v int32) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *IRefundLine) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *IRefundLine) UnsetProductId() {
	o.ProductId.Unset()
}

func (o IRefundLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IRefundLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.LineAmountInclTax) {
		toSerialize["LineAmountInclTax"] = o.LineAmountInclTax
	}
	if !IsNil(o.OriginalLineAmountInclTax) {
		toSerialize["OriginalLineAmountInclTax"] = o.OriginalLineAmountInclTax
	}
	if !IsNil(o.LineTotalInclTax) {
		toSerialize["LineTotalInclTax"] = o.LineTotalInclTax
	}
	if !IsNil(o.OriginalLineTotalInclTax) {
		toSerialize["OriginalLineTotalInclTax"] = o.OriginalLineTotalInclTax
	}
	if !IsNil(o.OriginalUnitTax) {
		toSerialize["OriginalUnitTax"] = o.OriginalUnitTax
	}
	if !IsNil(o.RefundId) {
		toSerialize["RefundId"] = o.RefundId
	}
	if !IsNil(o.OrderLineId) {
		toSerialize["OrderLineId"] = o.OrderLineId
	}
	if o.ReturnLineId.IsSet() {
		toSerialize["ReturnLineId"] = o.ReturnLineId.Get()
	}
	if o.ChannelOrderLineNo.IsSet() {
		toSerialize["ChannelOrderLineNo"] = o.ChannelOrderLineNo.Get()
	}
	if o.MerchantRefundLineNo.IsSet() {
		toSerialize["MerchantRefundLineNo"] = o.MerchantRefundLineNo.Get()
	}
	if o.ChannelProductNo.IsSet() {
		toSerialize["ChannelProductNo"] = o.ChannelProductNo.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.DeletedAt.IsSet() {
		toSerialize["DeletedAt"] = o.DeletedAt.Get()
	}
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	if o.ProductName.IsSet() {
		toSerialize["ProductName"] = o.ProductName.Get()
	}
	if o.ProductId.IsSet() {
		toSerialize["ProductId"] = o.ProductId.Get()
	}
	return toSerialize, nil
}

type NullableIRefundLine struct {
	value *IRefundLine
	isSet bool
}

func (v NullableIRefundLine) Get() *IRefundLine {
	return v.value
}

func (v *NullableIRefundLine) Set(val *IRefundLine) {
	v.value = val
	v.isSet = true
}

func (v NullableIRefundLine) IsSet() bool {
	return v.isSet
}

func (v *NullableIRefundLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIRefundLine(val *IRefundLine) *NullableIRefundLine {
	return &NullableIRefundLine{value: val, isSet: true}
}

func (v NullableIRefundLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIRefundLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


