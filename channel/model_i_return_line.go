/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
)

// checks if the IReturnLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IReturnLine{}

// IReturnLine struct for IReturnLine
type IReturnLine struct {
	Id *int32 `json:"Id,omitempty"`
	ReturnId *int32 `json:"ReturnId,omitempty"`
	OrderLineId *int32 `json:"OrderLineId,omitempty"`
	MerchantReturnLineNo NullableString `json:"MerchantReturnLineNo,omitempty"`
	ChannelReturnLineNo NullableString `json:"ChannelReturnLineNo,omitempty"`
	MerchantOrderLineNo NullableString `json:"MerchantOrderLineNo,omitempty"`
	ChannelOrderLineNo NullableString `json:"ChannelOrderLineNo,omitempty"`
	Quantity *int32 `json:"Quantity,omitempty"`
	HandlingResults []IReturnLineHandlingResult `json:"HandlingResults,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	DeletedAt NullableTime `json:"DeletedAt,omitempty"`
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	ProductName NullableString `json:"ProductName,omitempty"`
	ProductId NullableInt32 `json:"ProductId,omitempty"`
}

// NewIReturnLine instantiates a new IReturnLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIReturnLine() *IReturnLine {
	this := IReturnLine{}
	return &this
}

// NewIReturnLineWithDefaults instantiates a new IReturnLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIReturnLineWithDefaults() *IReturnLine {
	this := IReturnLine{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IReturnLine) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IReturnLine) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IReturnLine) SetId(v int32) {
	o.Id = &v
}

// GetReturnId returns the ReturnId field value if set, zero value otherwise.
func (o *IReturnLine) GetReturnId() int32 {
	if o == nil || IsNil(o.ReturnId) {
		var ret int32
		return ret
	}
	return *o.ReturnId
}

// GetReturnIdOk returns a tuple with the ReturnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetReturnIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReturnId) {
		return nil, false
	}
	return o.ReturnId, true
}

// HasReturnId returns a boolean if a field has been set.
func (o *IReturnLine) HasReturnId() bool {
	if o != nil && !IsNil(o.ReturnId) {
		return true
	}

	return false
}

// SetReturnId gets a reference to the given int32 and assigns it to the ReturnId field.
func (o *IReturnLine) SetReturnId(v int32) {
	o.ReturnId = &v
}

// GetOrderLineId returns the OrderLineId field value if set, zero value otherwise.
func (o *IReturnLine) GetOrderLineId() int32 {
	if o == nil || IsNil(o.OrderLineId) {
		var ret int32
		return ret
	}
	return *o.OrderLineId
}

// GetOrderLineIdOk returns a tuple with the OrderLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetOrderLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderLineId) {
		return nil, false
	}
	return o.OrderLineId, true
}

// HasOrderLineId returns a boolean if a field has been set.
func (o *IReturnLine) HasOrderLineId() bool {
	if o != nil && !IsNil(o.OrderLineId) {
		return true
	}

	return false
}

// SetOrderLineId gets a reference to the given int32 and assigns it to the OrderLineId field.
func (o *IReturnLine) SetOrderLineId(v int32) {
	o.OrderLineId = &v
}

// GetMerchantReturnLineNo returns the MerchantReturnLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetMerchantReturnLineNo() string {
	if o == nil || IsNil(o.MerchantReturnLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantReturnLineNo.Get()
}

// GetMerchantReturnLineNoOk returns a tuple with the MerchantReturnLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetMerchantReturnLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantReturnLineNo.Get(), o.MerchantReturnLineNo.IsSet()
}

// HasMerchantReturnLineNo returns a boolean if a field has been set.
func (o *IReturnLine) HasMerchantReturnLineNo() bool {
	if o != nil && o.MerchantReturnLineNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantReturnLineNo gets a reference to the given NullableString and assigns it to the MerchantReturnLineNo field.
func (o *IReturnLine) SetMerchantReturnLineNo(v string) {
	o.MerchantReturnLineNo.Set(&v)
}
// SetMerchantReturnLineNoNil sets the value for MerchantReturnLineNo to be an explicit nil
func (o *IReturnLine) SetMerchantReturnLineNoNil() {
	o.MerchantReturnLineNo.Set(nil)
}

// UnsetMerchantReturnLineNo ensures that no value is present for MerchantReturnLineNo, not even an explicit nil
func (o *IReturnLine) UnsetMerchantReturnLineNo() {
	o.MerchantReturnLineNo.Unset()
}

// GetChannelReturnLineNo returns the ChannelReturnLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetChannelReturnLineNo() string {
	if o == nil || IsNil(o.ChannelReturnLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelReturnLineNo.Get()
}

// GetChannelReturnLineNoOk returns a tuple with the ChannelReturnLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetChannelReturnLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelReturnLineNo.Get(), o.ChannelReturnLineNo.IsSet()
}

// HasChannelReturnLineNo returns a boolean if a field has been set.
func (o *IReturnLine) HasChannelReturnLineNo() bool {
	if o != nil && o.ChannelReturnLineNo.IsSet() {
		return true
	}

	return false
}

// SetChannelReturnLineNo gets a reference to the given NullableString and assigns it to the ChannelReturnLineNo field.
func (o *IReturnLine) SetChannelReturnLineNo(v string) {
	o.ChannelReturnLineNo.Set(&v)
}
// SetChannelReturnLineNoNil sets the value for ChannelReturnLineNo to be an explicit nil
func (o *IReturnLine) SetChannelReturnLineNoNil() {
	o.ChannelReturnLineNo.Set(nil)
}

// UnsetChannelReturnLineNo ensures that no value is present for ChannelReturnLineNo, not even an explicit nil
func (o *IReturnLine) UnsetChannelReturnLineNo() {
	o.ChannelReturnLineNo.Unset()
}

// GetMerchantOrderLineNo returns the MerchantOrderLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetMerchantOrderLineNo() string {
	if o == nil || IsNil(o.MerchantOrderLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantOrderLineNo.Get()
}

// GetMerchantOrderLineNoOk returns a tuple with the MerchantOrderLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetMerchantOrderLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantOrderLineNo.Get(), o.MerchantOrderLineNo.IsSet()
}

// HasMerchantOrderLineNo returns a boolean if a field has been set.
func (o *IReturnLine) HasMerchantOrderLineNo() bool {
	if o != nil && o.MerchantOrderLineNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantOrderLineNo gets a reference to the given NullableString and assigns it to the MerchantOrderLineNo field.
func (o *IReturnLine) SetMerchantOrderLineNo(v string) {
	o.MerchantOrderLineNo.Set(&v)
}
// SetMerchantOrderLineNoNil sets the value for MerchantOrderLineNo to be an explicit nil
func (o *IReturnLine) SetMerchantOrderLineNoNil() {
	o.MerchantOrderLineNo.Set(nil)
}

// UnsetMerchantOrderLineNo ensures that no value is present for MerchantOrderLineNo, not even an explicit nil
func (o *IReturnLine) UnsetMerchantOrderLineNo() {
	o.MerchantOrderLineNo.Unset()
}

// GetChannelOrderLineNo returns the ChannelOrderLineNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetChannelOrderLineNo() string {
	if o == nil || IsNil(o.ChannelOrderLineNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelOrderLineNo.Get()
}

// GetChannelOrderLineNoOk returns a tuple with the ChannelOrderLineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetChannelOrderLineNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelOrderLineNo.Get(), o.ChannelOrderLineNo.IsSet()
}

// HasChannelOrderLineNo returns a boolean if a field has been set.
func (o *IReturnLine) HasChannelOrderLineNo() bool {
	if o != nil && o.ChannelOrderLineNo.IsSet() {
		return true
	}

	return false
}

// SetChannelOrderLineNo gets a reference to the given NullableString and assigns it to the ChannelOrderLineNo field.
func (o *IReturnLine) SetChannelOrderLineNo(v string) {
	o.ChannelOrderLineNo.Set(&v)
}
// SetChannelOrderLineNoNil sets the value for ChannelOrderLineNo to be an explicit nil
func (o *IReturnLine) SetChannelOrderLineNoNil() {
	o.ChannelOrderLineNo.Set(nil)
}

// UnsetChannelOrderLineNo ensures that no value is present for ChannelOrderLineNo, not even an explicit nil
func (o *IReturnLine) UnsetChannelOrderLineNo() {
	o.ChannelOrderLineNo.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *IReturnLine) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *IReturnLine) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *IReturnLine) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetHandlingResults returns the HandlingResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetHandlingResults() []IReturnLineHandlingResult {
	if o == nil {
		var ret []IReturnLineHandlingResult
		return ret
	}
	return o.HandlingResults
}

// GetHandlingResultsOk returns a tuple with the HandlingResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetHandlingResultsOk() ([]IReturnLineHandlingResult, bool) {
	if o == nil || IsNil(o.HandlingResults) {
		return nil, false
	}
	return o.HandlingResults, true
}

// HasHandlingResults returns a boolean if a field has been set.
func (o *IReturnLine) HasHandlingResults() bool {
	if o != nil && !IsNil(o.HandlingResults) {
		return true
	}

	return false
}

// SetHandlingResults gets a reference to the given []IReturnLineHandlingResult and assigns it to the HandlingResults field.
func (o *IReturnLine) SetHandlingResults(v []IReturnLineHandlingResult) {
	o.HandlingResults = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IReturnLine) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IReturnLine) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IReturnLine) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IReturnLine) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLine) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IReturnLine) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *IReturnLine) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *IReturnLine) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *IReturnLine) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *IReturnLine) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *IReturnLine) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *IReturnLine) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *IReturnLine) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *IReturnLine) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *IReturnLine) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *IReturnLine) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *IReturnLine) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *IReturnLine) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *IReturnLine) UnsetProductName() {
	o.ProductName.Unset()
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLine) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLine) GetProductIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *IReturnLine) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableInt32 and assigns it to the ProductId field.
func (o *IReturnLine) SetProductId(v int32) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *IReturnLine) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *IReturnLine) UnsetProductId() {
	o.ProductId.Unset()
}

func (o IReturnLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IReturnLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ReturnId) {
		toSerialize["ReturnId"] = o.ReturnId
	}
	if !IsNil(o.OrderLineId) {
		toSerialize["OrderLineId"] = o.OrderLineId
	}
	if o.MerchantReturnLineNo.IsSet() {
		toSerialize["MerchantReturnLineNo"] = o.MerchantReturnLineNo.Get()
	}
	if o.ChannelReturnLineNo.IsSet() {
		toSerialize["ChannelReturnLineNo"] = o.ChannelReturnLineNo.Get()
	}
	if o.MerchantOrderLineNo.IsSet() {
		toSerialize["MerchantOrderLineNo"] = o.MerchantOrderLineNo.Get()
	}
	if o.ChannelOrderLineNo.IsSet() {
		toSerialize["ChannelOrderLineNo"] = o.ChannelOrderLineNo.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	if o.HandlingResults != nil {
		toSerialize["HandlingResults"] = o.HandlingResults
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.DeletedAt.IsSet() {
		toSerialize["DeletedAt"] = o.DeletedAt.Get()
	}
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	if o.ProductName.IsSet() {
		toSerialize["ProductName"] = o.ProductName.Get()
	}
	if o.ProductId.IsSet() {
		toSerialize["ProductId"] = o.ProductId.Get()
	}
	return toSerialize, nil
}

type NullableIReturnLine struct {
	value *IReturnLine
	isSet bool
}

func (v NullableIReturnLine) Get() *IReturnLine {
	return v.value
}

func (v *NullableIReturnLine) Set(val *IReturnLine) {
	v.value = val
	v.isSet = true
}

func (v NullableIReturnLine) IsSet() bool {
	return v.isSet
}

func (v *NullableIReturnLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIReturnLine(val *IReturnLine) *NullableIReturnLine {
	return &NullableIReturnLine{value: val, isSet: true}
}

func (v NullableIReturnLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIReturnLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


