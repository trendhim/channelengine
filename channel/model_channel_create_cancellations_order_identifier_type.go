/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"fmt"
)

// ChannelCreateCancellationsOrderIdentifierType the model 'ChannelCreateCancellationsOrderIdentifierType'
type ChannelCreateCancellationsOrderIdentifierType string

// List of ChannelCreateCancellationsOrderIdentifierType
const (
	CHANNELCREATECANCELLATIONSORDERIDENTIFIERTYPE_ORDER_ID ChannelCreateCancellationsOrderIdentifierType = "ORDER_ID"
	CHANNELCREATECANCELLATIONSORDERIDENTIFIERTYPE_CHANNEL_ORDER_NO ChannelCreateCancellationsOrderIdentifierType = "CHANNEL_ORDER_NO"
	CHANNELCREATECANCELLATIONSORDERIDENTIFIERTYPE_MERCHANT_ORDER_NO ChannelCreateCancellationsOrderIdentifierType = "MERCHANT_ORDER_NO"
)

// All allowed values of ChannelCreateCancellationsOrderIdentifierType enum
var AllowedChannelCreateCancellationsOrderIdentifierTypeEnumValues = []ChannelCreateCancellationsOrderIdentifierType{
	"ORDER_ID",
	"CHANNEL_ORDER_NO",
	"MERCHANT_ORDER_NO",
}

func (v *ChannelCreateCancellationsOrderIdentifierType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ChannelCreateCancellationsOrderIdentifierType(value)
	for _, existing := range AllowedChannelCreateCancellationsOrderIdentifierTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ChannelCreateCancellationsOrderIdentifierType", value)
}

// NewChannelCreateCancellationsOrderIdentifierTypeFromValue returns a pointer to a valid ChannelCreateCancellationsOrderIdentifierType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChannelCreateCancellationsOrderIdentifierTypeFromValue(v string) (*ChannelCreateCancellationsOrderIdentifierType, error) {
	ev := ChannelCreateCancellationsOrderIdentifierType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ChannelCreateCancellationsOrderIdentifierType: valid values are %v", v, AllowedChannelCreateCancellationsOrderIdentifierTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChannelCreateCancellationsOrderIdentifierType) IsValid() bool {
	for _, existing := range AllowedChannelCreateCancellationsOrderIdentifierTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ChannelCreateCancellationsOrderIdentifierType value
func (v ChannelCreateCancellationsOrderIdentifierType) Ptr() *ChannelCreateCancellationsOrderIdentifierType {
	return &v
}

type NullableChannelCreateCancellationsOrderIdentifierType struct {
	value *ChannelCreateCancellationsOrderIdentifierType
	isSet bool
}

func (v NullableChannelCreateCancellationsOrderIdentifierType) Get() *ChannelCreateCancellationsOrderIdentifierType {
	return v.value
}

func (v *NullableChannelCreateCancellationsOrderIdentifierType) Set(val *ChannelCreateCancellationsOrderIdentifierType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelCreateCancellationsOrderIdentifierType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelCreateCancellationsOrderIdentifierType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelCreateCancellationsOrderIdentifierType(val *ChannelCreateCancellationsOrderIdentifierType) *NullableChannelCreateCancellationsOrderIdentifierType {
	return &NullableChannelCreateCancellationsOrderIdentifierType{value: val, isSet: true}
}

func (v NullableChannelCreateCancellationsOrderIdentifierType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelCreateCancellationsOrderIdentifierType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

