/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"fmt"
)

// CreatorType the model 'CreatorType'
type CreatorType string

// List of CreatorType
const (
	CREATORTYPE_MERCHANT CreatorType = "MERCHANT"
	CREATORTYPE_CHANNEL CreatorType = "CHANNEL"
	CREATORTYPE_BOTH CreatorType = "BOTH"
)

// All allowed values of CreatorType enum
var AllowedCreatorTypeEnumValues = []CreatorType{
	"MERCHANT",
	"CHANNEL",
	"BOTH",
}

func (v *CreatorType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CreatorType(value)
	for _, existing := range AllowedCreatorTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CreatorType", value)
}

// NewCreatorTypeFromValue returns a pointer to a valid CreatorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCreatorTypeFromValue(v string) (*CreatorType, error) {
	ev := CreatorType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CreatorType: valid values are %v", v, AllowedCreatorTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CreatorType) IsValid() bool {
	for _, existing := range AllowedCreatorTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CreatorType value
func (v CreatorType) Ptr() *CreatorType {
	return &v
}

type NullableCreatorType struct {
	value *CreatorType
	isSet bool
}

func (v NullableCreatorType) Get() *CreatorType {
	return v.value
}

func (v *NullableCreatorType) Set(val *CreatorType) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatorType) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatorType(val *CreatorType) *NullableCreatorType {
	return &NullableCreatorType{value: val, isSet: true}
}

func (v NullableCreatorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

