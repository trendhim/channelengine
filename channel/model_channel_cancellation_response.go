/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChannelCancellationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelCancellationResponse{}

// ChannelCancellationResponse struct for ChannelCancellationResponse
type ChannelCancellationResponse struct {
	// The unique order reference used by the Channel.
	ChannelOrderNo string `json:"ChannelOrderNo"`
	// The unique cancellation reference used by the Merchant.
	MerchantCancellationNo string `json:"MerchantCancellationNo"`
	Lines []ChannelCancellationLineResponse `json:"Lines"`
	// The date at which the cancellation was created in ChannelEngine.
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	// The date at which the cancellation was last modified in ChannelEngine.
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	// Reason for cancellation (text).
	Reason NullableString `json:"Reason,omitempty"`
	ReasonCode *MancoReason `json:"ReasonCode,omitempty"`
}

type _ChannelCancellationResponse ChannelCancellationResponse

// NewChannelCancellationResponse instantiates a new ChannelCancellationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelCancellationResponse(channelOrderNo string, merchantCancellationNo string, lines []ChannelCancellationLineResponse) *ChannelCancellationResponse {
	this := ChannelCancellationResponse{}
	this.ChannelOrderNo = channelOrderNo
	this.MerchantCancellationNo = merchantCancellationNo
	this.Lines = lines
	return &this
}

// NewChannelCancellationResponseWithDefaults instantiates a new ChannelCancellationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelCancellationResponseWithDefaults() *ChannelCancellationResponse {
	this := ChannelCancellationResponse{}
	return &this
}

// GetChannelOrderNo returns the ChannelOrderNo field value
func (o *ChannelCancellationResponse) GetChannelOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelOrderNo
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelOrderNo, true
}

// SetChannelOrderNo sets field value
func (o *ChannelCancellationResponse) SetChannelOrderNo(v string) {
	o.ChannelOrderNo = v
}

// GetMerchantCancellationNo returns the MerchantCancellationNo field value
func (o *ChannelCancellationResponse) GetMerchantCancellationNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantCancellationNo
}

// GetMerchantCancellationNoOk returns a tuple with the MerchantCancellationNo field value
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetMerchantCancellationNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantCancellationNo, true
}

// SetMerchantCancellationNo sets field value
func (o *ChannelCancellationResponse) SetMerchantCancellationNo(v string) {
	o.MerchantCancellationNo = v
}

// GetLines returns the Lines field value
func (o *ChannelCancellationResponse) GetLines() []ChannelCancellationLineResponse {
	if o == nil {
		var ret []ChannelCancellationLineResponse
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetLinesOk() ([]ChannelCancellationLineResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *ChannelCancellationResponse) SetLines(v []ChannelCancellationLineResponse) {
	o.Lines = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ChannelCancellationResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChannelCancellationResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ChannelCancellationResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ChannelCancellationResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ChannelCancellationResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ChannelCancellationResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelCancellationResponse) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelCancellationResponse) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *ChannelCancellationResponse) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *ChannelCancellationResponse) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *ChannelCancellationResponse) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *ChannelCancellationResponse) UnsetReason() {
	o.Reason.Unset()
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *ChannelCancellationResponse) GetReasonCode() MancoReason {
	if o == nil || IsNil(o.ReasonCode) {
		var ret MancoReason
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelCancellationResponse) GetReasonCodeOk() (*MancoReason, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *ChannelCancellationResponse) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given MancoReason and assigns it to the ReasonCode field.
func (o *ChannelCancellationResponse) SetReasonCode(v MancoReason) {
	o.ReasonCode = &v
}

func (o ChannelCancellationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelCancellationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ChannelOrderNo"] = o.ChannelOrderNo
	toSerialize["MerchantCancellationNo"] = o.MerchantCancellationNo
	toSerialize["Lines"] = o.Lines
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.Reason.IsSet() {
		toSerialize["Reason"] = o.Reason.Get()
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["ReasonCode"] = o.ReasonCode
	}
	return toSerialize, nil
}

func (o *ChannelCancellationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelOrderNo",
		"MerchantCancellationNo",
		"Lines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelCancellationResponse := _ChannelCancellationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelCancellationResponse)

	if err != nil {
		return err
	}

	*o = ChannelCancellationResponse(varChannelCancellationResponse)

	return err
}

type NullableChannelCancellationResponse struct {
	value *ChannelCancellationResponse
	isSet bool
}

func (v NullableChannelCancellationResponse) Get() *ChannelCancellationResponse {
	return v.value
}

func (v *NullableChannelCancellationResponse) Set(val *ChannelCancellationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelCancellationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelCancellationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelCancellationResponse(val *ChannelCancellationResponse) *NullableChannelCancellationResponse {
	return &NullableChannelCancellationResponse{value: val, isSet: true}
}

func (v NullableChannelCancellationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelCancellationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


