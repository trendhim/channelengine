/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
)

// checks if the ChannelProductChangesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelProductChangesResponse{}

// ChannelProductChangesResponse struct for ChannelProductChangesResponse
type ChannelProductChangesResponse struct {
	ToBeCreated []ChannelProductResponse `json:"ToBeCreated,omitempty"`
	ToBeUpdated []ChannelProductResponse `json:"ToBeUpdated,omitempty"`
	ToBeRemoved []string `json:"ToBeRemoved,omitempty"`
}

// NewChannelProductChangesResponse instantiates a new ChannelProductChangesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelProductChangesResponse() *ChannelProductChangesResponse {
	this := ChannelProductChangesResponse{}
	return &this
}

// NewChannelProductChangesResponseWithDefaults instantiates a new ChannelProductChangesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelProductChangesResponseWithDefaults() *ChannelProductChangesResponse {
	this := ChannelProductChangesResponse{}
	return &this
}

// GetToBeCreated returns the ToBeCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProductChangesResponse) GetToBeCreated() []ChannelProductResponse {
	if o == nil {
		var ret []ChannelProductResponse
		return ret
	}
	return o.ToBeCreated
}

// GetToBeCreatedOk returns a tuple with the ToBeCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProductChangesResponse) GetToBeCreatedOk() ([]ChannelProductResponse, bool) {
	if o == nil || IsNil(o.ToBeCreated) {
		return nil, false
	}
	return o.ToBeCreated, true
}

// HasToBeCreated returns a boolean if a field has been set.
func (o *ChannelProductChangesResponse) HasToBeCreated() bool {
	if o != nil && !IsNil(o.ToBeCreated) {
		return true
	}

	return false
}

// SetToBeCreated gets a reference to the given []ChannelProductResponse and assigns it to the ToBeCreated field.
func (o *ChannelProductChangesResponse) SetToBeCreated(v []ChannelProductResponse) {
	o.ToBeCreated = v
}

// GetToBeUpdated returns the ToBeUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProductChangesResponse) GetToBeUpdated() []ChannelProductResponse {
	if o == nil {
		var ret []ChannelProductResponse
		return ret
	}
	return o.ToBeUpdated
}

// GetToBeUpdatedOk returns a tuple with the ToBeUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProductChangesResponse) GetToBeUpdatedOk() ([]ChannelProductResponse, bool) {
	if o == nil || IsNil(o.ToBeUpdated) {
		return nil, false
	}
	return o.ToBeUpdated, true
}

// HasToBeUpdated returns a boolean if a field has been set.
func (o *ChannelProductChangesResponse) HasToBeUpdated() bool {
	if o != nil && !IsNil(o.ToBeUpdated) {
		return true
	}

	return false
}

// SetToBeUpdated gets a reference to the given []ChannelProductResponse and assigns it to the ToBeUpdated field.
func (o *ChannelProductChangesResponse) SetToBeUpdated(v []ChannelProductResponse) {
	o.ToBeUpdated = v
}

// GetToBeRemoved returns the ToBeRemoved field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProductChangesResponse) GetToBeRemoved() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ToBeRemoved
}

// GetToBeRemovedOk returns a tuple with the ToBeRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProductChangesResponse) GetToBeRemovedOk() ([]string, bool) {
	if o == nil || IsNil(o.ToBeRemoved) {
		return nil, false
	}
	return o.ToBeRemoved, true
}

// HasToBeRemoved returns a boolean if a field has been set.
func (o *ChannelProductChangesResponse) HasToBeRemoved() bool {
	if o != nil && !IsNil(o.ToBeRemoved) {
		return true
	}

	return false
}

// SetToBeRemoved gets a reference to the given []string and assigns it to the ToBeRemoved field.
func (o *ChannelProductChangesResponse) SetToBeRemoved(v []string) {
	o.ToBeRemoved = v
}

func (o ChannelProductChangesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelProductChangesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ToBeCreated != nil {
		toSerialize["ToBeCreated"] = o.ToBeCreated
	}
	if o.ToBeUpdated != nil {
		toSerialize["ToBeUpdated"] = o.ToBeUpdated
	}
	if o.ToBeRemoved != nil {
		toSerialize["ToBeRemoved"] = o.ToBeRemoved
	}
	return toSerialize, nil
}

type NullableChannelProductChangesResponse struct {
	value *ChannelProductChangesResponse
	isSet bool
}

func (v NullableChannelProductChangesResponse) Get() *ChannelProductChangesResponse {
	return v.value
}

func (v *NullableChannelProductChangesResponse) Set(val *ChannelProductChangesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelProductChangesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelProductChangesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelProductChangesResponse(val *ChannelProductChangesResponse) *NullableChannelProductChangesResponse {
	return &NullableChannelProductChangesResponse{value: val, isSet: true}
}

func (v NullableChannelProductChangesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelProductChangesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


