/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
)

// checks if the IReturnLineHandlingResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IReturnLineHandlingResult{}

// IReturnLineHandlingResult struct for IReturnLineHandlingResult
type IReturnLineHandlingResult struct {
	Id *int32 `json:"Id,omitempty"`
	ReturnLineId *int32 `json:"ReturnLineId,omitempty"`
	Quantity *int32 `json:"Quantity,omitempty"`
	Action *ReturnHandlingAction `json:"Action,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	DeletedAt NullableTime `json:"DeletedAt,omitempty"`
}

// NewIReturnLineHandlingResult instantiates a new IReturnLineHandlingResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIReturnLineHandlingResult() *IReturnLineHandlingResult {
	this := IReturnLineHandlingResult{}
	return &this
}

// NewIReturnLineHandlingResultWithDefaults instantiates a new IReturnLineHandlingResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIReturnLineHandlingResultWithDefaults() *IReturnLineHandlingResult {
	this := IReturnLineHandlingResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IReturnLineHandlingResult) SetId(v int32) {
	o.Id = &v
}

// GetReturnLineId returns the ReturnLineId field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetReturnLineId() int32 {
	if o == nil || IsNil(o.ReturnLineId) {
		var ret int32
		return ret
	}
	return *o.ReturnLineId
}

// GetReturnLineIdOk returns a tuple with the ReturnLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetReturnLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReturnLineId) {
		return nil, false
	}
	return o.ReturnLineId, true
}

// HasReturnLineId returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasReturnLineId() bool {
	if o != nil && !IsNil(o.ReturnLineId) {
		return true
	}

	return false
}

// SetReturnLineId gets a reference to the given int32 and assigns it to the ReturnLineId field.
func (o *IReturnLineHandlingResult) SetReturnLineId(v int32) {
	o.ReturnLineId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *IReturnLineHandlingResult) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetAction() ReturnHandlingAction {
	if o == nil || IsNil(o.Action) {
		var ret ReturnHandlingAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetActionOk() (*ReturnHandlingAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given ReturnHandlingAction and assigns it to the Action field.
func (o *IReturnLineHandlingResult) SetAction(v ReturnHandlingAction) {
	o.Action = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IReturnLineHandlingResult) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IReturnLineHandlingResult) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturnLineHandlingResult) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *IReturnLineHandlingResult) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturnLineHandlingResult) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturnLineHandlingResult) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *IReturnLineHandlingResult) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *IReturnLineHandlingResult) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *IReturnLineHandlingResult) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *IReturnLineHandlingResult) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

func (o IReturnLineHandlingResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IReturnLineHandlingResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ReturnLineId) {
		toSerialize["ReturnLineId"] = o.ReturnLineId
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	if !IsNil(o.Action) {
		toSerialize["Action"] = o.Action
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.DeletedAt.IsSet() {
		toSerialize["DeletedAt"] = o.DeletedAt.Get()
	}
	return toSerialize, nil
}

type NullableIReturnLineHandlingResult struct {
	value *IReturnLineHandlingResult
	isSet bool
}

func (v NullableIReturnLineHandlingResult) Get() *IReturnLineHandlingResult {
	return v.value
}

func (v *NullableIReturnLineHandlingResult) Set(val *IReturnLineHandlingResult) {
	v.value = val
	v.isSet = true
}

func (v NullableIReturnLineHandlingResult) IsSet() bool {
	return v.isSet
}

func (v *NullableIReturnLineHandlingResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIReturnLineHandlingResult(val *IReturnLineHandlingResult) *NullableIReturnLineHandlingResult {
	return &NullableIReturnLineHandlingResult{value: val, isSet: true}
}

func (v NullableIReturnLineHandlingResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIReturnLineHandlingResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


