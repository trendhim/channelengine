/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
)

// checks if the ChannelProcessedChangesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelProcessedChangesRequest{}

// ChannelProcessedChangesRequest struct for ChannelProcessedChangesRequest
type ChannelProcessedChangesRequest struct {
	// A collection of pairs of merchant and channel references  of the products which are successfully created. The channel references  are saved such that in subsequent calls these can be used instead of the  merchant references.
	Created []ChannelProductReferencesRequest `json:"Created,omitempty"`
	// The channel references of the products which are successfully updated.
	Updated []string `json:"Updated,omitempty"`
	// The channel references of the products which are successfully removed.
	Removed []string `json:"Removed,omitempty"`
}

// NewChannelProcessedChangesRequest instantiates a new ChannelProcessedChangesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelProcessedChangesRequest() *ChannelProcessedChangesRequest {
	this := ChannelProcessedChangesRequest{}
	return &this
}

// NewChannelProcessedChangesRequestWithDefaults instantiates a new ChannelProcessedChangesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelProcessedChangesRequestWithDefaults() *ChannelProcessedChangesRequest {
	this := ChannelProcessedChangesRequest{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessedChangesRequest) GetCreated() []ChannelProductReferencesRequest {
	if o == nil {
		var ret []ChannelProductReferencesRequest
		return ret
	}
	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessedChangesRequest) GetCreatedOk() ([]ChannelProductReferencesRequest, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ChannelProcessedChangesRequest) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given []ChannelProductReferencesRequest and assigns it to the Created field.
func (o *ChannelProcessedChangesRequest) SetCreated(v []ChannelProductReferencesRequest) {
	o.Created = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessedChangesRequest) GetUpdated() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessedChangesRequest) GetUpdatedOk() ([]string, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ChannelProcessedChangesRequest) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given []string and assigns it to the Updated field.
func (o *ChannelProcessedChangesRequest) SetUpdated(v []string) {
	o.Updated = v
}

// GetRemoved returns the Removed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessedChangesRequest) GetRemoved() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Removed
}

// GetRemovedOk returns a tuple with the Removed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessedChangesRequest) GetRemovedOk() ([]string, bool) {
	if o == nil || IsNil(o.Removed) {
		return nil, false
	}
	return o.Removed, true
}

// HasRemoved returns a boolean if a field has been set.
func (o *ChannelProcessedChangesRequest) HasRemoved() bool {
	if o != nil && !IsNil(o.Removed) {
		return true
	}

	return false
}

// SetRemoved gets a reference to the given []string and assigns it to the Removed field.
func (o *ChannelProcessedChangesRequest) SetRemoved(v []string) {
	o.Removed = v
}

func (o ChannelProcessedChangesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelProcessedChangesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["Created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["Updated"] = o.Updated
	}
	if o.Removed != nil {
		toSerialize["Removed"] = o.Removed
	}
	return toSerialize, nil
}

type NullableChannelProcessedChangesRequest struct {
	value *ChannelProcessedChangesRequest
	isSet bool
}

func (v NullableChannelProcessedChangesRequest) Get() *ChannelProcessedChangesRequest {
	return v.value
}

func (v *NullableChannelProcessedChangesRequest) Set(val *ChannelProcessedChangesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelProcessedChangesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelProcessedChangesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelProcessedChangesRequest(val *ChannelProcessedChangesRequest) *NullableChannelProcessedChangesRequest {
	return &NullableChannelProcessedChangesRequest{value: val, isSet: true}
}

func (v NullableChannelProcessedChangesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelProcessedChangesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


