/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ChannelOrderLineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelOrderLineRequest{}

// ChannelOrderLineRequest struct for ChannelOrderLineRequest
type ChannelOrderLineRequest struct {
	// The unique product reference used by the channel.
	ChannelProductNo string `json:"ChannelProductNo"`
	// The unique product reference used by the merchant.
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	// The number of items of the product.
	Quantity int32 `json:"Quantity"`
	// The number of items for which cancellation was requested by the customer.  Some channels allow a customer to cancel an order until it has been shipped.  When an order has already been acknowledged in ChannelEngine, it can only be cancelled by creating a cancellation.  Use this field to check whether it is still possible to cancel the order. If this is the case, submit a cancellation to ChannelEngine.
	CancellationRequestedQuantity *int32 `json:"CancellationRequestedQuantity,omitempty"`
	// The value of a single unit of the ordered product including VAT  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	UnitPriceInclVat float32 `json:"UnitPriceInclVat"`
	// A fixed fee that is charged by the Channel for this orderline.  This fee rate is based on the currency of the Channel  This field is optional, send 0 if not applicable.
	FeeFixed *float32 `json:"FeeFixed,omitempty"`
	// A percentage fee that is charged by the Channel for this orderline.  This field is optional, send 0 if not applicable.
	FeeRate *float32 `json:"FeeRate,omitempty"`
	Condition *Condition `json:"Condition,omitempty"`
	// Expected delivery date from channels, empty if channels not support this value
	ExpectedDeliveryDate NullableTime `json:"ExpectedDeliveryDate,omitempty"`
}

type _ChannelOrderLineRequest ChannelOrderLineRequest

// NewChannelOrderLineRequest instantiates a new ChannelOrderLineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelOrderLineRequest(channelProductNo string, quantity int32, unitPriceInclVat float32) *ChannelOrderLineRequest {
	this := ChannelOrderLineRequest{}
	this.ChannelProductNo = channelProductNo
	this.Quantity = quantity
	this.UnitPriceInclVat = unitPriceInclVat
	return &this
}

// NewChannelOrderLineRequestWithDefaults instantiates a new ChannelOrderLineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelOrderLineRequestWithDefaults() *ChannelOrderLineRequest {
	this := ChannelOrderLineRequest{}
	return &this
}

// GetChannelProductNo returns the ChannelProductNo field value
func (o *ChannelOrderLineRequest) GetChannelProductNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelProductNo
}

// GetChannelProductNoOk returns a tuple with the ChannelProductNo field value
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetChannelProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelProductNo, true
}

// SetChannelProductNo sets field value
func (o *ChannelOrderLineRequest) SetChannelProductNo(v string) {
	o.ChannelProductNo = v
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelOrderLineRequest) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelOrderLineRequest) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *ChannelOrderLineRequest) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *ChannelOrderLineRequest) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *ChannelOrderLineRequest) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetQuantity returns the Quantity field value
func (o *ChannelOrderLineRequest) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *ChannelOrderLineRequest) SetQuantity(v int32) {
	o.Quantity = v
}

// GetCancellationRequestedQuantity returns the CancellationRequestedQuantity field value if set, zero value otherwise.
func (o *ChannelOrderLineRequest) GetCancellationRequestedQuantity() int32 {
	if o == nil || IsNil(o.CancellationRequestedQuantity) {
		var ret int32
		return ret
	}
	return *o.CancellationRequestedQuantity
}

// GetCancellationRequestedQuantityOk returns a tuple with the CancellationRequestedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetCancellationRequestedQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.CancellationRequestedQuantity) {
		return nil, false
	}
	return o.CancellationRequestedQuantity, true
}

// HasCancellationRequestedQuantity returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasCancellationRequestedQuantity() bool {
	if o != nil && !IsNil(o.CancellationRequestedQuantity) {
		return true
	}

	return false
}

// SetCancellationRequestedQuantity gets a reference to the given int32 and assigns it to the CancellationRequestedQuantity field.
func (o *ChannelOrderLineRequest) SetCancellationRequestedQuantity(v int32) {
	o.CancellationRequestedQuantity = &v
}

// GetUnitPriceInclVat returns the UnitPriceInclVat field value
func (o *ChannelOrderLineRequest) GetUnitPriceInclVat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UnitPriceInclVat
}

// GetUnitPriceInclVatOk returns a tuple with the UnitPriceInclVat field value
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetUnitPriceInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitPriceInclVat, true
}

// SetUnitPriceInclVat sets field value
func (o *ChannelOrderLineRequest) SetUnitPriceInclVat(v float32) {
	o.UnitPriceInclVat = v
}

// GetFeeFixed returns the FeeFixed field value if set, zero value otherwise.
func (o *ChannelOrderLineRequest) GetFeeFixed() float32 {
	if o == nil || IsNil(o.FeeFixed) {
		var ret float32
		return ret
	}
	return *o.FeeFixed
}

// GetFeeFixedOk returns a tuple with the FeeFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetFeeFixedOk() (*float32, bool) {
	if o == nil || IsNil(o.FeeFixed) {
		return nil, false
	}
	return o.FeeFixed, true
}

// HasFeeFixed returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasFeeFixed() bool {
	if o != nil && !IsNil(o.FeeFixed) {
		return true
	}

	return false
}

// SetFeeFixed gets a reference to the given float32 and assigns it to the FeeFixed field.
func (o *ChannelOrderLineRequest) SetFeeFixed(v float32) {
	o.FeeFixed = &v
}

// GetFeeRate returns the FeeRate field value if set, zero value otherwise.
func (o *ChannelOrderLineRequest) GetFeeRate() float32 {
	if o == nil || IsNil(o.FeeRate) {
		var ret float32
		return ret
	}
	return *o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetFeeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.FeeRate) {
		return nil, false
	}
	return o.FeeRate, true
}

// HasFeeRate returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasFeeRate() bool {
	if o != nil && !IsNil(o.FeeRate) {
		return true
	}

	return false
}

// SetFeeRate gets a reference to the given float32 and assigns it to the FeeRate field.
func (o *ChannelOrderLineRequest) SetFeeRate(v float32) {
	o.FeeRate = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *ChannelOrderLineRequest) GetCondition() Condition {
	if o == nil || IsNil(o.Condition) {
		var ret Condition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrderLineRequest) GetConditionOk() (*Condition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given Condition and assigns it to the Condition field.
func (o *ChannelOrderLineRequest) SetCondition(v Condition) {
	o.Condition = &v
}

// GetExpectedDeliveryDate returns the ExpectedDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelOrderLineRequest) GetExpectedDeliveryDate() time.Time {
	if o == nil || IsNil(o.ExpectedDeliveryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedDeliveryDate.Get()
}

// GetExpectedDeliveryDateOk returns a tuple with the ExpectedDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelOrderLineRequest) GetExpectedDeliveryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedDeliveryDate.Get(), o.ExpectedDeliveryDate.IsSet()
}

// HasExpectedDeliveryDate returns a boolean if a field has been set.
func (o *ChannelOrderLineRequest) HasExpectedDeliveryDate() bool {
	if o != nil && o.ExpectedDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetExpectedDeliveryDate gets a reference to the given NullableTime and assigns it to the ExpectedDeliveryDate field.
func (o *ChannelOrderLineRequest) SetExpectedDeliveryDate(v time.Time) {
	o.ExpectedDeliveryDate.Set(&v)
}
// SetExpectedDeliveryDateNil sets the value for ExpectedDeliveryDate to be an explicit nil
func (o *ChannelOrderLineRequest) SetExpectedDeliveryDateNil() {
	o.ExpectedDeliveryDate.Set(nil)
}

// UnsetExpectedDeliveryDate ensures that no value is present for ExpectedDeliveryDate, not even an explicit nil
func (o *ChannelOrderLineRequest) UnsetExpectedDeliveryDate() {
	o.ExpectedDeliveryDate.Unset()
}

func (o ChannelOrderLineRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelOrderLineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ChannelProductNo"] = o.ChannelProductNo
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	toSerialize["Quantity"] = o.Quantity
	if !IsNil(o.CancellationRequestedQuantity) {
		toSerialize["CancellationRequestedQuantity"] = o.CancellationRequestedQuantity
	}
	toSerialize["UnitPriceInclVat"] = o.UnitPriceInclVat
	if !IsNil(o.FeeFixed) {
		toSerialize["FeeFixed"] = o.FeeFixed
	}
	if !IsNil(o.FeeRate) {
		toSerialize["FeeRate"] = o.FeeRate
	}
	if !IsNil(o.Condition) {
		toSerialize["Condition"] = o.Condition
	}
	if o.ExpectedDeliveryDate.IsSet() {
		toSerialize["ExpectedDeliveryDate"] = o.ExpectedDeliveryDate.Get()
	}
	return toSerialize, nil
}

func (o *ChannelOrderLineRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelProductNo",
		"Quantity",
		"UnitPriceInclVat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelOrderLineRequest := _ChannelOrderLineRequest{}

	err = json.Unmarshal(bytes, &varChannelOrderLineRequest)

	if err != nil {
		return err
	}

	*o = ChannelOrderLineRequest(varChannelOrderLineRequest)

	return err
}

type NullableChannelOrderLineRequest struct {
	value *ChannelOrderLineRequest
	isSet bool
}

func (v NullableChannelOrderLineRequest) Get() *ChannelOrderLineRequest {
	return v.value
}

func (v *NullableChannelOrderLineRequest) Set(val *ChannelOrderLineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelOrderLineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelOrderLineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelOrderLineRequest(val *ChannelOrderLineRequest) *NullableChannelOrderLineRequest {
	return &NullableChannelOrderLineRequest{value: val, isSet: true}
}

func (v NullableChannelOrderLineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelOrderLineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


