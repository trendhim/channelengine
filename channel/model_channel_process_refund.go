/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
)

// checks if the ChannelProcessRefund type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelProcessRefund{}

// ChannelProcessRefund struct for ChannelProcessRefund
type ChannelProcessRefund struct {
	Identifier NullableString `json:"Identifier,omitempty"`
	Status *ChannelExportStatus `json:"Status,omitempty"`
	ExternalBatchNo NullableString `json:"ExternalBatchNo,omitempty"`
	Reference NullableString `json:"Reference,omitempty"`
	Title NullableString `json:"Title,omitempty"`
}

// NewChannelProcessRefund instantiates a new ChannelProcessRefund object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelProcessRefund() *ChannelProcessRefund {
	this := ChannelProcessRefund{}
	return &this
}

// NewChannelProcessRefundWithDefaults instantiates a new ChannelProcessRefund object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelProcessRefundWithDefaults() *ChannelProcessRefund {
	this := ChannelProcessRefund{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessRefund) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier.Get()) {
		var ret string
		return ret
	}
	return *o.Identifier.Get()
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessRefund) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifier.Get(), o.Identifier.IsSet()
}

// HasIdentifier returns a boolean if a field has been set.
func (o *ChannelProcessRefund) HasIdentifier() bool {
	if o != nil && o.Identifier.IsSet() {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given NullableString and assigns it to the Identifier field.
func (o *ChannelProcessRefund) SetIdentifier(v string) {
	o.Identifier.Set(&v)
}
// SetIdentifierNil sets the value for Identifier to be an explicit nil
func (o *ChannelProcessRefund) SetIdentifierNil() {
	o.Identifier.Set(nil)
}

// UnsetIdentifier ensures that no value is present for Identifier, not even an explicit nil
func (o *ChannelProcessRefund) UnsetIdentifier() {
	o.Identifier.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ChannelProcessRefund) GetStatus() ChannelExportStatus {
	if o == nil || IsNil(o.Status) {
		var ret ChannelExportStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelProcessRefund) GetStatusOk() (*ChannelExportStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ChannelProcessRefund) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ChannelExportStatus and assigns it to the Status field.
func (o *ChannelProcessRefund) SetStatus(v ChannelExportStatus) {
	o.Status = &v
}

// GetExternalBatchNo returns the ExternalBatchNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessRefund) GetExternalBatchNo() string {
	if o == nil || IsNil(o.ExternalBatchNo.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalBatchNo.Get()
}

// GetExternalBatchNoOk returns a tuple with the ExternalBatchNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessRefund) GetExternalBatchNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalBatchNo.Get(), o.ExternalBatchNo.IsSet()
}

// HasExternalBatchNo returns a boolean if a field has been set.
func (o *ChannelProcessRefund) HasExternalBatchNo() bool {
	if o != nil && o.ExternalBatchNo.IsSet() {
		return true
	}

	return false
}

// SetExternalBatchNo gets a reference to the given NullableString and assigns it to the ExternalBatchNo field.
func (o *ChannelProcessRefund) SetExternalBatchNo(v string) {
	o.ExternalBatchNo.Set(&v)
}
// SetExternalBatchNoNil sets the value for ExternalBatchNo to be an explicit nil
func (o *ChannelProcessRefund) SetExternalBatchNoNil() {
	o.ExternalBatchNo.Set(nil)
}

// UnsetExternalBatchNo ensures that no value is present for ExternalBatchNo, not even an explicit nil
func (o *ChannelProcessRefund) UnsetExternalBatchNo() {
	o.ExternalBatchNo.Unset()
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessRefund) GetReference() string {
	if o == nil || IsNil(o.Reference.Get()) {
		var ret string
		return ret
	}
	return *o.Reference.Get()
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessRefund) GetReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reference.Get(), o.Reference.IsSet()
}

// HasReference returns a boolean if a field has been set.
func (o *ChannelProcessRefund) HasReference() bool {
	if o != nil && o.Reference.IsSet() {
		return true
	}

	return false
}

// SetReference gets a reference to the given NullableString and assigns it to the Reference field.
func (o *ChannelProcessRefund) SetReference(v string) {
	o.Reference.Set(&v)
}
// SetReferenceNil sets the value for Reference to be an explicit nil
func (o *ChannelProcessRefund) SetReferenceNil() {
	o.Reference.Set(nil)
}

// UnsetReference ensures that no value is present for Reference, not even an explicit nil
func (o *ChannelProcessRefund) UnsetReference() {
	o.Reference.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelProcessRefund) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelProcessRefund) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *ChannelProcessRefund) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *ChannelProcessRefund) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *ChannelProcessRefund) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *ChannelProcessRefund) UnsetTitle() {
	o.Title.Unset()
}

func (o ChannelProcessRefund) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelProcessRefund) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier.IsSet() {
		toSerialize["Identifier"] = o.Identifier.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if o.ExternalBatchNo.IsSet() {
		toSerialize["ExternalBatchNo"] = o.ExternalBatchNo.Get()
	}
	if o.Reference.IsSet() {
		toSerialize["Reference"] = o.Reference.Get()
	}
	if o.Title.IsSet() {
		toSerialize["Title"] = o.Title.Get()
	}
	return toSerialize, nil
}

type NullableChannelProcessRefund struct {
	value *ChannelProcessRefund
	isSet bool
}

func (v NullableChannelProcessRefund) Get() *ChannelProcessRefund {
	return v.value
}

func (v *NullableChannelProcessRefund) Set(val *ChannelProcessRefund) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelProcessRefund) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelProcessRefund) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelProcessRefund(val *ChannelProcessRefund) *NullableChannelProcessRefund {
	return &NullableChannelProcessRefund{value: val, isSet: true}
}

func (v NullableChannelProcessRefund) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelProcessRefund) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


