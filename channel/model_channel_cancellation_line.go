/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
)

// checks if the ChannelCancellationLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelCancellationLine{}

// ChannelCancellationLine struct for ChannelCancellationLine
type ChannelCancellationLine struct {
	OrderLineIdentifier NullableString `json:"OrderLineIdentifier,omitempty"`
	Quantity *int32 `json:"Quantity,omitempty"`
}

// NewChannelCancellationLine instantiates a new ChannelCancellationLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelCancellationLine() *ChannelCancellationLine {
	this := ChannelCancellationLine{}
	return &this
}

// NewChannelCancellationLineWithDefaults instantiates a new ChannelCancellationLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelCancellationLineWithDefaults() *ChannelCancellationLine {
	this := ChannelCancellationLine{}
	return &this
}

// GetOrderLineIdentifier returns the OrderLineIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelCancellationLine) GetOrderLineIdentifier() string {
	if o == nil || IsNil(o.OrderLineIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.OrderLineIdentifier.Get()
}

// GetOrderLineIdentifierOk returns a tuple with the OrderLineIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelCancellationLine) GetOrderLineIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderLineIdentifier.Get(), o.OrderLineIdentifier.IsSet()
}

// HasOrderLineIdentifier returns a boolean if a field has been set.
func (o *ChannelCancellationLine) HasOrderLineIdentifier() bool {
	if o != nil && o.OrderLineIdentifier.IsSet() {
		return true
	}

	return false
}

// SetOrderLineIdentifier gets a reference to the given NullableString and assigns it to the OrderLineIdentifier field.
func (o *ChannelCancellationLine) SetOrderLineIdentifier(v string) {
	o.OrderLineIdentifier.Set(&v)
}
// SetOrderLineIdentifierNil sets the value for OrderLineIdentifier to be an explicit nil
func (o *ChannelCancellationLine) SetOrderLineIdentifierNil() {
	o.OrderLineIdentifier.Set(nil)
}

// UnsetOrderLineIdentifier ensures that no value is present for OrderLineIdentifier, not even an explicit nil
func (o *ChannelCancellationLine) UnsetOrderLineIdentifier() {
	o.OrderLineIdentifier.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ChannelCancellationLine) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelCancellationLine) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ChannelCancellationLine) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ChannelCancellationLine) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o ChannelCancellationLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelCancellationLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderLineIdentifier.IsSet() {
		toSerialize["OrderLineIdentifier"] = o.OrderLineIdentifier.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableChannelCancellationLine struct {
	value *ChannelCancellationLine
	isSet bool
}

func (v NullableChannelCancellationLine) Get() *ChannelCancellationLine {
	return v.value
}

func (v *NullableChannelCancellationLine) Set(val *ChannelCancellationLine) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelCancellationLine) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelCancellationLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelCancellationLine(val *ChannelCancellationLine) *NullableChannelCancellationLine {
	return &NullableChannelCancellationLine{value: val, isSet: true}
}

func (v NullableChannelCancellationLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelCancellationLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


