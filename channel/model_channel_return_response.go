/*
ChannelEngine Channel API

ChannelEngine API for channels

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channel

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChannelReturnResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelReturnResponse{}

// ChannelReturnResponse struct for ChannelReturnResponse
type ChannelReturnResponse struct {
	// The unique return reference used by the Channel.
	ChannelReturnNo string `json:"ChannelReturnNo"`
	// The unique order reference used by the Channel.
	ChannelOrderNo string `json:"ChannelOrderNo"`
	// The unique order reference used by the Merchant (sku).
	MerchantOrderNo NullableString `json:"MerchantOrderNo,omitempty"`
	Lines []ChannelReturnLineResponse `json:"Lines"`
	// The date at which the return was created in ChannelEngine.
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	// The date at which the return was last modified in ChannelEngine.
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	// The unique return reference used by ChannelEngine.
	Id *int32 `json:"Id,omitempty"`
	Reason *ReturnReason `json:"Reason,omitempty"`
	// Optional. Comment of customer on the (reason of) the return.
	CustomerComment NullableString `json:"CustomerComment,omitempty"`
	// Optional. Comment of merchant on the return.
	MerchantComment NullableString `json:"MerchantComment,omitempty"`
	// Refund amount incl. VAT.
	RefundInclVat *float32 `json:"RefundInclVat,omitempty"`
	// Refund amount excl. VAT.
	RefundExclVat *float32 `json:"RefundExclVat,omitempty"`
	// The date at which the return was originally created in the source system (if available).
	ReturnDate NullableTime `json:"ReturnDate,omitempty"`
	// Extra data on the return. Each item must have an unqiue key
	ExtraData map[string]string `json:"ExtraData,omitempty"`
}

type _ChannelReturnResponse ChannelReturnResponse

// NewChannelReturnResponse instantiates a new ChannelReturnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelReturnResponse(channelReturnNo string, channelOrderNo string, lines []ChannelReturnLineResponse) *ChannelReturnResponse {
	this := ChannelReturnResponse{}
	this.ChannelReturnNo = channelReturnNo
	this.ChannelOrderNo = channelOrderNo
	this.Lines = lines
	return &this
}

// NewChannelReturnResponseWithDefaults instantiates a new ChannelReturnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelReturnResponseWithDefaults() *ChannelReturnResponse {
	this := ChannelReturnResponse{}
	return &this
}

// GetChannelReturnNo returns the ChannelReturnNo field value
func (o *ChannelReturnResponse) GetChannelReturnNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelReturnNo
}

// GetChannelReturnNoOk returns a tuple with the ChannelReturnNo field value
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetChannelReturnNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelReturnNo, true
}

// SetChannelReturnNo sets field value
func (o *ChannelReturnResponse) SetChannelReturnNo(v string) {
	o.ChannelReturnNo = v
}

// GetChannelOrderNo returns the ChannelOrderNo field value
func (o *ChannelReturnResponse) GetChannelOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelOrderNo
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelOrderNo, true
}

// SetChannelOrderNo sets field value
func (o *ChannelReturnResponse) SetChannelOrderNo(v string) {
	o.ChannelOrderNo = v
}

// GetMerchantOrderNo returns the MerchantOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelReturnResponse) GetMerchantOrderNo() string {
	if o == nil || IsNil(o.MerchantOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantOrderNo.Get()
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelReturnResponse) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantOrderNo.Get(), o.MerchantOrderNo.IsSet()
}

// HasMerchantOrderNo returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasMerchantOrderNo() bool {
	if o != nil && o.MerchantOrderNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantOrderNo gets a reference to the given NullableString and assigns it to the MerchantOrderNo field.
func (o *ChannelReturnResponse) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo.Set(&v)
}
// SetMerchantOrderNoNil sets the value for MerchantOrderNo to be an explicit nil
func (o *ChannelReturnResponse) SetMerchantOrderNoNil() {
	o.MerchantOrderNo.Set(nil)
}

// UnsetMerchantOrderNo ensures that no value is present for MerchantOrderNo, not even an explicit nil
func (o *ChannelReturnResponse) UnsetMerchantOrderNo() {
	o.MerchantOrderNo.Unset()
}

// GetLines returns the Lines field value
func (o *ChannelReturnResponse) GetLines() []ChannelReturnLineResponse {
	if o == nil {
		var ret []ChannelReturnLineResponse
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetLinesOk() ([]ChannelReturnLineResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *ChannelReturnResponse) SetLines(v []ChannelReturnLineResponse) {
	o.Lines = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ChannelReturnResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ChannelReturnResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ChannelReturnResponse) SetId(v int32) {
	o.Id = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetReason() ReturnReason {
	if o == nil || IsNil(o.Reason) {
		var ret ReturnReason
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetReasonOk() (*ReturnReason, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given ReturnReason and assigns it to the Reason field.
func (o *ChannelReturnResponse) SetReason(v ReturnReason) {
	o.Reason = &v
}

// GetCustomerComment returns the CustomerComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelReturnResponse) GetCustomerComment() string {
	if o == nil || IsNil(o.CustomerComment.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerComment.Get()
}

// GetCustomerCommentOk returns a tuple with the CustomerComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelReturnResponse) GetCustomerCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerComment.Get(), o.CustomerComment.IsSet()
}

// HasCustomerComment returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasCustomerComment() bool {
	if o != nil && o.CustomerComment.IsSet() {
		return true
	}

	return false
}

// SetCustomerComment gets a reference to the given NullableString and assigns it to the CustomerComment field.
func (o *ChannelReturnResponse) SetCustomerComment(v string) {
	o.CustomerComment.Set(&v)
}
// SetCustomerCommentNil sets the value for CustomerComment to be an explicit nil
func (o *ChannelReturnResponse) SetCustomerCommentNil() {
	o.CustomerComment.Set(nil)
}

// UnsetCustomerComment ensures that no value is present for CustomerComment, not even an explicit nil
func (o *ChannelReturnResponse) UnsetCustomerComment() {
	o.CustomerComment.Unset()
}

// GetMerchantComment returns the MerchantComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelReturnResponse) GetMerchantComment() string {
	if o == nil || IsNil(o.MerchantComment.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantComment.Get()
}

// GetMerchantCommentOk returns a tuple with the MerchantComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelReturnResponse) GetMerchantCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantComment.Get(), o.MerchantComment.IsSet()
}

// HasMerchantComment returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasMerchantComment() bool {
	if o != nil && o.MerchantComment.IsSet() {
		return true
	}

	return false
}

// SetMerchantComment gets a reference to the given NullableString and assigns it to the MerchantComment field.
func (o *ChannelReturnResponse) SetMerchantComment(v string) {
	o.MerchantComment.Set(&v)
}
// SetMerchantCommentNil sets the value for MerchantComment to be an explicit nil
func (o *ChannelReturnResponse) SetMerchantCommentNil() {
	o.MerchantComment.Set(nil)
}

// UnsetMerchantComment ensures that no value is present for MerchantComment, not even an explicit nil
func (o *ChannelReturnResponse) UnsetMerchantComment() {
	o.MerchantComment.Unset()
}

// GetRefundInclVat returns the RefundInclVat field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetRefundInclVat() float32 {
	if o == nil || IsNil(o.RefundInclVat) {
		var ret float32
		return ret
	}
	return *o.RefundInclVat
}

// GetRefundInclVatOk returns a tuple with the RefundInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetRefundInclVatOk() (*float32, bool) {
	if o == nil || IsNil(o.RefundInclVat) {
		return nil, false
	}
	return o.RefundInclVat, true
}

// HasRefundInclVat returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasRefundInclVat() bool {
	if o != nil && !IsNil(o.RefundInclVat) {
		return true
	}

	return false
}

// SetRefundInclVat gets a reference to the given float32 and assigns it to the RefundInclVat field.
func (o *ChannelReturnResponse) SetRefundInclVat(v float32) {
	o.RefundInclVat = &v
}

// GetRefundExclVat returns the RefundExclVat field value if set, zero value otherwise.
func (o *ChannelReturnResponse) GetRefundExclVat() float32 {
	if o == nil || IsNil(o.RefundExclVat) {
		var ret float32
		return ret
	}
	return *o.RefundExclVat
}

// GetRefundExclVatOk returns a tuple with the RefundExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelReturnResponse) GetRefundExclVatOk() (*float32, bool) {
	if o == nil || IsNil(o.RefundExclVat) {
		return nil, false
	}
	return o.RefundExclVat, true
}

// HasRefundExclVat returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasRefundExclVat() bool {
	if o != nil && !IsNil(o.RefundExclVat) {
		return true
	}

	return false
}

// SetRefundExclVat gets a reference to the given float32 and assigns it to the RefundExclVat field.
func (o *ChannelReturnResponse) SetRefundExclVat(v float32) {
	o.RefundExclVat = &v
}

// GetReturnDate returns the ReturnDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelReturnResponse) GetReturnDate() time.Time {
	if o == nil || IsNil(o.ReturnDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ReturnDate.Get()
}

// GetReturnDateOk returns a tuple with the ReturnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelReturnResponse) GetReturnDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnDate.Get(), o.ReturnDate.IsSet()
}

// HasReturnDate returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasReturnDate() bool {
	if o != nil && o.ReturnDate.IsSet() {
		return true
	}

	return false
}

// SetReturnDate gets a reference to the given NullableTime and assigns it to the ReturnDate field.
func (o *ChannelReturnResponse) SetReturnDate(v time.Time) {
	o.ReturnDate.Set(&v)
}
// SetReturnDateNil sets the value for ReturnDate to be an explicit nil
func (o *ChannelReturnResponse) SetReturnDateNil() {
	o.ReturnDate.Set(nil)
}

// UnsetReturnDate ensures that no value is present for ReturnDate, not even an explicit nil
func (o *ChannelReturnResponse) UnsetReturnDate() {
	o.ReturnDate.Unset()
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelReturnResponse) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelReturnResponse) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *ChannelReturnResponse) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *ChannelReturnResponse) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

func (o ChannelReturnResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelReturnResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ChannelReturnNo"] = o.ChannelReturnNo
	toSerialize["ChannelOrderNo"] = o.ChannelOrderNo
	if o.MerchantOrderNo.IsSet() {
		toSerialize["MerchantOrderNo"] = o.MerchantOrderNo.Get()
	}
	toSerialize["Lines"] = o.Lines
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Reason) {
		toSerialize["Reason"] = o.Reason
	}
	if o.CustomerComment.IsSet() {
		toSerialize["CustomerComment"] = o.CustomerComment.Get()
	}
	if o.MerchantComment.IsSet() {
		toSerialize["MerchantComment"] = o.MerchantComment.Get()
	}
	if !IsNil(o.RefundInclVat) {
		toSerialize["RefundInclVat"] = o.RefundInclVat
	}
	if !IsNil(o.RefundExclVat) {
		toSerialize["RefundExclVat"] = o.RefundExclVat
	}
	if o.ReturnDate.IsSet() {
		toSerialize["ReturnDate"] = o.ReturnDate.Get()
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	return toSerialize, nil
}

func (o *ChannelReturnResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelReturnNo",
		"ChannelOrderNo",
		"Lines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelReturnResponse := _ChannelReturnResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelReturnResponse)

	if err != nil {
		return err
	}

	*o = ChannelReturnResponse(varChannelReturnResponse)

	return err
}

type NullableChannelReturnResponse struct {
	value *ChannelReturnResponse
	isSet bool
}

func (v NullableChannelReturnResponse) Get() *ChannelReturnResponse {
	return v.value
}

func (v *NullableChannelReturnResponse) Set(val *ChannelReturnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelReturnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelReturnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelReturnResponse(val *ChannelReturnResponse) *NullableChannelReturnResponse {
	return &NullableChannelReturnResponse{value: val, isSet: true}
}

func (v NullableChannelReturnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelReturnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


