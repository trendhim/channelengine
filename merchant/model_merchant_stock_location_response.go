/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantStockLocationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantStockLocationResponse{}

// MerchantStockLocationResponse struct for MerchantStockLocationResponse
type MerchantStockLocationResponse struct {
	// The ChannelEngine id of the stock location.
	Id *int32 `json:"Id,omitempty"`
	// The ChannelEngine name of the stock location.
	Name NullableString `json:"Name,omitempty"`
}

// NewMerchantStockLocationResponse instantiates a new MerchantStockLocationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantStockLocationResponse() *MerchantStockLocationResponse {
	this := MerchantStockLocationResponse{}
	return &this
}

// NewMerchantStockLocationResponseWithDefaults instantiates a new MerchantStockLocationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantStockLocationResponseWithDefaults() *MerchantStockLocationResponse {
	this := MerchantStockLocationResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MerchantStockLocationResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MerchantStockLocationResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MerchantStockLocationResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantStockLocationResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantStockLocationResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MerchantStockLocationResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MerchantStockLocationResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MerchantStockLocationResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MerchantStockLocationResponse) UnsetName() {
	o.Name.Unset()
}

func (o MerchantStockLocationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantStockLocationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	return toSerialize, nil
}

type NullableMerchantStockLocationResponse struct {
	value *MerchantStockLocationResponse
	isSet bool
}

func (v NullableMerchantStockLocationResponse) Get() *MerchantStockLocationResponse {
	return v.value
}

func (v *NullableMerchantStockLocationResponse) Set(val *MerchantStockLocationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantStockLocationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantStockLocationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantStockLocationResponse(val *MerchantStockLocationResponse) *NullableMerchantStockLocationResponse {
	return &NullableMerchantStockLocationResponse{value: val, isSet: true}
}

func (v NullableMerchantStockLocationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantStockLocationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


