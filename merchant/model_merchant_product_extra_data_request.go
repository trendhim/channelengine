/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantProductExtraDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantProductExtraDataRequest{}

// MerchantProductExtraDataRequest struct for MerchantProductExtraDataRequest
type MerchantProductExtraDataRequest struct {
	MerchantProductNo string `json:"MerchantProductNo"`
	Operations []ProductExtraDataRequest `json:"Operations"`
}

type _MerchantProductExtraDataRequest MerchantProductExtraDataRequest

// NewMerchantProductExtraDataRequest instantiates a new MerchantProductExtraDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantProductExtraDataRequest(merchantProductNo string, operations []ProductExtraDataRequest) *MerchantProductExtraDataRequest {
	this := MerchantProductExtraDataRequest{}
	this.MerchantProductNo = merchantProductNo
	this.Operations = operations
	return &this
}

// NewMerchantProductExtraDataRequestWithDefaults instantiates a new MerchantProductExtraDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantProductExtraDataRequestWithDefaults() *MerchantProductExtraDataRequest {
	this := MerchantProductExtraDataRequest{}
	return &this
}

// GetMerchantProductNo returns the MerchantProductNo field value
func (o *MerchantProductExtraDataRequest) GetMerchantProductNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantProductNo
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value
// and a boolean to check if the value has been set.
func (o *MerchantProductExtraDataRequest) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantProductNo, true
}

// SetMerchantProductNo sets field value
func (o *MerchantProductExtraDataRequest) SetMerchantProductNo(v string) {
	o.MerchantProductNo = v
}

// GetOperations returns the Operations field value
func (o *MerchantProductExtraDataRequest) GetOperations() []ProductExtraDataRequest {
	if o == nil {
		var ret []ProductExtraDataRequest
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *MerchantProductExtraDataRequest) GetOperationsOk() ([]ProductExtraDataRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operations, true
}

// SetOperations sets field value
func (o *MerchantProductExtraDataRequest) SetOperations(v []ProductExtraDataRequest) {
	o.Operations = v
}

func (o MerchantProductExtraDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantProductExtraDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MerchantProductNo"] = o.MerchantProductNo
	toSerialize["Operations"] = o.Operations
	return toSerialize, nil
}

func (o *MerchantProductExtraDataRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MerchantProductNo",
		"Operations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantProductExtraDataRequest := _MerchantProductExtraDataRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantProductExtraDataRequest)

	if err != nil {
		return err
	}

	*o = MerchantProductExtraDataRequest(varMerchantProductExtraDataRequest)

	return err
}

type NullableMerchantProductExtraDataRequest struct {
	value *MerchantProductExtraDataRequest
	isSet bool
}

func (v NullableMerchantProductExtraDataRequest) Get() *MerchantProductExtraDataRequest {
	return v.value
}

func (v *NullableMerchantProductExtraDataRequest) Set(val *MerchantProductExtraDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantProductExtraDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantProductExtraDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantProductExtraDataRequest(val *MerchantProductExtraDataRequest) *NullableMerchantProductExtraDataRequest {
	return &NullableMerchantProductExtraDataRequest{value: val, isSet: true}
}

func (v NullableMerchantProductExtraDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantProductExtraDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


