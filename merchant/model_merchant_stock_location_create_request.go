/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantStockLocationCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantStockLocationCreateRequest{}

// MerchantStockLocationCreateRequest struct for MerchantStockLocationCreateRequest
type MerchantStockLocationCreateRequest struct {
	Name string `json:"Name"`
	IsDefault *bool `json:"IsDefault,omitempty"`
	// If false: only use fulfillment by channel, else (also) use merchant fulfillment.
	FallBackToDefault *bool `json:"FallBackToDefault,omitempty"`
	Address *MerchantStockLocationAddressRequest `json:"Address,omitempty"`
	PhoneNumber NullableString `json:"PhoneNumber,omitempty"`
}

type _MerchantStockLocationCreateRequest MerchantStockLocationCreateRequest

// NewMerchantStockLocationCreateRequest instantiates a new MerchantStockLocationCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantStockLocationCreateRequest(name string) *MerchantStockLocationCreateRequest {
	this := MerchantStockLocationCreateRequest{}
	this.Name = name
	return &this
}

// NewMerchantStockLocationCreateRequestWithDefaults instantiates a new MerchantStockLocationCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantStockLocationCreateRequestWithDefaults() *MerchantStockLocationCreateRequest {
	this := MerchantStockLocationCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *MerchantStockLocationCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MerchantStockLocationCreateRequest) SetName(v string) {
	o.Name = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *MerchantStockLocationCreateRequest) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationCreateRequest) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *MerchantStockLocationCreateRequest) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *MerchantStockLocationCreateRequest) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetFallBackToDefault returns the FallBackToDefault field value if set, zero value otherwise.
func (o *MerchantStockLocationCreateRequest) GetFallBackToDefault() bool {
	if o == nil || IsNil(o.FallBackToDefault) {
		var ret bool
		return ret
	}
	return *o.FallBackToDefault
}

// GetFallBackToDefaultOk returns a tuple with the FallBackToDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationCreateRequest) GetFallBackToDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.FallBackToDefault) {
		return nil, false
	}
	return o.FallBackToDefault, true
}

// HasFallBackToDefault returns a boolean if a field has been set.
func (o *MerchantStockLocationCreateRequest) HasFallBackToDefault() bool {
	if o != nil && !IsNil(o.FallBackToDefault) {
		return true
	}

	return false
}

// SetFallBackToDefault gets a reference to the given bool and assigns it to the FallBackToDefault field.
func (o *MerchantStockLocationCreateRequest) SetFallBackToDefault(v bool) {
	o.FallBackToDefault = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MerchantStockLocationCreateRequest) GetAddress() MerchantStockLocationAddressRequest {
	if o == nil || IsNil(o.Address) {
		var ret MerchantStockLocationAddressRequest
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationCreateRequest) GetAddressOk() (*MerchantStockLocationAddressRequest, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MerchantStockLocationCreateRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given MerchantStockLocationAddressRequest and assigns it to the Address field.
func (o *MerchantStockLocationCreateRequest) SetAddress(v MerchantStockLocationAddressRequest) {
	o.Address = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantStockLocationCreateRequest) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantStockLocationCreateRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MerchantStockLocationCreateRequest) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *MerchantStockLocationCreateRequest) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *MerchantStockLocationCreateRequest) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *MerchantStockLocationCreateRequest) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

func (o MerchantStockLocationCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantStockLocationCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Name"] = o.Name
	if !IsNil(o.IsDefault) {
		toSerialize["IsDefault"] = o.IsDefault
	}
	if !IsNil(o.FallBackToDefault) {
		toSerialize["FallBackToDefault"] = o.FallBackToDefault
	}
	if !IsNil(o.Address) {
		toSerialize["Address"] = o.Address
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["PhoneNumber"] = o.PhoneNumber.Get()
	}
	return toSerialize, nil
}

func (o *MerchantStockLocationCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantStockLocationCreateRequest := _MerchantStockLocationCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantStockLocationCreateRequest)

	if err != nil {
		return err
	}

	*o = MerchantStockLocationCreateRequest(varMerchantStockLocationCreateRequest)

	return err
}

type NullableMerchantStockLocationCreateRequest struct {
	value *MerchantStockLocationCreateRequest
	isSet bool
}

func (v NullableMerchantStockLocationCreateRequest) Get() *MerchantStockLocationCreateRequest {
	return v.value
}

func (v *NullableMerchantStockLocationCreateRequest) Set(val *MerchantStockLocationCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantStockLocationCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantStockLocationCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantStockLocationCreateRequest(val *MerchantStockLocationCreateRequest) *NullableMerchantStockLocationCreateRequest {
	return &NullableMerchantStockLocationCreateRequest{value: val, isSet: true}
}

func (v NullableMerchantStockLocationCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantStockLocationCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


