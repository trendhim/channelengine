/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantStockLocationWithCountryIsoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantStockLocationWithCountryIsoResponse{}

// MerchantStockLocationWithCountryIsoResponse struct for MerchantStockLocationWithCountryIsoResponse
type MerchantStockLocationWithCountryIsoResponse struct {
	// The ChannelEngine id of the stock location.
	Id *int32 `json:"Id,omitempty"`
	// The ChannelEngine name of the stock location.
	Name NullableString `json:"Name,omitempty"`
	// For example: NL, BE, FR.
	CountryIso NullableString `json:"CountryIso,omitempty"`
}

// NewMerchantStockLocationWithCountryIsoResponse instantiates a new MerchantStockLocationWithCountryIsoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantStockLocationWithCountryIsoResponse() *MerchantStockLocationWithCountryIsoResponse {
	this := MerchantStockLocationWithCountryIsoResponse{}
	return &this
}

// NewMerchantStockLocationWithCountryIsoResponseWithDefaults instantiates a new MerchantStockLocationWithCountryIsoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantStockLocationWithCountryIsoResponseWithDefaults() *MerchantStockLocationWithCountryIsoResponse {
	this := MerchantStockLocationWithCountryIsoResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MerchantStockLocationWithCountryIsoResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantStockLocationWithCountryIsoResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MerchantStockLocationWithCountryIsoResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MerchantStockLocationWithCountryIsoResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantStockLocationWithCountryIsoResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantStockLocationWithCountryIsoResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MerchantStockLocationWithCountryIsoResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MerchantStockLocationWithCountryIsoResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MerchantStockLocationWithCountryIsoResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MerchantStockLocationWithCountryIsoResponse) UnsetName() {
	o.Name.Unset()
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantStockLocationWithCountryIsoResponse) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.CountryIso.Get()
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantStockLocationWithCountryIsoResponse) GetCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryIso.Get(), o.CountryIso.IsSet()
}

// HasCountryIso returns a boolean if a field has been set.
func (o *MerchantStockLocationWithCountryIsoResponse) HasCountryIso() bool {
	if o != nil && o.CountryIso.IsSet() {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given NullableString and assigns it to the CountryIso field.
func (o *MerchantStockLocationWithCountryIsoResponse) SetCountryIso(v string) {
	o.CountryIso.Set(&v)
}
// SetCountryIsoNil sets the value for CountryIso to be an explicit nil
func (o *MerchantStockLocationWithCountryIsoResponse) SetCountryIsoNil() {
	o.CountryIso.Set(nil)
}

// UnsetCountryIso ensures that no value is present for CountryIso, not even an explicit nil
func (o *MerchantStockLocationWithCountryIsoResponse) UnsetCountryIso() {
	o.CountryIso.Unset()
}

func (o MerchantStockLocationWithCountryIsoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantStockLocationWithCountryIsoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.CountryIso.IsSet() {
		toSerialize["CountryIso"] = o.CountryIso.Get()
	}
	return toSerialize, nil
}

type NullableMerchantStockLocationWithCountryIsoResponse struct {
	value *MerchantStockLocationWithCountryIsoResponse
	isSet bool
}

func (v NullableMerchantStockLocationWithCountryIsoResponse) Get() *MerchantStockLocationWithCountryIsoResponse {
	return v.value
}

func (v *NullableMerchantStockLocationWithCountryIsoResponse) Set(val *MerchantStockLocationWithCountryIsoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantStockLocationWithCountryIsoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantStockLocationWithCountryIsoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantStockLocationWithCountryIsoResponse(val *MerchantStockLocationWithCountryIsoResponse) *NullableMerchantStockLocationWithCountryIsoResponse {
	return &NullableMerchantStockLocationWithCountryIsoResponse{value: val, isSet: true}
}

func (v NullableMerchantStockLocationWithCountryIsoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantStockLocationWithCountryIsoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


