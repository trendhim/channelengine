/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MerchantOrderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantOrderResponse{}

// MerchantOrderResponse struct for MerchantOrderResponse
type MerchantOrderResponse struct {
	// The unique identifier used by ChannelEngine. This identifier does  not have to be saved. It should only be used in a call to acknowledge the order.
	Id *int32 `json:"Id,omitempty"`
	// The name of the channel for this specific environment/account.
	ChannelName NullableString `json:"ChannelName,omitempty"`
	// The unique ID of the channel for this specific environment/account.
	ChannelId NullableInt32 `json:"ChannelId,omitempty"`
	// The name of the channel across all of ChannelEngine.
	GlobalChannelName NullableString `json:"GlobalChannelName,omitempty"`
	// The unique ID of the channel across all of ChannelEngine.
	GlobalChannelId NullableInt32 `json:"GlobalChannelId,omitempty"`
	ChannelOrderSupport *OrderSupport `json:"ChannelOrderSupport,omitempty"`
	// The order reference used by the channel.  This number is not guaranteed to be unique accross all orders,  because different channels can use the same order number format.
	ChannelOrderNo NullableString `json:"ChannelOrderNo,omitempty"`
	// The order reference used by the channel for commercial purposes (e.g. on the invoice). Can be different from the ChannelOrderNo.  For example when the internal unique order reference is a unique id or guid, while the commercial order reference is (usually) a human readable reference that can be reused or used for multiple sellers by the channel.
	CommercialOrderNo NullableString `json:"CommercialOrderNo,omitempty"`
	// The unique order reference used by the Merchant
	MerchantOrderNo NullableString `json:"MerchantOrderNo,omitempty"`
	Status *OrderStatusView `json:"Status,omitempty"`
	// Indicating whether the order is a business order.
	IsBusinessOrder *bool `json:"IsBusinessOrder,omitempty"`
	// The date the order was acknowledged in ChannelEngine.
	AcknowledgedDate NullableTime `json:"AcknowledgedDate,omitempty"`
	// The date the order was created in ChannelEngine.
	CreatedAt NullableTime `json:"CreatedAt,omitempty"`
	// The date the order was last updated in ChannelEngine.
	UpdatedAt NullableTime `json:"UpdatedAt,omitempty"`
	// The date the order was last updated in ChannelEngine.
	ClosedAt NullableTime `json:"ClosedAt,omitempty"`
	// The optional comment a merchant can add to an order.
	MerchantComment NullableString `json:"MerchantComment,omitempty"`
	BillingAddress *MerchantAddressResponse `json:"BillingAddress,omitempty"`
	ShippingAddress *MerchantAddressResponse `json:"ShippingAddress,omitempty"`
	// The total value of the order lines including VAT  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	SubTotalInclVat NullableFloat32 `json:"SubTotalInclVat,omitempty"`
	// The total amount of VAT charged over the order lines  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	SubTotalVat NullableFloat32 `json:"SubTotalVat,omitempty"`
	ShippingCostsInclVat *float32 `json:"ShippingCostsInclVat,omitempty"`
	// The total amount of VAT charged over the shipping fee  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	ShippingCostsVat NullableFloat32 `json:"ShippingCostsVat,omitempty"`
	// The total value of the order including VAT  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	TotalInclVat *float32 `json:"TotalInclVat,omitempty"`
	// The total amount of VAT charged over the total value of te order  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	TotalVat NullableFloat32 `json:"TotalVat,omitempty"`
	// The total value of the order lines including VAT  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalSubTotalInclVat NullableFloat32 `json:"OriginalSubTotalInclVat,omitempty"`
	// The total amount of VAT charged over the order lines  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalSubTotalVat NullableFloat32 `json:"OriginalSubTotalVat,omitempty"`
	// The shipping fee including VAT  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalShippingCostsInclVat NullableFloat32 `json:"OriginalShippingCostsInclVat,omitempty"`
	// The total amount of VAT charged over the shipping fee  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalShippingCostsVat NullableFloat32 `json:"OriginalShippingCostsVat,omitempty"`
	// The total value of the order including VAT  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalTotalInclVat NullableFloat32 `json:"OriginalTotalInclVat,omitempty"`
	// The total amount of VAT charged over the total value of te order  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalTotalVat NullableFloat32 `json:"OriginalTotalVat,omitempty"`
	SubTotalExclVat NullableFloat32 `json:"SubTotalExclVat,omitempty"`
	TotalExclVat NullableFloat32 `json:"TotalExclVat,omitempty"`
	ShippingCostsExclVat NullableFloat32 `json:"ShippingCostsExclVat,omitempty"`
	OriginalSubTotalExclVat NullableFloat32 `json:"OriginalSubTotalExclVat,omitempty"`
	OriginalShippingCostsExclVat NullableFloat32 `json:"OriginalShippingCostsExclVat,omitempty"`
	OriginalTotalExclVat NullableFloat32 `json:"OriginalTotalExclVat,omitempty"`
	// The sum of the fees on the order lines  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalSubTotalFee *float32 `json:"OriginalSubTotalFee,omitempty"`
	// The sum of the fees on the order lines  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	SubTotalFee *float32 `json:"SubTotalFee,omitempty"`
	// The fee on order itself (besides the fees on the order lines)  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalOrderFee *float32 `json:"OriginalOrderFee,omitempty"`
	// The fee on order itself (besides the fees on the order lines)  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	OrderFee *float32 `json:"OrderFee,omitempty"`
	// The total fee: the fees on the order lines + the fee on the order itself  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalTotalFee *float32 `json:"OriginalTotalFee,omitempty"`
	// The total fee: the fees on the order lines + the fee on the order itself  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	TotalFee *float32 `json:"TotalFee,omitempty"`
	Lines []MerchantOrderLineResponse `json:"Lines,omitempty"`
	// The customer's telephone number.
	Phone NullableString `json:"Phone,omitempty"`
	// The customer's email.
	Email string `json:"Email"`
	// The language of the order. Has to be a 2-letter ISO language code.
	LanguageCode NullableString `json:"LanguageCode,omitempty"`
	// Optional. A company's chamber of commerce number.
	CompanyRegistrationNo NullableString `json:"CompanyRegistrationNo,omitempty"`
	// Optional. A company's VAT number.
	VatNo NullableString `json:"VatNo,omitempty"`
	// The payment method used on the order.
	PaymentMethod NullableString `json:"PaymentMethod,omitempty"`
	// Reference or transaction id for the payment
	PaymentReferenceNo NullableString `json:"PaymentReferenceNo,omitempty"`
	// The currency code for the amounts of the order.
	CurrencyCode string `json:"CurrencyCode"`
	// The date the order was created at the channel.
	OrderDate time.Time `json:"OrderDate"`
	// The unique customer reference used by the channel.
	ChannelCustomerNo NullableString `json:"ChannelCustomerNo,omitempty"`
	// Extra data on the order.
	ExtraData map[string]string `json:"ExtraData,omitempty"`
}

type _MerchantOrderResponse MerchantOrderResponse

// NewMerchantOrderResponse instantiates a new MerchantOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantOrderResponse(email string, currencyCode string, orderDate time.Time) *MerchantOrderResponse {
	this := MerchantOrderResponse{}
	this.Email = email
	this.CurrencyCode = currencyCode
	this.OrderDate = orderDate
	return &this
}

// NewMerchantOrderResponseWithDefaults instantiates a new MerchantOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantOrderResponseWithDefaults() *MerchantOrderResponse {
	this := MerchantOrderResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MerchantOrderResponse) SetId(v int32) {
	o.Id = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *MerchantOrderResponse) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *MerchantOrderResponse) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *MerchantOrderResponse) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableInt32 and assigns it to the ChannelId field.
func (o *MerchantOrderResponse) SetChannelId(v int32) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *MerchantOrderResponse) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *MerchantOrderResponse) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetGlobalChannelName returns the GlobalChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetGlobalChannelName() string {
	if o == nil || IsNil(o.GlobalChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalChannelName.Get()
}

// GetGlobalChannelNameOk returns a tuple with the GlobalChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetGlobalChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalChannelName.Get(), o.GlobalChannelName.IsSet()
}

// HasGlobalChannelName returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasGlobalChannelName() bool {
	if o != nil && o.GlobalChannelName.IsSet() {
		return true
	}

	return false
}

// SetGlobalChannelName gets a reference to the given NullableString and assigns it to the GlobalChannelName field.
func (o *MerchantOrderResponse) SetGlobalChannelName(v string) {
	o.GlobalChannelName.Set(&v)
}
// SetGlobalChannelNameNil sets the value for GlobalChannelName to be an explicit nil
func (o *MerchantOrderResponse) SetGlobalChannelNameNil() {
	o.GlobalChannelName.Set(nil)
}

// UnsetGlobalChannelName ensures that no value is present for GlobalChannelName, not even an explicit nil
func (o *MerchantOrderResponse) UnsetGlobalChannelName() {
	o.GlobalChannelName.Unset()
}

// GetGlobalChannelId returns the GlobalChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetGlobalChannelId() int32 {
	if o == nil || IsNil(o.GlobalChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.GlobalChannelId.Get()
}

// GetGlobalChannelIdOk returns a tuple with the GlobalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetGlobalChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalChannelId.Get(), o.GlobalChannelId.IsSet()
}

// HasGlobalChannelId returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasGlobalChannelId() bool {
	if o != nil && o.GlobalChannelId.IsSet() {
		return true
	}

	return false
}

// SetGlobalChannelId gets a reference to the given NullableInt32 and assigns it to the GlobalChannelId field.
func (o *MerchantOrderResponse) SetGlobalChannelId(v int32) {
	o.GlobalChannelId.Set(&v)
}
// SetGlobalChannelIdNil sets the value for GlobalChannelId to be an explicit nil
func (o *MerchantOrderResponse) SetGlobalChannelIdNil() {
	o.GlobalChannelId.Set(nil)
}

// UnsetGlobalChannelId ensures that no value is present for GlobalChannelId, not even an explicit nil
func (o *MerchantOrderResponse) UnsetGlobalChannelId() {
	o.GlobalChannelId.Unset()
}

// GetChannelOrderSupport returns the ChannelOrderSupport field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetChannelOrderSupport() OrderSupport {
	if o == nil || IsNil(o.ChannelOrderSupport) {
		var ret OrderSupport
		return ret
	}
	return *o.ChannelOrderSupport
}

// GetChannelOrderSupportOk returns a tuple with the ChannelOrderSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetChannelOrderSupportOk() (*OrderSupport, bool) {
	if o == nil || IsNil(o.ChannelOrderSupport) {
		return nil, false
	}
	return o.ChannelOrderSupport, true
}

// HasChannelOrderSupport returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasChannelOrderSupport() bool {
	if o != nil && !IsNil(o.ChannelOrderSupport) {
		return true
	}

	return false
}

// SetChannelOrderSupport gets a reference to the given OrderSupport and assigns it to the ChannelOrderSupport field.
func (o *MerchantOrderResponse) SetChannelOrderSupport(v OrderSupport) {
	o.ChannelOrderSupport = &v
}

// GetChannelOrderNo returns the ChannelOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetChannelOrderNo() string {
	if o == nil || IsNil(o.ChannelOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelOrderNo.Get()
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelOrderNo.Get(), o.ChannelOrderNo.IsSet()
}

// HasChannelOrderNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasChannelOrderNo() bool {
	if o != nil && o.ChannelOrderNo.IsSet() {
		return true
	}

	return false
}

// SetChannelOrderNo gets a reference to the given NullableString and assigns it to the ChannelOrderNo field.
func (o *MerchantOrderResponse) SetChannelOrderNo(v string) {
	o.ChannelOrderNo.Set(&v)
}
// SetChannelOrderNoNil sets the value for ChannelOrderNo to be an explicit nil
func (o *MerchantOrderResponse) SetChannelOrderNoNil() {
	o.ChannelOrderNo.Set(nil)
}

// UnsetChannelOrderNo ensures that no value is present for ChannelOrderNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetChannelOrderNo() {
	o.ChannelOrderNo.Unset()
}

// GetCommercialOrderNo returns the CommercialOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetCommercialOrderNo() string {
	if o == nil || IsNil(o.CommercialOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.CommercialOrderNo.Get()
}

// GetCommercialOrderNoOk returns a tuple with the CommercialOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetCommercialOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommercialOrderNo.Get(), o.CommercialOrderNo.IsSet()
}

// HasCommercialOrderNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasCommercialOrderNo() bool {
	if o != nil && o.CommercialOrderNo.IsSet() {
		return true
	}

	return false
}

// SetCommercialOrderNo gets a reference to the given NullableString and assigns it to the CommercialOrderNo field.
func (o *MerchantOrderResponse) SetCommercialOrderNo(v string) {
	o.CommercialOrderNo.Set(&v)
}
// SetCommercialOrderNoNil sets the value for CommercialOrderNo to be an explicit nil
func (o *MerchantOrderResponse) SetCommercialOrderNoNil() {
	o.CommercialOrderNo.Set(nil)
}

// UnsetCommercialOrderNo ensures that no value is present for CommercialOrderNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetCommercialOrderNo() {
	o.CommercialOrderNo.Unset()
}

// GetMerchantOrderNo returns the MerchantOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetMerchantOrderNo() string {
	if o == nil || IsNil(o.MerchantOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantOrderNo.Get()
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantOrderNo.Get(), o.MerchantOrderNo.IsSet()
}

// HasMerchantOrderNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasMerchantOrderNo() bool {
	if o != nil && o.MerchantOrderNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantOrderNo gets a reference to the given NullableString and assigns it to the MerchantOrderNo field.
func (o *MerchantOrderResponse) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo.Set(&v)
}
// SetMerchantOrderNoNil sets the value for MerchantOrderNo to be an explicit nil
func (o *MerchantOrderResponse) SetMerchantOrderNoNil() {
	o.MerchantOrderNo.Set(nil)
}

// UnsetMerchantOrderNo ensures that no value is present for MerchantOrderNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetMerchantOrderNo() {
	o.MerchantOrderNo.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetStatus() OrderStatusView {
	if o == nil || IsNil(o.Status) {
		var ret OrderStatusView
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetStatusOk() (*OrderStatusView, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrderStatusView and assigns it to the Status field.
func (o *MerchantOrderResponse) SetStatus(v OrderStatusView) {
	o.Status = &v
}

// GetIsBusinessOrder returns the IsBusinessOrder field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetIsBusinessOrder() bool {
	if o == nil || IsNil(o.IsBusinessOrder) {
		var ret bool
		return ret
	}
	return *o.IsBusinessOrder
}

// GetIsBusinessOrderOk returns a tuple with the IsBusinessOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetIsBusinessOrderOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBusinessOrder) {
		return nil, false
	}
	return o.IsBusinessOrder, true
}

// HasIsBusinessOrder returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasIsBusinessOrder() bool {
	if o != nil && !IsNil(o.IsBusinessOrder) {
		return true
	}

	return false
}

// SetIsBusinessOrder gets a reference to the given bool and assigns it to the IsBusinessOrder field.
func (o *MerchantOrderResponse) SetIsBusinessOrder(v bool) {
	o.IsBusinessOrder = &v
}

// GetAcknowledgedDate returns the AcknowledgedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetAcknowledgedDate() time.Time {
	if o == nil || IsNil(o.AcknowledgedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.AcknowledgedDate.Get()
}

// GetAcknowledgedDateOk returns a tuple with the AcknowledgedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetAcknowledgedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcknowledgedDate.Get(), o.AcknowledgedDate.IsSet()
}

// HasAcknowledgedDate returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasAcknowledgedDate() bool {
	if o != nil && o.AcknowledgedDate.IsSet() {
		return true
	}

	return false
}

// SetAcknowledgedDate gets a reference to the given NullableTime and assigns it to the AcknowledgedDate field.
func (o *MerchantOrderResponse) SetAcknowledgedDate(v time.Time) {
	o.AcknowledgedDate.Set(&v)
}
// SetAcknowledgedDateNil sets the value for AcknowledgedDate to be an explicit nil
func (o *MerchantOrderResponse) SetAcknowledgedDateNil() {
	o.AcknowledgedDate.Set(nil)
}

// UnsetAcknowledgedDate ensures that no value is present for AcknowledgedDate, not even an explicit nil
func (o *MerchantOrderResponse) UnsetAcknowledgedDate() {
	o.AcknowledgedDate.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *MerchantOrderResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *MerchantOrderResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *MerchantOrderResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *MerchantOrderResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *MerchantOrderResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *MerchantOrderResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetClosedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// HasClosedAt returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasClosedAt() bool {
	if o != nil && o.ClosedAt.IsSet() {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given NullableTime and assigns it to the ClosedAt field.
func (o *MerchantOrderResponse) SetClosedAt(v time.Time) {
	o.ClosedAt.Set(&v)
}
// SetClosedAtNil sets the value for ClosedAt to be an explicit nil
func (o *MerchantOrderResponse) SetClosedAtNil() {
	o.ClosedAt.Set(nil)
}

// UnsetClosedAt ensures that no value is present for ClosedAt, not even an explicit nil
func (o *MerchantOrderResponse) UnsetClosedAt() {
	o.ClosedAt.Unset()
}

// GetMerchantComment returns the MerchantComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetMerchantComment() string {
	if o == nil || IsNil(o.MerchantComment.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantComment.Get()
}

// GetMerchantCommentOk returns a tuple with the MerchantComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetMerchantCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantComment.Get(), o.MerchantComment.IsSet()
}

// HasMerchantComment returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasMerchantComment() bool {
	if o != nil && o.MerchantComment.IsSet() {
		return true
	}

	return false
}

// SetMerchantComment gets a reference to the given NullableString and assigns it to the MerchantComment field.
func (o *MerchantOrderResponse) SetMerchantComment(v string) {
	o.MerchantComment.Set(&v)
}
// SetMerchantCommentNil sets the value for MerchantComment to be an explicit nil
func (o *MerchantOrderResponse) SetMerchantCommentNil() {
	o.MerchantComment.Set(nil)
}

// UnsetMerchantComment ensures that no value is present for MerchantComment, not even an explicit nil
func (o *MerchantOrderResponse) UnsetMerchantComment() {
	o.MerchantComment.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetBillingAddress() MerchantAddressResponse {
	if o == nil || IsNil(o.BillingAddress) {
		var ret MerchantAddressResponse
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetBillingAddressOk() (*MerchantAddressResponse, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given MerchantAddressResponse and assigns it to the BillingAddress field.
func (o *MerchantOrderResponse) SetBillingAddress(v MerchantAddressResponse) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetShippingAddress() MerchantAddressResponse {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret MerchantAddressResponse
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetShippingAddressOk() (*MerchantAddressResponse, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given MerchantAddressResponse and assigns it to the ShippingAddress field.
func (o *MerchantOrderResponse) SetShippingAddress(v MerchantAddressResponse) {
	o.ShippingAddress = &v
}

// GetSubTotalInclVat returns the SubTotalInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetSubTotalInclVat() float32 {
	if o == nil || IsNil(o.SubTotalInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.SubTotalInclVat.Get()
}

// GetSubTotalInclVatOk returns a tuple with the SubTotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetSubTotalInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubTotalInclVat.Get(), o.SubTotalInclVat.IsSet()
}

// HasSubTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasSubTotalInclVat() bool {
	if o != nil && o.SubTotalInclVat.IsSet() {
		return true
	}

	return false
}

// SetSubTotalInclVat gets a reference to the given NullableFloat32 and assigns it to the SubTotalInclVat field.
func (o *MerchantOrderResponse) SetSubTotalInclVat(v float32) {
	o.SubTotalInclVat.Set(&v)
}
// SetSubTotalInclVatNil sets the value for SubTotalInclVat to be an explicit nil
func (o *MerchantOrderResponse) SetSubTotalInclVatNil() {
	o.SubTotalInclVat.Set(nil)
}

// UnsetSubTotalInclVat ensures that no value is present for SubTotalInclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetSubTotalInclVat() {
	o.SubTotalInclVat.Unset()
}

// GetSubTotalVat returns the SubTotalVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetSubTotalVat() float32 {
	if o == nil || IsNil(o.SubTotalVat.Get()) {
		var ret float32
		return ret
	}
	return *o.SubTotalVat.Get()
}

// GetSubTotalVatOk returns a tuple with the SubTotalVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetSubTotalVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubTotalVat.Get(), o.SubTotalVat.IsSet()
}

// HasSubTotalVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasSubTotalVat() bool {
	if o != nil && o.SubTotalVat.IsSet() {
		return true
	}

	return false
}

// SetSubTotalVat gets a reference to the given NullableFloat32 and assigns it to the SubTotalVat field.
func (o *MerchantOrderResponse) SetSubTotalVat(v float32) {
	o.SubTotalVat.Set(&v)
}
// SetSubTotalVatNil sets the value for SubTotalVat to be an explicit nil
func (o *MerchantOrderResponse) SetSubTotalVatNil() {
	o.SubTotalVat.Set(nil)
}

// UnsetSubTotalVat ensures that no value is present for SubTotalVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetSubTotalVat() {
	o.SubTotalVat.Unset()
}

// GetShippingCostsInclVat returns the ShippingCostsInclVat field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetShippingCostsInclVat() float32 {
	if o == nil || IsNil(o.ShippingCostsInclVat) {
		var ret float32
		return ret
	}
	return *o.ShippingCostsInclVat
}

// GetShippingCostsInclVatOk returns a tuple with the ShippingCostsInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetShippingCostsInclVatOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingCostsInclVat) {
		return nil, false
	}
	return o.ShippingCostsInclVat, true
}

// HasShippingCostsInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasShippingCostsInclVat() bool {
	if o != nil && !IsNil(o.ShippingCostsInclVat) {
		return true
	}

	return false
}

// SetShippingCostsInclVat gets a reference to the given float32 and assigns it to the ShippingCostsInclVat field.
func (o *MerchantOrderResponse) SetShippingCostsInclVat(v float32) {
	o.ShippingCostsInclVat = &v
}

// GetShippingCostsVat returns the ShippingCostsVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetShippingCostsVat() float32 {
	if o == nil || IsNil(o.ShippingCostsVat.Get()) {
		var ret float32
		return ret
	}
	return *o.ShippingCostsVat.Get()
}

// GetShippingCostsVatOk returns a tuple with the ShippingCostsVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetShippingCostsVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingCostsVat.Get(), o.ShippingCostsVat.IsSet()
}

// HasShippingCostsVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasShippingCostsVat() bool {
	if o != nil && o.ShippingCostsVat.IsSet() {
		return true
	}

	return false
}

// SetShippingCostsVat gets a reference to the given NullableFloat32 and assigns it to the ShippingCostsVat field.
func (o *MerchantOrderResponse) SetShippingCostsVat(v float32) {
	o.ShippingCostsVat.Set(&v)
}
// SetShippingCostsVatNil sets the value for ShippingCostsVat to be an explicit nil
func (o *MerchantOrderResponse) SetShippingCostsVatNil() {
	o.ShippingCostsVat.Set(nil)
}

// UnsetShippingCostsVat ensures that no value is present for ShippingCostsVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetShippingCostsVat() {
	o.ShippingCostsVat.Unset()
}

// GetTotalInclVat returns the TotalInclVat field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetTotalInclVat() float32 {
	if o == nil || IsNil(o.TotalInclVat) {
		var ret float32
		return ret
	}
	return *o.TotalInclVat
}

// GetTotalInclVatOk returns a tuple with the TotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetTotalInclVatOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalInclVat) {
		return nil, false
	}
	return o.TotalInclVat, true
}

// HasTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasTotalInclVat() bool {
	if o != nil && !IsNil(o.TotalInclVat) {
		return true
	}

	return false
}

// SetTotalInclVat gets a reference to the given float32 and assigns it to the TotalInclVat field.
func (o *MerchantOrderResponse) SetTotalInclVat(v float32) {
	o.TotalInclVat = &v
}

// GetTotalVat returns the TotalVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetTotalVat() float32 {
	if o == nil || IsNil(o.TotalVat.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalVat.Get()
}

// GetTotalVatOk returns a tuple with the TotalVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetTotalVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVat.Get(), o.TotalVat.IsSet()
}

// HasTotalVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasTotalVat() bool {
	if o != nil && o.TotalVat.IsSet() {
		return true
	}

	return false
}

// SetTotalVat gets a reference to the given NullableFloat32 and assigns it to the TotalVat field.
func (o *MerchantOrderResponse) SetTotalVat(v float32) {
	o.TotalVat.Set(&v)
}
// SetTotalVatNil sets the value for TotalVat to be an explicit nil
func (o *MerchantOrderResponse) SetTotalVatNil() {
	o.TotalVat.Set(nil)
}

// UnsetTotalVat ensures that no value is present for TotalVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetTotalVat() {
	o.TotalVat.Unset()
}

// GetOriginalSubTotalInclVat returns the OriginalSubTotalInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalSubTotalInclVat() float32 {
	if o == nil || IsNil(o.OriginalSubTotalInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalSubTotalInclVat.Get()
}

// GetOriginalSubTotalInclVatOk returns a tuple with the OriginalSubTotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalSubTotalInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalSubTotalInclVat.Get(), o.OriginalSubTotalInclVat.IsSet()
}

// HasOriginalSubTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalSubTotalInclVat() bool {
	if o != nil && o.OriginalSubTotalInclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalSubTotalInclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalSubTotalInclVat field.
func (o *MerchantOrderResponse) SetOriginalSubTotalInclVat(v float32) {
	o.OriginalSubTotalInclVat.Set(&v)
}
// SetOriginalSubTotalInclVatNil sets the value for OriginalSubTotalInclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalSubTotalInclVatNil() {
	o.OriginalSubTotalInclVat.Set(nil)
}

// UnsetOriginalSubTotalInclVat ensures that no value is present for OriginalSubTotalInclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalSubTotalInclVat() {
	o.OriginalSubTotalInclVat.Unset()
}

// GetOriginalSubTotalVat returns the OriginalSubTotalVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalSubTotalVat() float32 {
	if o == nil || IsNil(o.OriginalSubTotalVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalSubTotalVat.Get()
}

// GetOriginalSubTotalVatOk returns a tuple with the OriginalSubTotalVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalSubTotalVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalSubTotalVat.Get(), o.OriginalSubTotalVat.IsSet()
}

// HasOriginalSubTotalVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalSubTotalVat() bool {
	if o != nil && o.OriginalSubTotalVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalSubTotalVat gets a reference to the given NullableFloat32 and assigns it to the OriginalSubTotalVat field.
func (o *MerchantOrderResponse) SetOriginalSubTotalVat(v float32) {
	o.OriginalSubTotalVat.Set(&v)
}
// SetOriginalSubTotalVatNil sets the value for OriginalSubTotalVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalSubTotalVatNil() {
	o.OriginalSubTotalVat.Set(nil)
}

// UnsetOriginalSubTotalVat ensures that no value is present for OriginalSubTotalVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalSubTotalVat() {
	o.OriginalSubTotalVat.Unset()
}

// GetOriginalShippingCostsInclVat returns the OriginalShippingCostsInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalShippingCostsInclVat() float32 {
	if o == nil || IsNil(o.OriginalShippingCostsInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalShippingCostsInclVat.Get()
}

// GetOriginalShippingCostsInclVatOk returns a tuple with the OriginalShippingCostsInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalShippingCostsInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalShippingCostsInclVat.Get(), o.OriginalShippingCostsInclVat.IsSet()
}

// HasOriginalShippingCostsInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalShippingCostsInclVat() bool {
	if o != nil && o.OriginalShippingCostsInclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalShippingCostsInclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalShippingCostsInclVat field.
func (o *MerchantOrderResponse) SetOriginalShippingCostsInclVat(v float32) {
	o.OriginalShippingCostsInclVat.Set(&v)
}
// SetOriginalShippingCostsInclVatNil sets the value for OriginalShippingCostsInclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalShippingCostsInclVatNil() {
	o.OriginalShippingCostsInclVat.Set(nil)
}

// UnsetOriginalShippingCostsInclVat ensures that no value is present for OriginalShippingCostsInclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalShippingCostsInclVat() {
	o.OriginalShippingCostsInclVat.Unset()
}

// GetOriginalShippingCostsVat returns the OriginalShippingCostsVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalShippingCostsVat() float32 {
	if o == nil || IsNil(o.OriginalShippingCostsVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalShippingCostsVat.Get()
}

// GetOriginalShippingCostsVatOk returns a tuple with the OriginalShippingCostsVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalShippingCostsVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalShippingCostsVat.Get(), o.OriginalShippingCostsVat.IsSet()
}

// HasOriginalShippingCostsVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalShippingCostsVat() bool {
	if o != nil && o.OriginalShippingCostsVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalShippingCostsVat gets a reference to the given NullableFloat32 and assigns it to the OriginalShippingCostsVat field.
func (o *MerchantOrderResponse) SetOriginalShippingCostsVat(v float32) {
	o.OriginalShippingCostsVat.Set(&v)
}
// SetOriginalShippingCostsVatNil sets the value for OriginalShippingCostsVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalShippingCostsVatNil() {
	o.OriginalShippingCostsVat.Set(nil)
}

// UnsetOriginalShippingCostsVat ensures that no value is present for OriginalShippingCostsVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalShippingCostsVat() {
	o.OriginalShippingCostsVat.Unset()
}

// GetOriginalTotalInclVat returns the OriginalTotalInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalTotalInclVat() float32 {
	if o == nil || IsNil(o.OriginalTotalInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalTotalInclVat.Get()
}

// GetOriginalTotalInclVatOk returns a tuple with the OriginalTotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalTotalInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTotalInclVat.Get(), o.OriginalTotalInclVat.IsSet()
}

// HasOriginalTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalTotalInclVat() bool {
	if o != nil && o.OriginalTotalInclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalTotalInclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalTotalInclVat field.
func (o *MerchantOrderResponse) SetOriginalTotalInclVat(v float32) {
	o.OriginalTotalInclVat.Set(&v)
}
// SetOriginalTotalInclVatNil sets the value for OriginalTotalInclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalTotalInclVatNil() {
	o.OriginalTotalInclVat.Set(nil)
}

// UnsetOriginalTotalInclVat ensures that no value is present for OriginalTotalInclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalTotalInclVat() {
	o.OriginalTotalInclVat.Unset()
}

// GetOriginalTotalVat returns the OriginalTotalVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalTotalVat() float32 {
	if o == nil || IsNil(o.OriginalTotalVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalTotalVat.Get()
}

// GetOriginalTotalVatOk returns a tuple with the OriginalTotalVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalTotalVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTotalVat.Get(), o.OriginalTotalVat.IsSet()
}

// HasOriginalTotalVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalTotalVat() bool {
	if o != nil && o.OriginalTotalVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalTotalVat gets a reference to the given NullableFloat32 and assigns it to the OriginalTotalVat field.
func (o *MerchantOrderResponse) SetOriginalTotalVat(v float32) {
	o.OriginalTotalVat.Set(&v)
}
// SetOriginalTotalVatNil sets the value for OriginalTotalVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalTotalVatNil() {
	o.OriginalTotalVat.Set(nil)
}

// UnsetOriginalTotalVat ensures that no value is present for OriginalTotalVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalTotalVat() {
	o.OriginalTotalVat.Unset()
}

// GetSubTotalExclVat returns the SubTotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetSubTotalExclVat() float32 {
	if o == nil || IsNil(o.SubTotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.SubTotalExclVat.Get()
}

// GetSubTotalExclVatOk returns a tuple with the SubTotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetSubTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubTotalExclVat.Get(), o.SubTotalExclVat.IsSet()
}

// HasSubTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasSubTotalExclVat() bool {
	if o != nil && o.SubTotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetSubTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the SubTotalExclVat field.
func (o *MerchantOrderResponse) SetSubTotalExclVat(v float32) {
	o.SubTotalExclVat.Set(&v)
}
// SetSubTotalExclVatNil sets the value for SubTotalExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetSubTotalExclVatNil() {
	o.SubTotalExclVat.Set(nil)
}

// UnsetSubTotalExclVat ensures that no value is present for SubTotalExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetSubTotalExclVat() {
	o.SubTotalExclVat.Unset()
}

// GetTotalExclVat returns the TotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetTotalExclVat() float32 {
	if o == nil || IsNil(o.TotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalExclVat.Get()
}

// GetTotalExclVatOk returns a tuple with the TotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalExclVat.Get(), o.TotalExclVat.IsSet()
}

// HasTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasTotalExclVat() bool {
	if o != nil && o.TotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the TotalExclVat field.
func (o *MerchantOrderResponse) SetTotalExclVat(v float32) {
	o.TotalExclVat.Set(&v)
}
// SetTotalExclVatNil sets the value for TotalExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetTotalExclVatNil() {
	o.TotalExclVat.Set(nil)
}

// UnsetTotalExclVat ensures that no value is present for TotalExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetTotalExclVat() {
	o.TotalExclVat.Unset()
}

// GetShippingCostsExclVat returns the ShippingCostsExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetShippingCostsExclVat() float32 {
	if o == nil || IsNil(o.ShippingCostsExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.ShippingCostsExclVat.Get()
}

// GetShippingCostsExclVatOk returns a tuple with the ShippingCostsExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetShippingCostsExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingCostsExclVat.Get(), o.ShippingCostsExclVat.IsSet()
}

// HasShippingCostsExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasShippingCostsExclVat() bool {
	if o != nil && o.ShippingCostsExclVat.IsSet() {
		return true
	}

	return false
}

// SetShippingCostsExclVat gets a reference to the given NullableFloat32 and assigns it to the ShippingCostsExclVat field.
func (o *MerchantOrderResponse) SetShippingCostsExclVat(v float32) {
	o.ShippingCostsExclVat.Set(&v)
}
// SetShippingCostsExclVatNil sets the value for ShippingCostsExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetShippingCostsExclVatNil() {
	o.ShippingCostsExclVat.Set(nil)
}

// UnsetShippingCostsExclVat ensures that no value is present for ShippingCostsExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetShippingCostsExclVat() {
	o.ShippingCostsExclVat.Unset()
}

// GetOriginalSubTotalExclVat returns the OriginalSubTotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalSubTotalExclVat() float32 {
	if o == nil || IsNil(o.OriginalSubTotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalSubTotalExclVat.Get()
}

// GetOriginalSubTotalExclVatOk returns a tuple with the OriginalSubTotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalSubTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalSubTotalExclVat.Get(), o.OriginalSubTotalExclVat.IsSet()
}

// HasOriginalSubTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalSubTotalExclVat() bool {
	if o != nil && o.OriginalSubTotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalSubTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalSubTotalExclVat field.
func (o *MerchantOrderResponse) SetOriginalSubTotalExclVat(v float32) {
	o.OriginalSubTotalExclVat.Set(&v)
}
// SetOriginalSubTotalExclVatNil sets the value for OriginalSubTotalExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalSubTotalExclVatNil() {
	o.OriginalSubTotalExclVat.Set(nil)
}

// UnsetOriginalSubTotalExclVat ensures that no value is present for OriginalSubTotalExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalSubTotalExclVat() {
	o.OriginalSubTotalExclVat.Unset()
}

// GetOriginalShippingCostsExclVat returns the OriginalShippingCostsExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalShippingCostsExclVat() float32 {
	if o == nil || IsNil(o.OriginalShippingCostsExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalShippingCostsExclVat.Get()
}

// GetOriginalShippingCostsExclVatOk returns a tuple with the OriginalShippingCostsExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalShippingCostsExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalShippingCostsExclVat.Get(), o.OriginalShippingCostsExclVat.IsSet()
}

// HasOriginalShippingCostsExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalShippingCostsExclVat() bool {
	if o != nil && o.OriginalShippingCostsExclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalShippingCostsExclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalShippingCostsExclVat field.
func (o *MerchantOrderResponse) SetOriginalShippingCostsExclVat(v float32) {
	o.OriginalShippingCostsExclVat.Set(&v)
}
// SetOriginalShippingCostsExclVatNil sets the value for OriginalShippingCostsExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalShippingCostsExclVatNil() {
	o.OriginalShippingCostsExclVat.Set(nil)
}

// UnsetOriginalShippingCostsExclVat ensures that no value is present for OriginalShippingCostsExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalShippingCostsExclVat() {
	o.OriginalShippingCostsExclVat.Unset()
}

// GetOriginalTotalExclVat returns the OriginalTotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetOriginalTotalExclVat() float32 {
	if o == nil || IsNil(o.OriginalTotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalTotalExclVat.Get()
}

// GetOriginalTotalExclVatOk returns a tuple with the OriginalTotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetOriginalTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTotalExclVat.Get(), o.OriginalTotalExclVat.IsSet()
}

// HasOriginalTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalTotalExclVat() bool {
	if o != nil && o.OriginalTotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalTotalExclVat field.
func (o *MerchantOrderResponse) SetOriginalTotalExclVat(v float32) {
	o.OriginalTotalExclVat.Set(&v)
}
// SetOriginalTotalExclVatNil sets the value for OriginalTotalExclVat to be an explicit nil
func (o *MerchantOrderResponse) SetOriginalTotalExclVatNil() {
	o.OriginalTotalExclVat.Set(nil)
}

// UnsetOriginalTotalExclVat ensures that no value is present for OriginalTotalExclVat, not even an explicit nil
func (o *MerchantOrderResponse) UnsetOriginalTotalExclVat() {
	o.OriginalTotalExclVat.Unset()
}

// GetOriginalSubTotalFee returns the OriginalSubTotalFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetOriginalSubTotalFee() float32 {
	if o == nil || IsNil(o.OriginalSubTotalFee) {
		var ret float32
		return ret
	}
	return *o.OriginalSubTotalFee
}

// GetOriginalSubTotalFeeOk returns a tuple with the OriginalSubTotalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetOriginalSubTotalFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalSubTotalFee) {
		return nil, false
	}
	return o.OriginalSubTotalFee, true
}

// HasOriginalSubTotalFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalSubTotalFee() bool {
	if o != nil && !IsNil(o.OriginalSubTotalFee) {
		return true
	}

	return false
}

// SetOriginalSubTotalFee gets a reference to the given float32 and assigns it to the OriginalSubTotalFee field.
func (o *MerchantOrderResponse) SetOriginalSubTotalFee(v float32) {
	o.OriginalSubTotalFee = &v
}

// GetSubTotalFee returns the SubTotalFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetSubTotalFee() float32 {
	if o == nil || IsNil(o.SubTotalFee) {
		var ret float32
		return ret
	}
	return *o.SubTotalFee
}

// GetSubTotalFeeOk returns a tuple with the SubTotalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetSubTotalFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.SubTotalFee) {
		return nil, false
	}
	return o.SubTotalFee, true
}

// HasSubTotalFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasSubTotalFee() bool {
	if o != nil && !IsNil(o.SubTotalFee) {
		return true
	}

	return false
}

// SetSubTotalFee gets a reference to the given float32 and assigns it to the SubTotalFee field.
func (o *MerchantOrderResponse) SetSubTotalFee(v float32) {
	o.SubTotalFee = &v
}

// GetOriginalOrderFee returns the OriginalOrderFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetOriginalOrderFee() float32 {
	if o == nil || IsNil(o.OriginalOrderFee) {
		var ret float32
		return ret
	}
	return *o.OriginalOrderFee
}

// GetOriginalOrderFeeOk returns a tuple with the OriginalOrderFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetOriginalOrderFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalOrderFee) {
		return nil, false
	}
	return o.OriginalOrderFee, true
}

// HasOriginalOrderFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalOrderFee() bool {
	if o != nil && !IsNil(o.OriginalOrderFee) {
		return true
	}

	return false
}

// SetOriginalOrderFee gets a reference to the given float32 and assigns it to the OriginalOrderFee field.
func (o *MerchantOrderResponse) SetOriginalOrderFee(v float32) {
	o.OriginalOrderFee = &v
}

// GetOrderFee returns the OrderFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetOrderFee() float32 {
	if o == nil || IsNil(o.OrderFee) {
		var ret float32
		return ret
	}
	return *o.OrderFee
}

// GetOrderFeeOk returns a tuple with the OrderFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetOrderFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderFee) {
		return nil, false
	}
	return o.OrderFee, true
}

// HasOrderFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOrderFee() bool {
	if o != nil && !IsNil(o.OrderFee) {
		return true
	}

	return false
}

// SetOrderFee gets a reference to the given float32 and assigns it to the OrderFee field.
func (o *MerchantOrderResponse) SetOrderFee(v float32) {
	o.OrderFee = &v
}

// GetOriginalTotalFee returns the OriginalTotalFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetOriginalTotalFee() float32 {
	if o == nil || IsNil(o.OriginalTotalFee) {
		var ret float32
		return ret
	}
	return *o.OriginalTotalFee
}

// GetOriginalTotalFeeOk returns a tuple with the OriginalTotalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetOriginalTotalFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalTotalFee) {
		return nil, false
	}
	return o.OriginalTotalFee, true
}

// HasOriginalTotalFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasOriginalTotalFee() bool {
	if o != nil && !IsNil(o.OriginalTotalFee) {
		return true
	}

	return false
}

// SetOriginalTotalFee gets a reference to the given float32 and assigns it to the OriginalTotalFee field.
func (o *MerchantOrderResponse) SetOriginalTotalFee(v float32) {
	o.OriginalTotalFee = &v
}

// GetTotalFee returns the TotalFee field value if set, zero value otherwise.
func (o *MerchantOrderResponse) GetTotalFee() float32 {
	if o == nil || IsNil(o.TotalFee) {
		var ret float32
		return ret
	}
	return *o.TotalFee
}

// GetTotalFeeOk returns a tuple with the TotalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetTotalFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalFee) {
		return nil, false
	}
	return o.TotalFee, true
}

// HasTotalFee returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasTotalFee() bool {
	if o != nil && !IsNil(o.TotalFee) {
		return true
	}

	return false
}

// SetTotalFee gets a reference to the given float32 and assigns it to the TotalFee field.
func (o *MerchantOrderResponse) SetTotalFee(v float32) {
	o.TotalFee = &v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetLines() []MerchantOrderLineResponse {
	if o == nil {
		var ret []MerchantOrderLineResponse
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetLinesOk() ([]MerchantOrderLineResponse, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []MerchantOrderLineResponse and assigns it to the Lines field.
func (o *MerchantOrderResponse) SetLines(v []MerchantOrderLineResponse) {
	o.Lines = v
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *MerchantOrderResponse) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *MerchantOrderResponse) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *MerchantOrderResponse) UnsetPhone() {
	o.Phone.Unset()
}

// GetEmail returns the Email field value
func (o *MerchantOrderResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *MerchantOrderResponse) SetEmail(v string) {
	o.Email = v
}

// GetLanguageCode returns the LanguageCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetLanguageCode() string {
	if o == nil || IsNil(o.LanguageCode.Get()) {
		var ret string
		return ret
	}
	return *o.LanguageCode.Get()
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetLanguageCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LanguageCode.Get(), o.LanguageCode.IsSet()
}

// HasLanguageCode returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasLanguageCode() bool {
	if o != nil && o.LanguageCode.IsSet() {
		return true
	}

	return false
}

// SetLanguageCode gets a reference to the given NullableString and assigns it to the LanguageCode field.
func (o *MerchantOrderResponse) SetLanguageCode(v string) {
	o.LanguageCode.Set(&v)
}
// SetLanguageCodeNil sets the value for LanguageCode to be an explicit nil
func (o *MerchantOrderResponse) SetLanguageCodeNil() {
	o.LanguageCode.Set(nil)
}

// UnsetLanguageCode ensures that no value is present for LanguageCode, not even an explicit nil
func (o *MerchantOrderResponse) UnsetLanguageCode() {
	o.LanguageCode.Unset()
}

// GetCompanyRegistrationNo returns the CompanyRegistrationNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetCompanyRegistrationNo() string {
	if o == nil || IsNil(o.CompanyRegistrationNo.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyRegistrationNo.Get()
}

// GetCompanyRegistrationNoOk returns a tuple with the CompanyRegistrationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetCompanyRegistrationNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyRegistrationNo.Get(), o.CompanyRegistrationNo.IsSet()
}

// HasCompanyRegistrationNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasCompanyRegistrationNo() bool {
	if o != nil && o.CompanyRegistrationNo.IsSet() {
		return true
	}

	return false
}

// SetCompanyRegistrationNo gets a reference to the given NullableString and assigns it to the CompanyRegistrationNo field.
func (o *MerchantOrderResponse) SetCompanyRegistrationNo(v string) {
	o.CompanyRegistrationNo.Set(&v)
}
// SetCompanyRegistrationNoNil sets the value for CompanyRegistrationNo to be an explicit nil
func (o *MerchantOrderResponse) SetCompanyRegistrationNoNil() {
	o.CompanyRegistrationNo.Set(nil)
}

// UnsetCompanyRegistrationNo ensures that no value is present for CompanyRegistrationNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetCompanyRegistrationNo() {
	o.CompanyRegistrationNo.Unset()
}

// GetVatNo returns the VatNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetVatNo() string {
	if o == nil || IsNil(o.VatNo.Get()) {
		var ret string
		return ret
	}
	return *o.VatNo.Get()
}

// GetVatNoOk returns a tuple with the VatNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetVatNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VatNo.Get(), o.VatNo.IsSet()
}

// HasVatNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasVatNo() bool {
	if o != nil && o.VatNo.IsSet() {
		return true
	}

	return false
}

// SetVatNo gets a reference to the given NullableString and assigns it to the VatNo field.
func (o *MerchantOrderResponse) SetVatNo(v string) {
	o.VatNo.Set(&v)
}
// SetVatNoNil sets the value for VatNo to be an explicit nil
func (o *MerchantOrderResponse) SetVatNoNil() {
	o.VatNo.Set(nil)
}

// UnsetVatNo ensures that no value is present for VatNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetVatNo() {
	o.VatNo.Unset()
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethod.Get()
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetPaymentMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethod.Get(), o.PaymentMethod.IsSet()
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given NullableString and assigns it to the PaymentMethod field.
func (o *MerchantOrderResponse) SetPaymentMethod(v string) {
	o.PaymentMethod.Set(&v)
}
// SetPaymentMethodNil sets the value for PaymentMethod to be an explicit nil
func (o *MerchantOrderResponse) SetPaymentMethodNil() {
	o.PaymentMethod.Set(nil)
}

// UnsetPaymentMethod ensures that no value is present for PaymentMethod, not even an explicit nil
func (o *MerchantOrderResponse) UnsetPaymentMethod() {
	o.PaymentMethod.Unset()
}

// GetPaymentReferenceNo returns the PaymentReferenceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetPaymentReferenceNo() string {
	if o == nil || IsNil(o.PaymentReferenceNo.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentReferenceNo.Get()
}

// GetPaymentReferenceNoOk returns a tuple with the PaymentReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetPaymentReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentReferenceNo.Get(), o.PaymentReferenceNo.IsSet()
}

// HasPaymentReferenceNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasPaymentReferenceNo() bool {
	if o != nil && o.PaymentReferenceNo.IsSet() {
		return true
	}

	return false
}

// SetPaymentReferenceNo gets a reference to the given NullableString and assigns it to the PaymentReferenceNo field.
func (o *MerchantOrderResponse) SetPaymentReferenceNo(v string) {
	o.PaymentReferenceNo.Set(&v)
}
// SetPaymentReferenceNoNil sets the value for PaymentReferenceNo to be an explicit nil
func (o *MerchantOrderResponse) SetPaymentReferenceNoNil() {
	o.PaymentReferenceNo.Set(nil)
}

// UnsetPaymentReferenceNo ensures that no value is present for PaymentReferenceNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetPaymentReferenceNo() {
	o.PaymentReferenceNo.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *MerchantOrderResponse) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *MerchantOrderResponse) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetOrderDate returns the OrderDate field value
func (o *MerchantOrderResponse) GetOrderDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.OrderDate
}

// GetOrderDateOk returns a tuple with the OrderDate field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderResponse) GetOrderDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderDate, true
}

// SetOrderDate sets field value
func (o *MerchantOrderResponse) SetOrderDate(v time.Time) {
	o.OrderDate = v
}

// GetChannelCustomerNo returns the ChannelCustomerNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetChannelCustomerNo() string {
	if o == nil || IsNil(o.ChannelCustomerNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelCustomerNo.Get()
}

// GetChannelCustomerNoOk returns a tuple with the ChannelCustomerNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetChannelCustomerNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelCustomerNo.Get(), o.ChannelCustomerNo.IsSet()
}

// HasChannelCustomerNo returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasChannelCustomerNo() bool {
	if o != nil && o.ChannelCustomerNo.IsSet() {
		return true
	}

	return false
}

// SetChannelCustomerNo gets a reference to the given NullableString and assigns it to the ChannelCustomerNo field.
func (o *MerchantOrderResponse) SetChannelCustomerNo(v string) {
	o.ChannelCustomerNo.Set(&v)
}
// SetChannelCustomerNoNil sets the value for ChannelCustomerNo to be an explicit nil
func (o *MerchantOrderResponse) SetChannelCustomerNoNil() {
	o.ChannelCustomerNo.Set(nil)
}

// UnsetChannelCustomerNo ensures that no value is present for ChannelCustomerNo, not even an explicit nil
func (o *MerchantOrderResponse) UnsetChannelCustomerNo() {
	o.ChannelCustomerNo.Unset()
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderResponse) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderResponse) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantOrderResponse) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *MerchantOrderResponse) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

func (o MerchantOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantOrderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.GlobalChannelName.IsSet() {
		toSerialize["GlobalChannelName"] = o.GlobalChannelName.Get()
	}
	if o.GlobalChannelId.IsSet() {
		toSerialize["GlobalChannelId"] = o.GlobalChannelId.Get()
	}
	if !IsNil(o.ChannelOrderSupport) {
		toSerialize["ChannelOrderSupport"] = o.ChannelOrderSupport
	}
	if o.ChannelOrderNo.IsSet() {
		toSerialize["ChannelOrderNo"] = o.ChannelOrderNo.Get()
	}
	if o.CommercialOrderNo.IsSet() {
		toSerialize["CommercialOrderNo"] = o.CommercialOrderNo.Get()
	}
	if o.MerchantOrderNo.IsSet() {
		toSerialize["MerchantOrderNo"] = o.MerchantOrderNo.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.IsBusinessOrder) {
		toSerialize["IsBusinessOrder"] = o.IsBusinessOrder
	}
	if o.AcknowledgedDate.IsSet() {
		toSerialize["AcknowledgedDate"] = o.AcknowledgedDate.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["CreatedAt"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["UpdatedAt"] = o.UpdatedAt.Get()
	}
	if o.ClosedAt.IsSet() {
		toSerialize["ClosedAt"] = o.ClosedAt.Get()
	}
	if o.MerchantComment.IsSet() {
		toSerialize["MerchantComment"] = o.MerchantComment.Get()
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["BillingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["ShippingAddress"] = o.ShippingAddress
	}
	if o.SubTotalInclVat.IsSet() {
		toSerialize["SubTotalInclVat"] = o.SubTotalInclVat.Get()
	}
	if o.SubTotalVat.IsSet() {
		toSerialize["SubTotalVat"] = o.SubTotalVat.Get()
	}
	if !IsNil(o.ShippingCostsInclVat) {
		toSerialize["ShippingCostsInclVat"] = o.ShippingCostsInclVat
	}
	if o.ShippingCostsVat.IsSet() {
		toSerialize["ShippingCostsVat"] = o.ShippingCostsVat.Get()
	}
	if !IsNil(o.TotalInclVat) {
		toSerialize["TotalInclVat"] = o.TotalInclVat
	}
	if o.TotalVat.IsSet() {
		toSerialize["TotalVat"] = o.TotalVat.Get()
	}
	if o.OriginalSubTotalInclVat.IsSet() {
		toSerialize["OriginalSubTotalInclVat"] = o.OriginalSubTotalInclVat.Get()
	}
	if o.OriginalSubTotalVat.IsSet() {
		toSerialize["OriginalSubTotalVat"] = o.OriginalSubTotalVat.Get()
	}
	if o.OriginalShippingCostsInclVat.IsSet() {
		toSerialize["OriginalShippingCostsInclVat"] = o.OriginalShippingCostsInclVat.Get()
	}
	if o.OriginalShippingCostsVat.IsSet() {
		toSerialize["OriginalShippingCostsVat"] = o.OriginalShippingCostsVat.Get()
	}
	if o.OriginalTotalInclVat.IsSet() {
		toSerialize["OriginalTotalInclVat"] = o.OriginalTotalInclVat.Get()
	}
	if o.OriginalTotalVat.IsSet() {
		toSerialize["OriginalTotalVat"] = o.OriginalTotalVat.Get()
	}
	if o.SubTotalExclVat.IsSet() {
		toSerialize["SubTotalExclVat"] = o.SubTotalExclVat.Get()
	}
	if o.TotalExclVat.IsSet() {
		toSerialize["TotalExclVat"] = o.TotalExclVat.Get()
	}
	if o.ShippingCostsExclVat.IsSet() {
		toSerialize["ShippingCostsExclVat"] = o.ShippingCostsExclVat.Get()
	}
	if o.OriginalSubTotalExclVat.IsSet() {
		toSerialize["OriginalSubTotalExclVat"] = o.OriginalSubTotalExclVat.Get()
	}
	if o.OriginalShippingCostsExclVat.IsSet() {
		toSerialize["OriginalShippingCostsExclVat"] = o.OriginalShippingCostsExclVat.Get()
	}
	if o.OriginalTotalExclVat.IsSet() {
		toSerialize["OriginalTotalExclVat"] = o.OriginalTotalExclVat.Get()
	}
	if !IsNil(o.OriginalSubTotalFee) {
		toSerialize["OriginalSubTotalFee"] = o.OriginalSubTotalFee
	}
	if !IsNil(o.SubTotalFee) {
		toSerialize["SubTotalFee"] = o.SubTotalFee
	}
	if !IsNil(o.OriginalOrderFee) {
		toSerialize["OriginalOrderFee"] = o.OriginalOrderFee
	}
	if !IsNil(o.OrderFee) {
		toSerialize["OrderFee"] = o.OrderFee
	}
	if !IsNil(o.OriginalTotalFee) {
		toSerialize["OriginalTotalFee"] = o.OriginalTotalFee
	}
	if !IsNil(o.TotalFee) {
		toSerialize["TotalFee"] = o.TotalFee
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	if o.Phone.IsSet() {
		toSerialize["Phone"] = o.Phone.Get()
	}
	toSerialize["Email"] = o.Email
	if o.LanguageCode.IsSet() {
		toSerialize["LanguageCode"] = o.LanguageCode.Get()
	}
	if o.CompanyRegistrationNo.IsSet() {
		toSerialize["CompanyRegistrationNo"] = o.CompanyRegistrationNo.Get()
	}
	if o.VatNo.IsSet() {
		toSerialize["VatNo"] = o.VatNo.Get()
	}
	if o.PaymentMethod.IsSet() {
		toSerialize["PaymentMethod"] = o.PaymentMethod.Get()
	}
	if o.PaymentReferenceNo.IsSet() {
		toSerialize["PaymentReferenceNo"] = o.PaymentReferenceNo.Get()
	}
	toSerialize["CurrencyCode"] = o.CurrencyCode
	toSerialize["OrderDate"] = o.OrderDate
	if o.ChannelCustomerNo.IsSet() {
		toSerialize["ChannelCustomerNo"] = o.ChannelCustomerNo.Get()
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	return toSerialize, nil
}

func (o *MerchantOrderResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Email",
		"CurrencyCode",
		"OrderDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantOrderResponse := _MerchantOrderResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantOrderResponse)

	if err != nil {
		return err
	}

	*o = MerchantOrderResponse(varMerchantOrderResponse)

	return err
}

type NullableMerchantOrderResponse struct {
	value *MerchantOrderResponse
	isSet bool
}

func (v NullableMerchantOrderResponse) Get() *MerchantOrderResponse {
	return v.value
}

func (v *NullableMerchantOrderResponse) Set(val *MerchantOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantOrderResponse(val *MerchantOrderResponse) *NullableMerchantOrderResponse {
	return &NullableMerchantOrderResponse{value: val, isSet: true}
}

func (v NullableMerchantOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


