/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantCreateReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantCreateReportResponse{}

// MerchantCreateReportResponse struct for MerchantCreateReportResponse
type MerchantCreateReportResponse struct {
	ReportId *string `json:"ReportId,omitempty"`
	Status *ReportStatus `json:"Status,omitempty"`
}

// NewMerchantCreateReportResponse instantiates a new MerchantCreateReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantCreateReportResponse() *MerchantCreateReportResponse {
	this := MerchantCreateReportResponse{}
	return &this
}

// NewMerchantCreateReportResponseWithDefaults instantiates a new MerchantCreateReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantCreateReportResponseWithDefaults() *MerchantCreateReportResponse {
	this := MerchantCreateReportResponse{}
	return &this
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *MerchantCreateReportResponse) GetReportId() string {
	if o == nil || IsNil(o.ReportId) {
		var ret string
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateReportResponse) GetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *MerchantCreateReportResponse) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given string and assigns it to the ReportId field.
func (o *MerchantCreateReportResponse) SetReportId(v string) {
	o.ReportId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MerchantCreateReportResponse) GetStatus() ReportStatus {
	if o == nil || IsNil(o.Status) {
		var ret ReportStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateReportResponse) GetStatusOk() (*ReportStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MerchantCreateReportResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ReportStatus and assigns it to the Status field.
func (o *MerchantCreateReportResponse) SetStatus(v ReportStatus) {
	o.Status = &v
}

func (o MerchantCreateReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantCreateReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportId) {
		toSerialize["ReportId"] = o.ReportId
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	return toSerialize, nil
}

type NullableMerchantCreateReportResponse struct {
	value *MerchantCreateReportResponse
	isSet bool
}

func (v NullableMerchantCreateReportResponse) Get() *MerchantCreateReportResponse {
	return v.value
}

func (v *NullableMerchantCreateReportResponse) Set(val *MerchantCreateReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantCreateReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantCreateReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantCreateReportResponse(val *MerchantCreateReportResponse) *NullableMerchantCreateReportResponse {
	return &NullableMerchantCreateReportResponse{value: val, isSet: true}
}

func (v NullableMerchantCreateReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantCreateReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


