/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MerchantShipmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantShipmentResponse{}

// MerchantShipmentResponse struct for MerchantShipmentResponse
type MerchantShipmentResponse struct {
	// The unique shipment reference used by the Merchant.
	MerchantShipmentNo string `json:"MerchantShipmentNo"`
	// The unique order reference used by the Merchant.
	MerchantOrderNo NullableString `json:"MerchantOrderNo,omitempty"`
	// The unique shipment reference used by the Channel.
	ChannelShipmentNo NullableString `json:"ChannelShipmentNo,omitempty"`
	// The unique order reference used by the Channel.
	ChannelOrderNo NullableString `json:"ChannelOrderNo,omitempty"`
	// The unique ID of the channel for this specific environment/account.
	ChannelId NullableInt32 `json:"ChannelId,omitempty"`
	// The unique ID of the channel across all of ChannelEngine.
	GlobalChannelId NullableInt32 `json:"GlobalChannelId,omitempty"`
	Lines []MerchantShipmentLineResponse `json:"Lines,omitempty"`
	// The date at which the shipment was created in ChannelEngine.
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	// The date at which the shipment was last modified in ChannelEngine.
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	// Extra data on the order. Each item must have an unqiue key
	ExtraData map[string]string `json:"ExtraData,omitempty"`
	// The unique shipping reference used by the Shipping carrier (track&trace number).
	TrackTraceNo NullableString `json:"TrackTraceNo,omitempty"`
	// A link to a page of the carrier where the customer can track the shipping of her package.
	TrackTraceUrl NullableString `json:"TrackTraceUrl,omitempty"`
	// The unique return shipping reference that may be used by the Shipping carrier (track & trace number) if the shipment is returned.
	ReturnTrackTraceNo NullableString `json:"ReturnTrackTraceNo,omitempty"`
	// Shipment method: the carrier used for shipping the package. E.g. DHL, postNL.
	Method NullableString `json:"Method,omitempty"`
	// The code of the country from where the package is being shipped.
	ShippedFromCountryCode NullableString `json:"ShippedFromCountryCode,omitempty"`
	// The id of the stock location where you ship the package from
	ShippedFromStockLocationId NullableInt32 `json:"ShippedFromStockLocationId,omitempty"`
	// The date at which the shipment was originally created in the source system (if available).
	ShipmentDate NullableTime `json:"ShipmentDate,omitempty"`
}

type _MerchantShipmentResponse MerchantShipmentResponse

// NewMerchantShipmentResponse instantiates a new MerchantShipmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantShipmentResponse(merchantShipmentNo string) *MerchantShipmentResponse {
	this := MerchantShipmentResponse{}
	this.MerchantShipmentNo = merchantShipmentNo
	return &this
}

// NewMerchantShipmentResponseWithDefaults instantiates a new MerchantShipmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantShipmentResponseWithDefaults() *MerchantShipmentResponse {
	this := MerchantShipmentResponse{}
	return &this
}

// GetMerchantShipmentNo returns the MerchantShipmentNo field value
func (o *MerchantShipmentResponse) GetMerchantShipmentNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantShipmentNo
}

// GetMerchantShipmentNoOk returns a tuple with the MerchantShipmentNo field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentResponse) GetMerchantShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantShipmentNo, true
}

// SetMerchantShipmentNo sets field value
func (o *MerchantShipmentResponse) SetMerchantShipmentNo(v string) {
	o.MerchantShipmentNo = v
}

// GetMerchantOrderNo returns the MerchantOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetMerchantOrderNo() string {
	if o == nil || IsNil(o.MerchantOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantOrderNo.Get()
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantOrderNo.Get(), o.MerchantOrderNo.IsSet()
}

// HasMerchantOrderNo returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasMerchantOrderNo() bool {
	if o != nil && o.MerchantOrderNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantOrderNo gets a reference to the given NullableString and assigns it to the MerchantOrderNo field.
func (o *MerchantShipmentResponse) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo.Set(&v)
}
// SetMerchantOrderNoNil sets the value for MerchantOrderNo to be an explicit nil
func (o *MerchantShipmentResponse) SetMerchantOrderNoNil() {
	o.MerchantOrderNo.Set(nil)
}

// UnsetMerchantOrderNo ensures that no value is present for MerchantOrderNo, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetMerchantOrderNo() {
	o.MerchantOrderNo.Unset()
}

// GetChannelShipmentNo returns the ChannelShipmentNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetChannelShipmentNo() string {
	if o == nil || IsNil(o.ChannelShipmentNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelShipmentNo.Get()
}

// GetChannelShipmentNoOk returns a tuple with the ChannelShipmentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetChannelShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelShipmentNo.Get(), o.ChannelShipmentNo.IsSet()
}

// HasChannelShipmentNo returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasChannelShipmentNo() bool {
	if o != nil && o.ChannelShipmentNo.IsSet() {
		return true
	}

	return false
}

// SetChannelShipmentNo gets a reference to the given NullableString and assigns it to the ChannelShipmentNo field.
func (o *MerchantShipmentResponse) SetChannelShipmentNo(v string) {
	o.ChannelShipmentNo.Set(&v)
}
// SetChannelShipmentNoNil sets the value for ChannelShipmentNo to be an explicit nil
func (o *MerchantShipmentResponse) SetChannelShipmentNoNil() {
	o.ChannelShipmentNo.Set(nil)
}

// UnsetChannelShipmentNo ensures that no value is present for ChannelShipmentNo, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetChannelShipmentNo() {
	o.ChannelShipmentNo.Unset()
}

// GetChannelOrderNo returns the ChannelOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetChannelOrderNo() string {
	if o == nil || IsNil(o.ChannelOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelOrderNo.Get()
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelOrderNo.Get(), o.ChannelOrderNo.IsSet()
}

// HasChannelOrderNo returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasChannelOrderNo() bool {
	if o != nil && o.ChannelOrderNo.IsSet() {
		return true
	}

	return false
}

// SetChannelOrderNo gets a reference to the given NullableString and assigns it to the ChannelOrderNo field.
func (o *MerchantShipmentResponse) SetChannelOrderNo(v string) {
	o.ChannelOrderNo.Set(&v)
}
// SetChannelOrderNoNil sets the value for ChannelOrderNo to be an explicit nil
func (o *MerchantShipmentResponse) SetChannelOrderNoNil() {
	o.ChannelOrderNo.Set(nil)
}

// UnsetChannelOrderNo ensures that no value is present for ChannelOrderNo, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetChannelOrderNo() {
	o.ChannelOrderNo.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableInt32 and assigns it to the ChannelId field.
func (o *MerchantShipmentResponse) SetChannelId(v int32) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *MerchantShipmentResponse) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetGlobalChannelId returns the GlobalChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetGlobalChannelId() int32 {
	if o == nil || IsNil(o.GlobalChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.GlobalChannelId.Get()
}

// GetGlobalChannelIdOk returns a tuple with the GlobalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetGlobalChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalChannelId.Get(), o.GlobalChannelId.IsSet()
}

// HasGlobalChannelId returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasGlobalChannelId() bool {
	if o != nil && o.GlobalChannelId.IsSet() {
		return true
	}

	return false
}

// SetGlobalChannelId gets a reference to the given NullableInt32 and assigns it to the GlobalChannelId field.
func (o *MerchantShipmentResponse) SetGlobalChannelId(v int32) {
	o.GlobalChannelId.Set(&v)
}
// SetGlobalChannelIdNil sets the value for GlobalChannelId to be an explicit nil
func (o *MerchantShipmentResponse) SetGlobalChannelIdNil() {
	o.GlobalChannelId.Set(nil)
}

// UnsetGlobalChannelId ensures that no value is present for GlobalChannelId, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetGlobalChannelId() {
	o.GlobalChannelId.Unset()
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetLines() []MerchantShipmentLineResponse {
	if o == nil {
		var ret []MerchantShipmentLineResponse
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetLinesOk() ([]MerchantShipmentLineResponse, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []MerchantShipmentLineResponse and assigns it to the Lines field.
func (o *MerchantShipmentResponse) SetLines(v []MerchantShipmentLineResponse) {
	o.Lines = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MerchantShipmentResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantShipmentResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MerchantShipmentResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MerchantShipmentResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantShipmentResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *MerchantShipmentResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *MerchantShipmentResponse) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

// GetTrackTraceNo returns the TrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetTrackTraceNo() string {
	if o == nil || IsNil(o.TrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceNo.Get()
}

// GetTrackTraceNoOk returns a tuple with the TrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceNo.Get(), o.TrackTraceNo.IsSet()
}

// HasTrackTraceNo returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasTrackTraceNo() bool {
	if o != nil && o.TrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceNo gets a reference to the given NullableString and assigns it to the TrackTraceNo field.
func (o *MerchantShipmentResponse) SetTrackTraceNo(v string) {
	o.TrackTraceNo.Set(&v)
}
// SetTrackTraceNoNil sets the value for TrackTraceNo to be an explicit nil
func (o *MerchantShipmentResponse) SetTrackTraceNoNil() {
	o.TrackTraceNo.Set(nil)
}

// UnsetTrackTraceNo ensures that no value is present for TrackTraceNo, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetTrackTraceNo() {
	o.TrackTraceNo.Unset()
}

// GetTrackTraceUrl returns the TrackTraceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetTrackTraceUrl() string {
	if o == nil || IsNil(o.TrackTraceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceUrl.Get()
}

// GetTrackTraceUrlOk returns a tuple with the TrackTraceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetTrackTraceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceUrl.Get(), o.TrackTraceUrl.IsSet()
}

// HasTrackTraceUrl returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasTrackTraceUrl() bool {
	if o != nil && o.TrackTraceUrl.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceUrl gets a reference to the given NullableString and assigns it to the TrackTraceUrl field.
func (o *MerchantShipmentResponse) SetTrackTraceUrl(v string) {
	o.TrackTraceUrl.Set(&v)
}
// SetTrackTraceUrlNil sets the value for TrackTraceUrl to be an explicit nil
func (o *MerchantShipmentResponse) SetTrackTraceUrlNil() {
	o.TrackTraceUrl.Set(nil)
}

// UnsetTrackTraceUrl ensures that no value is present for TrackTraceUrl, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetTrackTraceUrl() {
	o.TrackTraceUrl.Unset()
}

// GetReturnTrackTraceNo returns the ReturnTrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetReturnTrackTraceNo() string {
	if o == nil || IsNil(o.ReturnTrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnTrackTraceNo.Get()
}

// GetReturnTrackTraceNoOk returns a tuple with the ReturnTrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetReturnTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnTrackTraceNo.Get(), o.ReturnTrackTraceNo.IsSet()
}

// HasReturnTrackTraceNo returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasReturnTrackTraceNo() bool {
	if o != nil && o.ReturnTrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetReturnTrackTraceNo gets a reference to the given NullableString and assigns it to the ReturnTrackTraceNo field.
func (o *MerchantShipmentResponse) SetReturnTrackTraceNo(v string) {
	o.ReturnTrackTraceNo.Set(&v)
}
// SetReturnTrackTraceNoNil sets the value for ReturnTrackTraceNo to be an explicit nil
func (o *MerchantShipmentResponse) SetReturnTrackTraceNoNil() {
	o.ReturnTrackTraceNo.Set(nil)
}

// UnsetReturnTrackTraceNo ensures that no value is present for ReturnTrackTraceNo, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetReturnTrackTraceNo() {
	o.ReturnTrackTraceNo.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *MerchantShipmentResponse) SetMethod(v string) {
	o.Method.Set(&v)
}
// SetMethodNil sets the value for Method to be an explicit nil
func (o *MerchantShipmentResponse) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetMethod() {
	o.Method.Unset()
}

// GetShippedFromCountryCode returns the ShippedFromCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetShippedFromCountryCode() string {
	if o == nil || IsNil(o.ShippedFromCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.ShippedFromCountryCode.Get()
}

// GetShippedFromCountryCodeOk returns a tuple with the ShippedFromCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetShippedFromCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromCountryCode.Get(), o.ShippedFromCountryCode.IsSet()
}

// HasShippedFromCountryCode returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasShippedFromCountryCode() bool {
	if o != nil && o.ShippedFromCountryCode.IsSet() {
		return true
	}

	return false
}

// SetShippedFromCountryCode gets a reference to the given NullableString and assigns it to the ShippedFromCountryCode field.
func (o *MerchantShipmentResponse) SetShippedFromCountryCode(v string) {
	o.ShippedFromCountryCode.Set(&v)
}
// SetShippedFromCountryCodeNil sets the value for ShippedFromCountryCode to be an explicit nil
func (o *MerchantShipmentResponse) SetShippedFromCountryCodeNil() {
	o.ShippedFromCountryCode.Set(nil)
}

// UnsetShippedFromCountryCode ensures that no value is present for ShippedFromCountryCode, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetShippedFromCountryCode() {
	o.ShippedFromCountryCode.Unset()
}

// GetShippedFromStockLocationId returns the ShippedFromStockLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetShippedFromStockLocationId() int32 {
	if o == nil || IsNil(o.ShippedFromStockLocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippedFromStockLocationId.Get()
}

// GetShippedFromStockLocationIdOk returns a tuple with the ShippedFromStockLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetShippedFromStockLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromStockLocationId.Get(), o.ShippedFromStockLocationId.IsSet()
}

// HasShippedFromStockLocationId returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasShippedFromStockLocationId() bool {
	if o != nil && o.ShippedFromStockLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippedFromStockLocationId gets a reference to the given NullableInt32 and assigns it to the ShippedFromStockLocationId field.
func (o *MerchantShipmentResponse) SetShippedFromStockLocationId(v int32) {
	o.ShippedFromStockLocationId.Set(&v)
}
// SetShippedFromStockLocationIdNil sets the value for ShippedFromStockLocationId to be an explicit nil
func (o *MerchantShipmentResponse) SetShippedFromStockLocationIdNil() {
	o.ShippedFromStockLocationId.Set(nil)
}

// UnsetShippedFromStockLocationId ensures that no value is present for ShippedFromStockLocationId, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetShippedFromStockLocationId() {
	o.ShippedFromStockLocationId.Unset()
}

// GetShipmentDate returns the ShipmentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentResponse) GetShipmentDate() time.Time {
	if o == nil || IsNil(o.ShipmentDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ShipmentDate.Get()
}

// GetShipmentDateOk returns a tuple with the ShipmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentResponse) GetShipmentDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentDate.Get(), o.ShipmentDate.IsSet()
}

// HasShipmentDate returns a boolean if a field has been set.
func (o *MerchantShipmentResponse) HasShipmentDate() bool {
	if o != nil && o.ShipmentDate.IsSet() {
		return true
	}

	return false
}

// SetShipmentDate gets a reference to the given NullableTime and assigns it to the ShipmentDate field.
func (o *MerchantShipmentResponse) SetShipmentDate(v time.Time) {
	o.ShipmentDate.Set(&v)
}
// SetShipmentDateNil sets the value for ShipmentDate to be an explicit nil
func (o *MerchantShipmentResponse) SetShipmentDateNil() {
	o.ShipmentDate.Set(nil)
}

// UnsetShipmentDate ensures that no value is present for ShipmentDate, not even an explicit nil
func (o *MerchantShipmentResponse) UnsetShipmentDate() {
	o.ShipmentDate.Unset()
}

func (o MerchantShipmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantShipmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MerchantShipmentNo"] = o.MerchantShipmentNo
	if o.MerchantOrderNo.IsSet() {
		toSerialize["MerchantOrderNo"] = o.MerchantOrderNo.Get()
	}
	if o.ChannelShipmentNo.IsSet() {
		toSerialize["ChannelShipmentNo"] = o.ChannelShipmentNo.Get()
	}
	if o.ChannelOrderNo.IsSet() {
		toSerialize["ChannelOrderNo"] = o.ChannelOrderNo.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.GlobalChannelId.IsSet() {
		toSerialize["GlobalChannelId"] = o.GlobalChannelId.Get()
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.TrackTraceNo.IsSet() {
		toSerialize["TrackTraceNo"] = o.TrackTraceNo.Get()
	}
	if o.TrackTraceUrl.IsSet() {
		toSerialize["TrackTraceUrl"] = o.TrackTraceUrl.Get()
	}
	if o.ReturnTrackTraceNo.IsSet() {
		toSerialize["ReturnTrackTraceNo"] = o.ReturnTrackTraceNo.Get()
	}
	if o.Method.IsSet() {
		toSerialize["Method"] = o.Method.Get()
	}
	if o.ShippedFromCountryCode.IsSet() {
		toSerialize["ShippedFromCountryCode"] = o.ShippedFromCountryCode.Get()
	}
	if o.ShippedFromStockLocationId.IsSet() {
		toSerialize["ShippedFromStockLocationId"] = o.ShippedFromStockLocationId.Get()
	}
	if o.ShipmentDate.IsSet() {
		toSerialize["ShipmentDate"] = o.ShipmentDate.Get()
	}
	return toSerialize, nil
}

func (o *MerchantShipmentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MerchantShipmentNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantShipmentResponse := _MerchantShipmentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantShipmentResponse)

	if err != nil {
		return err
	}

	*o = MerchantShipmentResponse(varMerchantShipmentResponse)

	return err
}

type NullableMerchantShipmentResponse struct {
	value *MerchantShipmentResponse
	isSet bool
}

func (v NullableMerchantShipmentResponse) Get() *MerchantShipmentResponse {
	return v.value
}

func (v *NullableMerchantShipmentResponse) Set(val *MerchantShipmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantShipmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantShipmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantShipmentResponse(val *MerchantShipmentResponse) *NullableMerchantShipmentResponse {
	return &NullableMerchantShipmentResponse{value: val, isSet: true}
}

func (v NullableMerchantShipmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantShipmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


