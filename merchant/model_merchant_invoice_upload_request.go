/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantInvoiceUploadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantInvoiceUploadRequest{}

// MerchantInvoiceUploadRequest struct for MerchantInvoiceUploadRequest
type MerchantInvoiceUploadRequest struct {
	// Data needed to upload an invoice.
	InvoiceContent string `json:"InvoiceContent"`
	// The invoice number used in the invoice.
	InvoiceNumber string `json:"InvoiceNumber"`
}

type _MerchantInvoiceUploadRequest MerchantInvoiceUploadRequest

// NewMerchantInvoiceUploadRequest instantiates a new MerchantInvoiceUploadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantInvoiceUploadRequest(invoiceContent string, invoiceNumber string) *MerchantInvoiceUploadRequest {
	this := MerchantInvoiceUploadRequest{}
	this.InvoiceContent = invoiceContent
	this.InvoiceNumber = invoiceNumber
	return &this
}

// NewMerchantInvoiceUploadRequestWithDefaults instantiates a new MerchantInvoiceUploadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantInvoiceUploadRequestWithDefaults() *MerchantInvoiceUploadRequest {
	this := MerchantInvoiceUploadRequest{}
	return &this
}

// GetInvoiceContent returns the InvoiceContent field value
func (o *MerchantInvoiceUploadRequest) GetInvoiceContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceContent
}

// GetInvoiceContentOk returns a tuple with the InvoiceContent field value
// and a boolean to check if the value has been set.
func (o *MerchantInvoiceUploadRequest) GetInvoiceContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceContent, true
}

// SetInvoiceContent sets field value
func (o *MerchantInvoiceUploadRequest) SetInvoiceContent(v string) {
	o.InvoiceContent = v
}

// GetInvoiceNumber returns the InvoiceNumber field value
func (o *MerchantInvoiceUploadRequest) GetInvoiceNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value
// and a boolean to check if the value has been set.
func (o *MerchantInvoiceUploadRequest) GetInvoiceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceNumber, true
}

// SetInvoiceNumber sets field value
func (o *MerchantInvoiceUploadRequest) SetInvoiceNumber(v string) {
	o.InvoiceNumber = v
}

func (o MerchantInvoiceUploadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantInvoiceUploadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["InvoiceContent"] = o.InvoiceContent
	toSerialize["InvoiceNumber"] = o.InvoiceNumber
	return toSerialize, nil
}

func (o *MerchantInvoiceUploadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"InvoiceContent",
		"InvoiceNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantInvoiceUploadRequest := _MerchantInvoiceUploadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantInvoiceUploadRequest)

	if err != nil {
		return err
	}

	*o = MerchantInvoiceUploadRequest(varMerchantInvoiceUploadRequest)

	return err
}

type NullableMerchantInvoiceUploadRequest struct {
	value *MerchantInvoiceUploadRequest
	isSet bool
}

func (v NullableMerchantInvoiceUploadRequest) Get() *MerchantInvoiceUploadRequest {
	return v.value
}

func (v *NullableMerchantInvoiceUploadRequest) Set(val *MerchantInvoiceUploadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantInvoiceUploadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantInvoiceUploadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantInvoiceUploadRequest(val *MerchantInvoiceUploadRequest) *NullableMerchantInvoiceUploadRequest {
	return &NullableMerchantInvoiceUploadRequest{value: val, isSet: true}
}

func (v NullableMerchantInvoiceUploadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantInvoiceUploadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


