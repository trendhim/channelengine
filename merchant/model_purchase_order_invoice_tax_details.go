/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the PurchaseOrderInvoiceTaxDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurchaseOrderInvoiceTaxDetails{}

// PurchaseOrderInvoiceTaxDetails struct for PurchaseOrderInvoiceTaxDetails
type PurchaseOrderInvoiceTaxDetails struct {
	TaxType *ModulesTaxType `json:"TaxType,omitempty"`
	TaxRate NullableFloat32 `json:"TaxRate,omitempty"`
	TaxAmount NullableFloat32 `json:"TaxAmount,omitempty"`
	TaxAmountCurrencyCode NullableString `json:"TaxAmountCurrencyCode,omitempty"`
	TaxableAmount NullableFloat32 `json:"TaxableAmount,omitempty"`
	TaxableAmountCurrencyCode NullableString `json:"TaxableAmountCurrencyCode,omitempty"`
}

// NewPurchaseOrderInvoiceTaxDetails instantiates a new PurchaseOrderInvoiceTaxDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseOrderInvoiceTaxDetails() *PurchaseOrderInvoiceTaxDetails {
	this := PurchaseOrderInvoiceTaxDetails{}
	return &this
}

// NewPurchaseOrderInvoiceTaxDetailsWithDefaults instantiates a new PurchaseOrderInvoiceTaxDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseOrderInvoiceTaxDetailsWithDefaults() *PurchaseOrderInvoiceTaxDetails {
	this := PurchaseOrderInvoiceTaxDetails{}
	return &this
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxType() ModulesTaxType {
	if o == nil || IsNil(o.TaxType) {
		var ret ModulesTaxType
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxTypeOk() (*ModulesTaxType, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given ModulesTaxType and assigns it to the TaxType field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxType(v ModulesTaxType) {
	o.TaxType = &v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxRate() float32 {
	if o == nil || IsNil(o.TaxRate.Get()) {
		var ret float32
		return ret
	}
	return *o.TaxRate.Get()
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxRate.Get(), o.TaxRate.IsSet()
}

// HasTaxRate returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxRate() bool {
	if o != nil && o.TaxRate.IsSet() {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given NullableFloat32 and assigns it to the TaxRate field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxRate(v float32) {
	o.TaxRate.Set(&v)
}
// SetTaxRateNil sets the value for TaxRate to be an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxRateNil() {
	o.TaxRate.Set(nil)
}

// UnsetTaxRate ensures that no value is present for TaxRate, not even an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) UnsetTaxRate() {
	o.TaxRate.Unset()
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount.Get()) {
		var ret float32
		return ret
	}
	return *o.TaxAmount.Get()
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxAmount.Get(), o.TaxAmount.IsSet()
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxAmount() bool {
	if o != nil && o.TaxAmount.IsSet() {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given NullableFloat32 and assigns it to the TaxAmount field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxAmount(v float32) {
	o.TaxAmount.Set(&v)
}
// SetTaxAmountNil sets the value for TaxAmount to be an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxAmountNil() {
	o.TaxAmount.Set(nil)
}

// UnsetTaxAmount ensures that no value is present for TaxAmount, not even an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) UnsetTaxAmount() {
	o.TaxAmount.Unset()
}

// GetTaxAmountCurrencyCode returns the TaxAmountCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxAmountCurrencyCode() string {
	if o == nil || IsNil(o.TaxAmountCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.TaxAmountCurrencyCode.Get()
}

// GetTaxAmountCurrencyCodeOk returns a tuple with the TaxAmountCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxAmountCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxAmountCurrencyCode.Get(), o.TaxAmountCurrencyCode.IsSet()
}

// HasTaxAmountCurrencyCode returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxAmountCurrencyCode() bool {
	if o != nil && o.TaxAmountCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetTaxAmountCurrencyCode gets a reference to the given NullableString and assigns it to the TaxAmountCurrencyCode field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxAmountCurrencyCode(v string) {
	o.TaxAmountCurrencyCode.Set(&v)
}
// SetTaxAmountCurrencyCodeNil sets the value for TaxAmountCurrencyCode to be an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxAmountCurrencyCodeNil() {
	o.TaxAmountCurrencyCode.Set(nil)
}

// UnsetTaxAmountCurrencyCode ensures that no value is present for TaxAmountCurrencyCode, not even an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) UnsetTaxAmountCurrencyCode() {
	o.TaxAmountCurrencyCode.Unset()
}

// GetTaxableAmount returns the TaxableAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxableAmount() float32 {
	if o == nil || IsNil(o.TaxableAmount.Get()) {
		var ret float32
		return ret
	}
	return *o.TaxableAmount.Get()
}

// GetTaxableAmountOk returns a tuple with the TaxableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxableAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxableAmount.Get(), o.TaxableAmount.IsSet()
}

// HasTaxableAmount returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxableAmount() bool {
	if o != nil && o.TaxableAmount.IsSet() {
		return true
	}

	return false
}

// SetTaxableAmount gets a reference to the given NullableFloat32 and assigns it to the TaxableAmount field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxableAmount(v float32) {
	o.TaxableAmount.Set(&v)
}
// SetTaxableAmountNil sets the value for TaxableAmount to be an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxableAmountNil() {
	o.TaxableAmount.Set(nil)
}

// UnsetTaxableAmount ensures that no value is present for TaxableAmount, not even an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) UnsetTaxableAmount() {
	o.TaxableAmount.Unset()
}

// GetTaxableAmountCurrencyCode returns the TaxableAmountCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxableAmountCurrencyCode() string {
	if o == nil || IsNil(o.TaxableAmountCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.TaxableAmountCurrencyCode.Get()
}

// GetTaxableAmountCurrencyCodeOk returns a tuple with the TaxableAmountCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderInvoiceTaxDetails) GetTaxableAmountCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxableAmountCurrencyCode.Get(), o.TaxableAmountCurrencyCode.IsSet()
}

// HasTaxableAmountCurrencyCode returns a boolean if a field has been set.
func (o *PurchaseOrderInvoiceTaxDetails) HasTaxableAmountCurrencyCode() bool {
	if o != nil && o.TaxableAmountCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetTaxableAmountCurrencyCode gets a reference to the given NullableString and assigns it to the TaxableAmountCurrencyCode field.
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxableAmountCurrencyCode(v string) {
	o.TaxableAmountCurrencyCode.Set(&v)
}
// SetTaxableAmountCurrencyCodeNil sets the value for TaxableAmountCurrencyCode to be an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) SetTaxableAmountCurrencyCodeNil() {
	o.TaxableAmountCurrencyCode.Set(nil)
}

// UnsetTaxableAmountCurrencyCode ensures that no value is present for TaxableAmountCurrencyCode, not even an explicit nil
func (o *PurchaseOrderInvoiceTaxDetails) UnsetTaxableAmountCurrencyCode() {
	o.TaxableAmountCurrencyCode.Unset()
}

func (o PurchaseOrderInvoiceTaxDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurchaseOrderInvoiceTaxDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxType) {
		toSerialize["TaxType"] = o.TaxType
	}
	if o.TaxRate.IsSet() {
		toSerialize["TaxRate"] = o.TaxRate.Get()
	}
	if o.TaxAmount.IsSet() {
		toSerialize["TaxAmount"] = o.TaxAmount.Get()
	}
	if o.TaxAmountCurrencyCode.IsSet() {
		toSerialize["TaxAmountCurrencyCode"] = o.TaxAmountCurrencyCode.Get()
	}
	if o.TaxableAmount.IsSet() {
		toSerialize["TaxableAmount"] = o.TaxableAmount.Get()
	}
	if o.TaxableAmountCurrencyCode.IsSet() {
		toSerialize["TaxableAmountCurrencyCode"] = o.TaxableAmountCurrencyCode.Get()
	}
	return toSerialize, nil
}

type NullablePurchaseOrderInvoiceTaxDetails struct {
	value *PurchaseOrderInvoiceTaxDetails
	isSet bool
}

func (v NullablePurchaseOrderInvoiceTaxDetails) Get() *PurchaseOrderInvoiceTaxDetails {
	return v.value
}

func (v *NullablePurchaseOrderInvoiceTaxDetails) Set(val *PurchaseOrderInvoiceTaxDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrderInvoiceTaxDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrderInvoiceTaxDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrderInvoiceTaxDetails(val *PurchaseOrderInvoiceTaxDetails) *NullablePurchaseOrderInvoiceTaxDetails {
	return &NullablePurchaseOrderInvoiceTaxDetails{value: val, isSet: true}
}

func (v NullablePurchaseOrderInvoiceTaxDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrderInvoiceTaxDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


