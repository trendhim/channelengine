/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantOrderAcknowledgementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantOrderAcknowledgementRequest{}

// MerchantOrderAcknowledgementRequest struct for MerchantOrderAcknowledgementRequest
type MerchantOrderAcknowledgementRequest struct {
	// Your own order reference, this will be used in consecutive order processing API calls.
	MerchantOrderNo string `json:"MerchantOrderNo"`
	// The ChannelEngine order ID of the order you would like to acknowledge.
	OrderId int32 `json:"OrderId"`
}

type _MerchantOrderAcknowledgementRequest MerchantOrderAcknowledgementRequest

// NewMerchantOrderAcknowledgementRequest instantiates a new MerchantOrderAcknowledgementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantOrderAcknowledgementRequest(merchantOrderNo string, orderId int32) *MerchantOrderAcknowledgementRequest {
	this := MerchantOrderAcknowledgementRequest{}
	this.MerchantOrderNo = merchantOrderNo
	this.OrderId = orderId
	return &this
}

// NewMerchantOrderAcknowledgementRequestWithDefaults instantiates a new MerchantOrderAcknowledgementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantOrderAcknowledgementRequestWithDefaults() *MerchantOrderAcknowledgementRequest {
	this := MerchantOrderAcknowledgementRequest{}
	return &this
}

// GetMerchantOrderNo returns the MerchantOrderNo field value
func (o *MerchantOrderAcknowledgementRequest) GetMerchantOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantOrderNo
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderAcknowledgementRequest) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantOrderNo, true
}

// SetMerchantOrderNo sets field value
func (o *MerchantOrderAcknowledgementRequest) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo = v
}

// GetOrderId returns the OrderId field value
func (o *MerchantOrderAcknowledgementRequest) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderAcknowledgementRequest) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *MerchantOrderAcknowledgementRequest) SetOrderId(v int32) {
	o.OrderId = v
}

func (o MerchantOrderAcknowledgementRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantOrderAcknowledgementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MerchantOrderNo"] = o.MerchantOrderNo
	toSerialize["OrderId"] = o.OrderId
	return toSerialize, nil
}

func (o *MerchantOrderAcknowledgementRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MerchantOrderNo",
		"OrderId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantOrderAcknowledgementRequest := _MerchantOrderAcknowledgementRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantOrderAcknowledgementRequest)

	if err != nil {
		return err
	}

	*o = MerchantOrderAcknowledgementRequest(varMerchantOrderAcknowledgementRequest)

	return err
}

type NullableMerchantOrderAcknowledgementRequest struct {
	value *MerchantOrderAcknowledgementRequest
	isSet bool
}

func (v NullableMerchantOrderAcknowledgementRequest) Get() *MerchantOrderAcknowledgementRequest {
	return v.value
}

func (v *NullableMerchantOrderAcknowledgementRequest) Set(val *MerchantOrderAcknowledgementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantOrderAcknowledgementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantOrderAcknowledgementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantOrderAcknowledgementRequest(val *MerchantOrderAcknowledgementRequest) *NullableMerchantOrderAcknowledgementRequest {
	return &NullableMerchantOrderAcknowledgementRequest{value: val, isSet: true}
}

func (v NullableMerchantOrderAcknowledgementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantOrderAcknowledgementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


