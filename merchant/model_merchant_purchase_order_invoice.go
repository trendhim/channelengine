/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantPurchaseOrderInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantPurchaseOrderInvoice{}

// MerchantPurchaseOrderInvoice struct for MerchantPurchaseOrderInvoice
type MerchantPurchaseOrderInvoice struct {
	InvoiceNo NullableString `json:"InvoiceNo,omitempty"`
	InvoiceType *ModulesPurchaseOrderInvoiceType `json:"InvoiceType,omitempty"`
	InvoiceTotalAmount *float32 `json:"InvoiceTotalAmount,omitempty"`
	InvoiceTotalCurrencyCode NullableString `json:"InvoiceTotalCurrencyCode,omitempty"`
	RemitToParty *MerchantVendorParty `json:"RemitToParty,omitempty"`
	ShipToPartyId NullableInt32 `json:"ShipToPartyId,omitempty"`
	BillToPartyId NullableInt32 `json:"BillToPartyId,omitempty"`
	AdditionalDetails []PurchaseOrderInvoiceAdditionalDetails `json:"AdditionalDetails,omitempty"`
	Lines []MerchantPurchaseOrderInvoiceLine `json:"Lines,omitempty"`
}

// NewMerchantPurchaseOrderInvoice instantiates a new MerchantPurchaseOrderInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantPurchaseOrderInvoice() *MerchantPurchaseOrderInvoice {
	this := MerchantPurchaseOrderInvoice{}
	return &this
}

// NewMerchantPurchaseOrderInvoiceWithDefaults instantiates a new MerchantPurchaseOrderInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantPurchaseOrderInvoiceWithDefaults() *MerchantPurchaseOrderInvoice {
	this := MerchantPurchaseOrderInvoice{}
	return &this
}

// GetInvoiceNo returns the InvoiceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetInvoiceNo() string {
	if o == nil || IsNil(o.InvoiceNo.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceNo.Get()
}

// GetInvoiceNoOk returns a tuple with the InvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetInvoiceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceNo.Get(), o.InvoiceNo.IsSet()
}

// HasInvoiceNo returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasInvoiceNo() bool {
	if o != nil && o.InvoiceNo.IsSet() {
		return true
	}

	return false
}

// SetInvoiceNo gets a reference to the given NullableString and assigns it to the InvoiceNo field.
func (o *MerchantPurchaseOrderInvoice) SetInvoiceNo(v string) {
	o.InvoiceNo.Set(&v)
}
// SetInvoiceNoNil sets the value for InvoiceNo to be an explicit nil
func (o *MerchantPurchaseOrderInvoice) SetInvoiceNoNil() {
	o.InvoiceNo.Set(nil)
}

// UnsetInvoiceNo ensures that no value is present for InvoiceNo, not even an explicit nil
func (o *MerchantPurchaseOrderInvoice) UnsetInvoiceNo() {
	o.InvoiceNo.Unset()
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoice) GetInvoiceType() ModulesPurchaseOrderInvoiceType {
	if o == nil || IsNil(o.InvoiceType) {
		var ret ModulesPurchaseOrderInvoiceType
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoice) GetInvoiceTypeOk() (*ModulesPurchaseOrderInvoiceType, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given ModulesPurchaseOrderInvoiceType and assigns it to the InvoiceType field.
func (o *MerchantPurchaseOrderInvoice) SetInvoiceType(v ModulesPurchaseOrderInvoiceType) {
	o.InvoiceType = &v
}

// GetInvoiceTotalAmount returns the InvoiceTotalAmount field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoice) GetInvoiceTotalAmount() float32 {
	if o == nil || IsNil(o.InvoiceTotalAmount) {
		var ret float32
		return ret
	}
	return *o.InvoiceTotalAmount
}

// GetInvoiceTotalAmountOk returns a tuple with the InvoiceTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoice) GetInvoiceTotalAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoiceTotalAmount) {
		return nil, false
	}
	return o.InvoiceTotalAmount, true
}

// HasInvoiceTotalAmount returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasInvoiceTotalAmount() bool {
	if o != nil && !IsNil(o.InvoiceTotalAmount) {
		return true
	}

	return false
}

// SetInvoiceTotalAmount gets a reference to the given float32 and assigns it to the InvoiceTotalAmount field.
func (o *MerchantPurchaseOrderInvoice) SetInvoiceTotalAmount(v float32) {
	o.InvoiceTotalAmount = &v
}

// GetInvoiceTotalCurrencyCode returns the InvoiceTotalCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetInvoiceTotalCurrencyCode() string {
	if o == nil || IsNil(o.InvoiceTotalCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceTotalCurrencyCode.Get()
}

// GetInvoiceTotalCurrencyCodeOk returns a tuple with the InvoiceTotalCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetInvoiceTotalCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceTotalCurrencyCode.Get(), o.InvoiceTotalCurrencyCode.IsSet()
}

// HasInvoiceTotalCurrencyCode returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasInvoiceTotalCurrencyCode() bool {
	if o != nil && o.InvoiceTotalCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetInvoiceTotalCurrencyCode gets a reference to the given NullableString and assigns it to the InvoiceTotalCurrencyCode field.
func (o *MerchantPurchaseOrderInvoice) SetInvoiceTotalCurrencyCode(v string) {
	o.InvoiceTotalCurrencyCode.Set(&v)
}
// SetInvoiceTotalCurrencyCodeNil sets the value for InvoiceTotalCurrencyCode to be an explicit nil
func (o *MerchantPurchaseOrderInvoice) SetInvoiceTotalCurrencyCodeNil() {
	o.InvoiceTotalCurrencyCode.Set(nil)
}

// UnsetInvoiceTotalCurrencyCode ensures that no value is present for InvoiceTotalCurrencyCode, not even an explicit nil
func (o *MerchantPurchaseOrderInvoice) UnsetInvoiceTotalCurrencyCode() {
	o.InvoiceTotalCurrencyCode.Unset()
}

// GetRemitToParty returns the RemitToParty field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoice) GetRemitToParty() MerchantVendorParty {
	if o == nil || IsNil(o.RemitToParty) {
		var ret MerchantVendorParty
		return ret
	}
	return *o.RemitToParty
}

// GetRemitToPartyOk returns a tuple with the RemitToParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoice) GetRemitToPartyOk() (*MerchantVendorParty, bool) {
	if o == nil || IsNil(o.RemitToParty) {
		return nil, false
	}
	return o.RemitToParty, true
}

// HasRemitToParty returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasRemitToParty() bool {
	if o != nil && !IsNil(o.RemitToParty) {
		return true
	}

	return false
}

// SetRemitToParty gets a reference to the given MerchantVendorParty and assigns it to the RemitToParty field.
func (o *MerchantPurchaseOrderInvoice) SetRemitToParty(v MerchantVendorParty) {
	o.RemitToParty = &v
}

// GetShipToPartyId returns the ShipToPartyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetShipToPartyId() int32 {
	if o == nil || IsNil(o.ShipToPartyId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShipToPartyId.Get()
}

// GetShipToPartyIdOk returns a tuple with the ShipToPartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetShipToPartyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipToPartyId.Get(), o.ShipToPartyId.IsSet()
}

// HasShipToPartyId returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasShipToPartyId() bool {
	if o != nil && o.ShipToPartyId.IsSet() {
		return true
	}

	return false
}

// SetShipToPartyId gets a reference to the given NullableInt32 and assigns it to the ShipToPartyId field.
func (o *MerchantPurchaseOrderInvoice) SetShipToPartyId(v int32) {
	o.ShipToPartyId.Set(&v)
}
// SetShipToPartyIdNil sets the value for ShipToPartyId to be an explicit nil
func (o *MerchantPurchaseOrderInvoice) SetShipToPartyIdNil() {
	o.ShipToPartyId.Set(nil)
}

// UnsetShipToPartyId ensures that no value is present for ShipToPartyId, not even an explicit nil
func (o *MerchantPurchaseOrderInvoice) UnsetShipToPartyId() {
	o.ShipToPartyId.Unset()
}

// GetBillToPartyId returns the BillToPartyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetBillToPartyId() int32 {
	if o == nil || IsNil(o.BillToPartyId.Get()) {
		var ret int32
		return ret
	}
	return *o.BillToPartyId.Get()
}

// GetBillToPartyIdOk returns a tuple with the BillToPartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetBillToPartyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillToPartyId.Get(), o.BillToPartyId.IsSet()
}

// HasBillToPartyId returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasBillToPartyId() bool {
	if o != nil && o.BillToPartyId.IsSet() {
		return true
	}

	return false
}

// SetBillToPartyId gets a reference to the given NullableInt32 and assigns it to the BillToPartyId field.
func (o *MerchantPurchaseOrderInvoice) SetBillToPartyId(v int32) {
	o.BillToPartyId.Set(&v)
}
// SetBillToPartyIdNil sets the value for BillToPartyId to be an explicit nil
func (o *MerchantPurchaseOrderInvoice) SetBillToPartyIdNil() {
	o.BillToPartyId.Set(nil)
}

// UnsetBillToPartyId ensures that no value is present for BillToPartyId, not even an explicit nil
func (o *MerchantPurchaseOrderInvoice) UnsetBillToPartyId() {
	o.BillToPartyId.Unset()
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetAdditionalDetails() []PurchaseOrderInvoiceAdditionalDetails {
	if o == nil {
		var ret []PurchaseOrderInvoiceAdditionalDetails
		return ret
	}
	return o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetAdditionalDetailsOk() ([]PurchaseOrderInvoiceAdditionalDetails, bool) {
	if o == nil || IsNil(o.AdditionalDetails) {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasAdditionalDetails() bool {
	if o != nil && !IsNil(o.AdditionalDetails) {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given []PurchaseOrderInvoiceAdditionalDetails and assigns it to the AdditionalDetails field.
func (o *MerchantPurchaseOrderInvoice) SetAdditionalDetails(v []PurchaseOrderInvoiceAdditionalDetails) {
	o.AdditionalDetails = v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoice) GetLines() []MerchantPurchaseOrderInvoiceLine {
	if o == nil {
		var ret []MerchantPurchaseOrderInvoiceLine
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoice) GetLinesOk() ([]MerchantPurchaseOrderInvoiceLine, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoice) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []MerchantPurchaseOrderInvoiceLine and assigns it to the Lines field.
func (o *MerchantPurchaseOrderInvoice) SetLines(v []MerchantPurchaseOrderInvoiceLine) {
	o.Lines = v
}

func (o MerchantPurchaseOrderInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantPurchaseOrderInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InvoiceNo.IsSet() {
		toSerialize["InvoiceNo"] = o.InvoiceNo.Get()
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["InvoiceType"] = o.InvoiceType
	}
	if !IsNil(o.InvoiceTotalAmount) {
		toSerialize["InvoiceTotalAmount"] = o.InvoiceTotalAmount
	}
	if o.InvoiceTotalCurrencyCode.IsSet() {
		toSerialize["InvoiceTotalCurrencyCode"] = o.InvoiceTotalCurrencyCode.Get()
	}
	if !IsNil(o.RemitToParty) {
		toSerialize["RemitToParty"] = o.RemitToParty
	}
	if o.ShipToPartyId.IsSet() {
		toSerialize["ShipToPartyId"] = o.ShipToPartyId.Get()
	}
	if o.BillToPartyId.IsSet() {
		toSerialize["BillToPartyId"] = o.BillToPartyId.Get()
	}
	if o.AdditionalDetails != nil {
		toSerialize["AdditionalDetails"] = o.AdditionalDetails
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	return toSerialize, nil
}

type NullableMerchantPurchaseOrderInvoice struct {
	value *MerchantPurchaseOrderInvoice
	isSet bool
}

func (v NullableMerchantPurchaseOrderInvoice) Get() *MerchantPurchaseOrderInvoice {
	return v.value
}

func (v *NullableMerchantPurchaseOrderInvoice) Set(val *MerchantPurchaseOrderInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantPurchaseOrderInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantPurchaseOrderInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantPurchaseOrderInvoice(val *MerchantPurchaseOrderInvoice) *NullableMerchantPurchaseOrderInvoice {
	return &NullableMerchantPurchaseOrderInvoice{value: val, isSet: true}
}

func (v NullableMerchantPurchaseOrderInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantPurchaseOrderInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


