/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the RenameProductAttributeGroupRequests type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenameProductAttributeGroupRequests{}

// RenameProductAttributeGroupRequests struct for RenameProductAttributeGroupRequests
type RenameProductAttributeGroupRequests struct {
	OldName NullableString `json:"OldName,omitempty"`
	NewName NullableString `json:"NewName,omitempty"`
}

// NewRenameProductAttributeGroupRequests instantiates a new RenameProductAttributeGroupRequests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenameProductAttributeGroupRequests() *RenameProductAttributeGroupRequests {
	this := RenameProductAttributeGroupRequests{}
	return &this
}

// NewRenameProductAttributeGroupRequestsWithDefaults instantiates a new RenameProductAttributeGroupRequests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenameProductAttributeGroupRequestsWithDefaults() *RenameProductAttributeGroupRequests {
	this := RenameProductAttributeGroupRequests{}
	return &this
}

// GetOldName returns the OldName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenameProductAttributeGroupRequests) GetOldName() string {
	if o == nil || IsNil(o.OldName.Get()) {
		var ret string
		return ret
	}
	return *o.OldName.Get()
}

// GetOldNameOk returns a tuple with the OldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenameProductAttributeGroupRequests) GetOldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldName.Get(), o.OldName.IsSet()
}

// HasOldName returns a boolean if a field has been set.
func (o *RenameProductAttributeGroupRequests) HasOldName() bool {
	if o != nil && o.OldName.IsSet() {
		return true
	}

	return false
}

// SetOldName gets a reference to the given NullableString and assigns it to the OldName field.
func (o *RenameProductAttributeGroupRequests) SetOldName(v string) {
	o.OldName.Set(&v)
}
// SetOldNameNil sets the value for OldName to be an explicit nil
func (o *RenameProductAttributeGroupRequests) SetOldNameNil() {
	o.OldName.Set(nil)
}

// UnsetOldName ensures that no value is present for OldName, not even an explicit nil
func (o *RenameProductAttributeGroupRequests) UnsetOldName() {
	o.OldName.Unset()
}

// GetNewName returns the NewName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RenameProductAttributeGroupRequests) GetNewName() string {
	if o == nil || IsNil(o.NewName.Get()) {
		var ret string
		return ret
	}
	return *o.NewName.Get()
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RenameProductAttributeGroupRequests) GetNewNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewName.Get(), o.NewName.IsSet()
}

// HasNewName returns a boolean if a field has been set.
func (o *RenameProductAttributeGroupRequests) HasNewName() bool {
	if o != nil && o.NewName.IsSet() {
		return true
	}

	return false
}

// SetNewName gets a reference to the given NullableString and assigns it to the NewName field.
func (o *RenameProductAttributeGroupRequests) SetNewName(v string) {
	o.NewName.Set(&v)
}
// SetNewNameNil sets the value for NewName to be an explicit nil
func (o *RenameProductAttributeGroupRequests) SetNewNameNil() {
	o.NewName.Set(nil)
}

// UnsetNewName ensures that no value is present for NewName, not even an explicit nil
func (o *RenameProductAttributeGroupRequests) UnsetNewName() {
	o.NewName.Unset()
}

func (o RenameProductAttributeGroupRequests) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenameProductAttributeGroupRequests) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OldName.IsSet() {
		toSerialize["OldName"] = o.OldName.Get()
	}
	if o.NewName.IsSet() {
		toSerialize["NewName"] = o.NewName.Get()
	}
	return toSerialize, nil
}

type NullableRenameProductAttributeGroupRequests struct {
	value *RenameProductAttributeGroupRequests
	isSet bool
}

func (v NullableRenameProductAttributeGroupRequests) Get() *RenameProductAttributeGroupRequests {
	return v.value
}

func (v *NullableRenameProductAttributeGroupRequests) Set(val *RenameProductAttributeGroupRequests) {
	v.value = val
	v.isSet = true
}

func (v NullableRenameProductAttributeGroupRequests) IsSet() bool {
	return v.isSet
}

func (v *NullableRenameProductAttributeGroupRequests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenameProductAttributeGroupRequests(val *RenameProductAttributeGroupRequests) *NullableRenameProductAttributeGroupRequests {
	return &NullableRenameProductAttributeGroupRequests{value: val, isSet: true}
}

func (v NullableRenameProductAttributeGroupRequests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenameProductAttributeGroupRequests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


