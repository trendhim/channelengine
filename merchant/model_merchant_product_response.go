/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantProductResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantProductResponse{}

// MerchantProductResponse struct for MerchantProductResponse
type MerchantProductResponse struct {
	// Is the product active for the Merchant?.
	IsActive *bool `json:"IsActive,omitempty"`
	ExtraData []MerchantProductExtraDataItemResponse `json:"ExtraData,omitempty"`
	// A unique identifier of the parent product. (parent sku).
	ParentMerchantProductNo NullableString `json:"ParentMerchantProductNo,omitempty"`
	// A unique identifier of the grandparent product. (grandparent sku).
	ParentMerchantProductNo2 NullableString `json:"ParentMerchantProductNo2,omitempty"`
	// The name of the product.
	Name NullableString `json:"Name,omitempty"`
	// A description of the product. Can contain these HTML tags:  div, span, pre, p, br, hr, hgroup, h1, h2, h3, h4, h5, h6, ul, ol, li, dl, dt, dd, strong, em, b, i, u, img, a, abbr, address, blockquote, area, audio, video, caption, table, tbody, td, tfoot, th, thead, tr.
	Description NullableString `json:"Description,omitempty"`
	// The brand of the product.
	Brand NullableString `json:"Brand,omitempty"`
	// Optional. The size of the product (variant). E.g. fashion size (S-XL, 46-56, etc), width of the watch, etc..
	Size NullableString `json:"Size,omitempty"`
	// Optional. The color of the product (variant).
	Color NullableString `json:"Color,omitempty"`
	// The EAN of GTIN of the product.
	Ean NullableString `json:"Ean,omitempty"`
	// The unique product reference used by the manufacturer/vendor of the product.
	ManufacturerProductNumber NullableString `json:"ManufacturerProductNumber,omitempty"`
	// A unique identifier of the product. (sku).
	MerchantProductNo string `json:"MerchantProductNo"`
	// The number of items in stock.
	// Deprecated
	Stock *int32 `json:"Stock,omitempty"`
	// Price, including VAT.
	Price *float32 `json:"Price,omitempty"`
	// Min price, including VAT.
	MinPrice NullableFloat32 `json:"MinPrice,omitempty"`
	// Max price, including VAT.
	MaxPrice NullableFloat32 `json:"MaxPrice,omitempty"`
	// Manufacturer's suggested retail price.
	MSRP NullableFloat32 `json:"MSRP,omitempty"`
	// Optional. The purchase price of the product. Useful for repricing.
	PurchasePrice NullableFloat32 `json:"PurchasePrice,omitempty"`
	VatRateType *VatRateType `json:"VatRateType,omitempty"`
	// Shipping cost of the product.
	ShippingCost NullableFloat32 `json:"ShippingCost,omitempty"`
	// A textual representation of the shippingtime.  For example, in Dutch: 'Op werkdagen voor 22:00 uur besteld, morgen in huis'.
	ShippingTime NullableString `json:"ShippingTime,omitempty"`
	// A URL pointing to the merchant's webpage  which displays this product.
	Url NullableString `json:"Url,omitempty"`
	// A URL at which an image of this product  can be found.
	ImageUrl NullableString `json:"ImageUrl,omitempty"`
	// Url to an additional image of product (1).
	ExtraImageUrl1 NullableString `json:"ExtraImageUrl1,omitempty"`
	// Url to an additional image of product (2).
	ExtraImageUrl2 NullableString `json:"ExtraImageUrl2,omitempty"`
	// Url to an additional image of product (3).
	ExtraImageUrl3 NullableString `json:"ExtraImageUrl3,omitempty"`
	// Url to an additional image of product (4).
	ExtraImageUrl4 NullableString `json:"ExtraImageUrl4,omitempty"`
	// Url to an additional image of product (5).
	ExtraImageUrl5 NullableString `json:"ExtraImageUrl5,omitempty"`
	// Url to an additional image of product (6).
	ExtraImageUrl6 NullableString `json:"ExtraImageUrl6,omitempty"`
	// Url to an additional image of product (7).
	ExtraImageUrl7 NullableString `json:"ExtraImageUrl7,omitempty"`
	// Url to an additional image of product (8).
	ExtraImageUrl8 NullableString `json:"ExtraImageUrl8,omitempty"`
	// Url to an additional image of product (9).
	ExtraImageUrl9 NullableString `json:"ExtraImageUrl9,omitempty"`
	// Specifies whether Product is disabled on all channels.
	IsFrozen *bool `json:"IsFrozen,omitempty"`
	// The category to which this product belongs.  Please supply this field in the following format:  'maincategory > category > subcategory'  For example:  'vehicles > bikes > mountainbike'.
	CategoryTrail NullableString `json:"CategoryTrail,omitempty"`
}

type _MerchantProductResponse MerchantProductResponse

// NewMerchantProductResponse instantiates a new MerchantProductResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantProductResponse(merchantProductNo string) *MerchantProductResponse {
	this := MerchantProductResponse{}
	this.MerchantProductNo = merchantProductNo
	return &this
}

// NewMerchantProductResponseWithDefaults instantiates a new MerchantProductResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantProductResponseWithDefaults() *MerchantProductResponse {
	this := MerchantProductResponse{}
	return &this
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *MerchantProductResponse) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantProductResponse) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *MerchantProductResponse) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraData() []MerchantProductExtraDataItemResponse {
	if o == nil {
		var ret []MerchantProductExtraDataItemResponse
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraDataOk() ([]MerchantProductExtraDataItemResponse, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given []MerchantProductExtraDataItemResponse and assigns it to the ExtraData field.
func (o *MerchantProductResponse) SetExtraData(v []MerchantProductExtraDataItemResponse) {
	o.ExtraData = v
}

// GetParentMerchantProductNo returns the ParentMerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetParentMerchantProductNo() string {
	if o == nil || IsNil(o.ParentMerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.ParentMerchantProductNo.Get()
}

// GetParentMerchantProductNoOk returns a tuple with the ParentMerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetParentMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentMerchantProductNo.Get(), o.ParentMerchantProductNo.IsSet()
}

// HasParentMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasParentMerchantProductNo() bool {
	if o != nil && o.ParentMerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetParentMerchantProductNo gets a reference to the given NullableString and assigns it to the ParentMerchantProductNo field.
func (o *MerchantProductResponse) SetParentMerchantProductNo(v string) {
	o.ParentMerchantProductNo.Set(&v)
}
// SetParentMerchantProductNoNil sets the value for ParentMerchantProductNo to be an explicit nil
func (o *MerchantProductResponse) SetParentMerchantProductNoNil() {
	o.ParentMerchantProductNo.Set(nil)
}

// UnsetParentMerchantProductNo ensures that no value is present for ParentMerchantProductNo, not even an explicit nil
func (o *MerchantProductResponse) UnsetParentMerchantProductNo() {
	o.ParentMerchantProductNo.Unset()
}

// GetParentMerchantProductNo2 returns the ParentMerchantProductNo2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetParentMerchantProductNo2() string {
	if o == nil || IsNil(o.ParentMerchantProductNo2.Get()) {
		var ret string
		return ret
	}
	return *o.ParentMerchantProductNo2.Get()
}

// GetParentMerchantProductNo2Ok returns a tuple with the ParentMerchantProductNo2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetParentMerchantProductNo2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentMerchantProductNo2.Get(), o.ParentMerchantProductNo2.IsSet()
}

// HasParentMerchantProductNo2 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasParentMerchantProductNo2() bool {
	if o != nil && o.ParentMerchantProductNo2.IsSet() {
		return true
	}

	return false
}

// SetParentMerchantProductNo2 gets a reference to the given NullableString and assigns it to the ParentMerchantProductNo2 field.
func (o *MerchantProductResponse) SetParentMerchantProductNo2(v string) {
	o.ParentMerchantProductNo2.Set(&v)
}
// SetParentMerchantProductNo2Nil sets the value for ParentMerchantProductNo2 to be an explicit nil
func (o *MerchantProductResponse) SetParentMerchantProductNo2Nil() {
	o.ParentMerchantProductNo2.Set(nil)
}

// UnsetParentMerchantProductNo2 ensures that no value is present for ParentMerchantProductNo2, not even an explicit nil
func (o *MerchantProductResponse) UnsetParentMerchantProductNo2() {
	o.ParentMerchantProductNo2.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MerchantProductResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MerchantProductResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MerchantProductResponse) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MerchantProductResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MerchantProductResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MerchantProductResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetBrand returns the Brand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetBrand() string {
	if o == nil || IsNil(o.Brand.Get()) {
		var ret string
		return ret
	}
	return *o.Brand.Get()
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Brand.Get(), o.Brand.IsSet()
}

// HasBrand returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasBrand() bool {
	if o != nil && o.Brand.IsSet() {
		return true
	}

	return false
}

// SetBrand gets a reference to the given NullableString and assigns it to the Brand field.
func (o *MerchantProductResponse) SetBrand(v string) {
	o.Brand.Set(&v)
}
// SetBrandNil sets the value for Brand to be an explicit nil
func (o *MerchantProductResponse) SetBrandNil() {
	o.Brand.Set(nil)
}

// UnsetBrand ensures that no value is present for Brand, not even an explicit nil
func (o *MerchantProductResponse) UnsetBrand() {
	o.Brand.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetSize() string {
	if o == nil || IsNil(o.Size.Get()) {
		var ret string
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableString and assigns it to the Size field.
func (o *MerchantProductResponse) SetSize(v string) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *MerchantProductResponse) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *MerchantProductResponse) UnsetSize() {
	o.Size.Unset()
}

// GetColor returns the Color field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetColor() string {
	if o == nil || IsNil(o.Color.Get()) {
		var ret string
		return ret
	}
	return *o.Color.Get()
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Color.Get(), o.Color.IsSet()
}

// HasColor returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasColor() bool {
	if o != nil && o.Color.IsSet() {
		return true
	}

	return false
}

// SetColor gets a reference to the given NullableString and assigns it to the Color field.
func (o *MerchantProductResponse) SetColor(v string) {
	o.Color.Set(&v)
}
// SetColorNil sets the value for Color to be an explicit nil
func (o *MerchantProductResponse) SetColorNil() {
	o.Color.Set(nil)
}

// UnsetColor ensures that no value is present for Color, not even an explicit nil
func (o *MerchantProductResponse) UnsetColor() {
	o.Color.Unset()
}

// GetEan returns the Ean field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetEan() string {
	if o == nil || IsNil(o.Ean.Get()) {
		var ret string
		return ret
	}
	return *o.Ean.Get()
}

// GetEanOk returns a tuple with the Ean field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetEanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ean.Get(), o.Ean.IsSet()
}

// HasEan returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasEan() bool {
	if o != nil && o.Ean.IsSet() {
		return true
	}

	return false
}

// SetEan gets a reference to the given NullableString and assigns it to the Ean field.
func (o *MerchantProductResponse) SetEan(v string) {
	o.Ean.Set(&v)
}
// SetEanNil sets the value for Ean to be an explicit nil
func (o *MerchantProductResponse) SetEanNil() {
	o.Ean.Set(nil)
}

// UnsetEan ensures that no value is present for Ean, not even an explicit nil
func (o *MerchantProductResponse) UnsetEan() {
	o.Ean.Unset()
}

// GetManufacturerProductNumber returns the ManufacturerProductNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetManufacturerProductNumber() string {
	if o == nil || IsNil(o.ManufacturerProductNumber.Get()) {
		var ret string
		return ret
	}
	return *o.ManufacturerProductNumber.Get()
}

// GetManufacturerProductNumberOk returns a tuple with the ManufacturerProductNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetManufacturerProductNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ManufacturerProductNumber.Get(), o.ManufacturerProductNumber.IsSet()
}

// HasManufacturerProductNumber returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasManufacturerProductNumber() bool {
	if o != nil && o.ManufacturerProductNumber.IsSet() {
		return true
	}

	return false
}

// SetManufacturerProductNumber gets a reference to the given NullableString and assigns it to the ManufacturerProductNumber field.
func (o *MerchantProductResponse) SetManufacturerProductNumber(v string) {
	o.ManufacturerProductNumber.Set(&v)
}
// SetManufacturerProductNumberNil sets the value for ManufacturerProductNumber to be an explicit nil
func (o *MerchantProductResponse) SetManufacturerProductNumberNil() {
	o.ManufacturerProductNumber.Set(nil)
}

// UnsetManufacturerProductNumber ensures that no value is present for ManufacturerProductNumber, not even an explicit nil
func (o *MerchantProductResponse) UnsetManufacturerProductNumber() {
	o.ManufacturerProductNumber.Unset()
}

// GetMerchantProductNo returns the MerchantProductNo field value
func (o *MerchantProductResponse) GetMerchantProductNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantProductNo
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value
// and a boolean to check if the value has been set.
func (o *MerchantProductResponse) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantProductNo, true
}

// SetMerchantProductNo sets field value
func (o *MerchantProductResponse) SetMerchantProductNo(v string) {
	o.MerchantProductNo = v
}

// GetStock returns the Stock field value if set, zero value otherwise.
// Deprecated
func (o *MerchantProductResponse) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *MerchantProductResponse) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
// Deprecated
func (o *MerchantProductResponse) SetStock(v int32) {
	o.Stock = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *MerchantProductResponse) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantProductResponse) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *MerchantProductResponse) SetPrice(v float32) {
	o.Price = &v
}

// GetMinPrice returns the MinPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetMinPrice() float32 {
	if o == nil || IsNil(o.MinPrice.Get()) {
		var ret float32
		return ret
	}
	return *o.MinPrice.Get()
}

// GetMinPriceOk returns a tuple with the MinPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetMinPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinPrice.Get(), o.MinPrice.IsSet()
}

// HasMinPrice returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasMinPrice() bool {
	if o != nil && o.MinPrice.IsSet() {
		return true
	}

	return false
}

// SetMinPrice gets a reference to the given NullableFloat32 and assigns it to the MinPrice field.
func (o *MerchantProductResponse) SetMinPrice(v float32) {
	o.MinPrice.Set(&v)
}
// SetMinPriceNil sets the value for MinPrice to be an explicit nil
func (o *MerchantProductResponse) SetMinPriceNil() {
	o.MinPrice.Set(nil)
}

// UnsetMinPrice ensures that no value is present for MinPrice, not even an explicit nil
func (o *MerchantProductResponse) UnsetMinPrice() {
	o.MinPrice.Unset()
}

// GetMaxPrice returns the MaxPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetMaxPrice() float32 {
	if o == nil || IsNil(o.MaxPrice.Get()) {
		var ret float32
		return ret
	}
	return *o.MaxPrice.Get()
}

// GetMaxPriceOk returns a tuple with the MaxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetMaxPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxPrice.Get(), o.MaxPrice.IsSet()
}

// HasMaxPrice returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasMaxPrice() bool {
	if o != nil && o.MaxPrice.IsSet() {
		return true
	}

	return false
}

// SetMaxPrice gets a reference to the given NullableFloat32 and assigns it to the MaxPrice field.
func (o *MerchantProductResponse) SetMaxPrice(v float32) {
	o.MaxPrice.Set(&v)
}
// SetMaxPriceNil sets the value for MaxPrice to be an explicit nil
func (o *MerchantProductResponse) SetMaxPriceNil() {
	o.MaxPrice.Set(nil)
}

// UnsetMaxPrice ensures that no value is present for MaxPrice, not even an explicit nil
func (o *MerchantProductResponse) UnsetMaxPrice() {
	o.MaxPrice.Unset()
}

// GetMSRP returns the MSRP field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetMSRP() float32 {
	if o == nil || IsNil(o.MSRP.Get()) {
		var ret float32
		return ret
	}
	return *o.MSRP.Get()
}

// GetMSRPOk returns a tuple with the MSRP field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetMSRPOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MSRP.Get(), o.MSRP.IsSet()
}

// HasMSRP returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasMSRP() bool {
	if o != nil && o.MSRP.IsSet() {
		return true
	}

	return false
}

// SetMSRP gets a reference to the given NullableFloat32 and assigns it to the MSRP field.
func (o *MerchantProductResponse) SetMSRP(v float32) {
	o.MSRP.Set(&v)
}
// SetMSRPNil sets the value for MSRP to be an explicit nil
func (o *MerchantProductResponse) SetMSRPNil() {
	o.MSRP.Set(nil)
}

// UnsetMSRP ensures that no value is present for MSRP, not even an explicit nil
func (o *MerchantProductResponse) UnsetMSRP() {
	o.MSRP.Unset()
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetPurchasePrice() float32 {
	if o == nil || IsNil(o.PurchasePrice.Get()) {
		var ret float32
		return ret
	}
	return *o.PurchasePrice.Get()
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetPurchasePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchasePrice.Get(), o.PurchasePrice.IsSet()
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice.IsSet() {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given NullableFloat32 and assigns it to the PurchasePrice field.
func (o *MerchantProductResponse) SetPurchasePrice(v float32) {
	o.PurchasePrice.Set(&v)
}
// SetPurchasePriceNil sets the value for PurchasePrice to be an explicit nil
func (o *MerchantProductResponse) SetPurchasePriceNil() {
	o.PurchasePrice.Set(nil)
}

// UnsetPurchasePrice ensures that no value is present for PurchasePrice, not even an explicit nil
func (o *MerchantProductResponse) UnsetPurchasePrice() {
	o.PurchasePrice.Unset()
}

// GetVatRateType returns the VatRateType field value if set, zero value otherwise.
func (o *MerchantProductResponse) GetVatRateType() VatRateType {
	if o == nil || IsNil(o.VatRateType) {
		var ret VatRateType
		return ret
	}
	return *o.VatRateType
}

// GetVatRateTypeOk returns a tuple with the VatRateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantProductResponse) GetVatRateTypeOk() (*VatRateType, bool) {
	if o == nil || IsNil(o.VatRateType) {
		return nil, false
	}
	return o.VatRateType, true
}

// HasVatRateType returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasVatRateType() bool {
	if o != nil && !IsNil(o.VatRateType) {
		return true
	}

	return false
}

// SetVatRateType gets a reference to the given VatRateType and assigns it to the VatRateType field.
func (o *MerchantProductResponse) SetVatRateType(v VatRateType) {
	o.VatRateType = &v
}

// GetShippingCost returns the ShippingCost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetShippingCost() float32 {
	if o == nil || IsNil(o.ShippingCost.Get()) {
		var ret float32
		return ret
	}
	return *o.ShippingCost.Get()
}

// GetShippingCostOk returns a tuple with the ShippingCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetShippingCostOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingCost.Get(), o.ShippingCost.IsSet()
}

// HasShippingCost returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasShippingCost() bool {
	if o != nil && o.ShippingCost.IsSet() {
		return true
	}

	return false
}

// SetShippingCost gets a reference to the given NullableFloat32 and assigns it to the ShippingCost field.
func (o *MerchantProductResponse) SetShippingCost(v float32) {
	o.ShippingCost.Set(&v)
}
// SetShippingCostNil sets the value for ShippingCost to be an explicit nil
func (o *MerchantProductResponse) SetShippingCostNil() {
	o.ShippingCost.Set(nil)
}

// UnsetShippingCost ensures that no value is present for ShippingCost, not even an explicit nil
func (o *MerchantProductResponse) UnsetShippingCost() {
	o.ShippingCost.Unset()
}

// GetShippingTime returns the ShippingTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetShippingTime() string {
	if o == nil || IsNil(o.ShippingTime.Get()) {
		var ret string
		return ret
	}
	return *o.ShippingTime.Get()
}

// GetShippingTimeOk returns a tuple with the ShippingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetShippingTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippingTime.Get(), o.ShippingTime.IsSet()
}

// HasShippingTime returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasShippingTime() bool {
	if o != nil && o.ShippingTime.IsSet() {
		return true
	}

	return false
}

// SetShippingTime gets a reference to the given NullableString and assigns it to the ShippingTime field.
func (o *MerchantProductResponse) SetShippingTime(v string) {
	o.ShippingTime.Set(&v)
}
// SetShippingTimeNil sets the value for ShippingTime to be an explicit nil
func (o *MerchantProductResponse) SetShippingTimeNil() {
	o.ShippingTime.Set(nil)
}

// UnsetShippingTime ensures that no value is present for ShippingTime, not even an explicit nil
func (o *MerchantProductResponse) UnsetShippingTime() {
	o.ShippingTime.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *MerchantProductResponse) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *MerchantProductResponse) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *MerchantProductResponse) UnsetUrl() {
	o.Url.Unset()
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageUrl.Get()
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageUrl.Get(), o.ImageUrl.IsSet()
}

// HasImageUrl returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasImageUrl() bool {
	if o != nil && o.ImageUrl.IsSet() {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given NullableString and assigns it to the ImageUrl field.
func (o *MerchantProductResponse) SetImageUrl(v string) {
	o.ImageUrl.Set(&v)
}
// SetImageUrlNil sets the value for ImageUrl to be an explicit nil
func (o *MerchantProductResponse) SetImageUrlNil() {
	o.ImageUrl.Set(nil)
}

// UnsetImageUrl ensures that no value is present for ImageUrl, not even an explicit nil
func (o *MerchantProductResponse) UnsetImageUrl() {
	o.ImageUrl.Unset()
}

// GetExtraImageUrl1 returns the ExtraImageUrl1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl1() string {
	if o == nil || IsNil(o.ExtraImageUrl1.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl1.Get()
}

// GetExtraImageUrl1Ok returns a tuple with the ExtraImageUrl1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl1.Get(), o.ExtraImageUrl1.IsSet()
}

// HasExtraImageUrl1 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl1() bool {
	if o != nil && o.ExtraImageUrl1.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl1 gets a reference to the given NullableString and assigns it to the ExtraImageUrl1 field.
func (o *MerchantProductResponse) SetExtraImageUrl1(v string) {
	o.ExtraImageUrl1.Set(&v)
}
// SetExtraImageUrl1Nil sets the value for ExtraImageUrl1 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl1Nil() {
	o.ExtraImageUrl1.Set(nil)
}

// UnsetExtraImageUrl1 ensures that no value is present for ExtraImageUrl1, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl1() {
	o.ExtraImageUrl1.Unset()
}

// GetExtraImageUrl2 returns the ExtraImageUrl2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl2() string {
	if o == nil || IsNil(o.ExtraImageUrl2.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl2.Get()
}

// GetExtraImageUrl2Ok returns a tuple with the ExtraImageUrl2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl2.Get(), o.ExtraImageUrl2.IsSet()
}

// HasExtraImageUrl2 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl2() bool {
	if o != nil && o.ExtraImageUrl2.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl2 gets a reference to the given NullableString and assigns it to the ExtraImageUrl2 field.
func (o *MerchantProductResponse) SetExtraImageUrl2(v string) {
	o.ExtraImageUrl2.Set(&v)
}
// SetExtraImageUrl2Nil sets the value for ExtraImageUrl2 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl2Nil() {
	o.ExtraImageUrl2.Set(nil)
}

// UnsetExtraImageUrl2 ensures that no value is present for ExtraImageUrl2, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl2() {
	o.ExtraImageUrl2.Unset()
}

// GetExtraImageUrl3 returns the ExtraImageUrl3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl3() string {
	if o == nil || IsNil(o.ExtraImageUrl3.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl3.Get()
}

// GetExtraImageUrl3Ok returns a tuple with the ExtraImageUrl3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl3.Get(), o.ExtraImageUrl3.IsSet()
}

// HasExtraImageUrl3 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl3() bool {
	if o != nil && o.ExtraImageUrl3.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl3 gets a reference to the given NullableString and assigns it to the ExtraImageUrl3 field.
func (o *MerchantProductResponse) SetExtraImageUrl3(v string) {
	o.ExtraImageUrl3.Set(&v)
}
// SetExtraImageUrl3Nil sets the value for ExtraImageUrl3 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl3Nil() {
	o.ExtraImageUrl3.Set(nil)
}

// UnsetExtraImageUrl3 ensures that no value is present for ExtraImageUrl3, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl3() {
	o.ExtraImageUrl3.Unset()
}

// GetExtraImageUrl4 returns the ExtraImageUrl4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl4() string {
	if o == nil || IsNil(o.ExtraImageUrl4.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl4.Get()
}

// GetExtraImageUrl4Ok returns a tuple with the ExtraImageUrl4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl4.Get(), o.ExtraImageUrl4.IsSet()
}

// HasExtraImageUrl4 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl4() bool {
	if o != nil && o.ExtraImageUrl4.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl4 gets a reference to the given NullableString and assigns it to the ExtraImageUrl4 field.
func (o *MerchantProductResponse) SetExtraImageUrl4(v string) {
	o.ExtraImageUrl4.Set(&v)
}
// SetExtraImageUrl4Nil sets the value for ExtraImageUrl4 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl4Nil() {
	o.ExtraImageUrl4.Set(nil)
}

// UnsetExtraImageUrl4 ensures that no value is present for ExtraImageUrl4, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl4() {
	o.ExtraImageUrl4.Unset()
}

// GetExtraImageUrl5 returns the ExtraImageUrl5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl5() string {
	if o == nil || IsNil(o.ExtraImageUrl5.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl5.Get()
}

// GetExtraImageUrl5Ok returns a tuple with the ExtraImageUrl5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl5.Get(), o.ExtraImageUrl5.IsSet()
}

// HasExtraImageUrl5 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl5() bool {
	if o != nil && o.ExtraImageUrl5.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl5 gets a reference to the given NullableString and assigns it to the ExtraImageUrl5 field.
func (o *MerchantProductResponse) SetExtraImageUrl5(v string) {
	o.ExtraImageUrl5.Set(&v)
}
// SetExtraImageUrl5Nil sets the value for ExtraImageUrl5 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl5Nil() {
	o.ExtraImageUrl5.Set(nil)
}

// UnsetExtraImageUrl5 ensures that no value is present for ExtraImageUrl5, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl5() {
	o.ExtraImageUrl5.Unset()
}

// GetExtraImageUrl6 returns the ExtraImageUrl6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl6() string {
	if o == nil || IsNil(o.ExtraImageUrl6.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl6.Get()
}

// GetExtraImageUrl6Ok returns a tuple with the ExtraImageUrl6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl6.Get(), o.ExtraImageUrl6.IsSet()
}

// HasExtraImageUrl6 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl6() bool {
	if o != nil && o.ExtraImageUrl6.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl6 gets a reference to the given NullableString and assigns it to the ExtraImageUrl6 field.
func (o *MerchantProductResponse) SetExtraImageUrl6(v string) {
	o.ExtraImageUrl6.Set(&v)
}
// SetExtraImageUrl6Nil sets the value for ExtraImageUrl6 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl6Nil() {
	o.ExtraImageUrl6.Set(nil)
}

// UnsetExtraImageUrl6 ensures that no value is present for ExtraImageUrl6, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl6() {
	o.ExtraImageUrl6.Unset()
}

// GetExtraImageUrl7 returns the ExtraImageUrl7 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl7() string {
	if o == nil || IsNil(o.ExtraImageUrl7.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl7.Get()
}

// GetExtraImageUrl7Ok returns a tuple with the ExtraImageUrl7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl7Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl7.Get(), o.ExtraImageUrl7.IsSet()
}

// HasExtraImageUrl7 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl7() bool {
	if o != nil && o.ExtraImageUrl7.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl7 gets a reference to the given NullableString and assigns it to the ExtraImageUrl7 field.
func (o *MerchantProductResponse) SetExtraImageUrl7(v string) {
	o.ExtraImageUrl7.Set(&v)
}
// SetExtraImageUrl7Nil sets the value for ExtraImageUrl7 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl7Nil() {
	o.ExtraImageUrl7.Set(nil)
}

// UnsetExtraImageUrl7 ensures that no value is present for ExtraImageUrl7, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl7() {
	o.ExtraImageUrl7.Unset()
}

// GetExtraImageUrl8 returns the ExtraImageUrl8 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl8() string {
	if o == nil || IsNil(o.ExtraImageUrl8.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl8.Get()
}

// GetExtraImageUrl8Ok returns a tuple with the ExtraImageUrl8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl8Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl8.Get(), o.ExtraImageUrl8.IsSet()
}

// HasExtraImageUrl8 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl8() bool {
	if o != nil && o.ExtraImageUrl8.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl8 gets a reference to the given NullableString and assigns it to the ExtraImageUrl8 field.
func (o *MerchantProductResponse) SetExtraImageUrl8(v string) {
	o.ExtraImageUrl8.Set(&v)
}
// SetExtraImageUrl8Nil sets the value for ExtraImageUrl8 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl8Nil() {
	o.ExtraImageUrl8.Set(nil)
}

// UnsetExtraImageUrl8 ensures that no value is present for ExtraImageUrl8, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl8() {
	o.ExtraImageUrl8.Unset()
}

// GetExtraImageUrl9 returns the ExtraImageUrl9 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetExtraImageUrl9() string {
	if o == nil || IsNil(o.ExtraImageUrl9.Get()) {
		var ret string
		return ret
	}
	return *o.ExtraImageUrl9.Get()
}

// GetExtraImageUrl9Ok returns a tuple with the ExtraImageUrl9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetExtraImageUrl9Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtraImageUrl9.Get(), o.ExtraImageUrl9.IsSet()
}

// HasExtraImageUrl9 returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasExtraImageUrl9() bool {
	if o != nil && o.ExtraImageUrl9.IsSet() {
		return true
	}

	return false
}

// SetExtraImageUrl9 gets a reference to the given NullableString and assigns it to the ExtraImageUrl9 field.
func (o *MerchantProductResponse) SetExtraImageUrl9(v string) {
	o.ExtraImageUrl9.Set(&v)
}
// SetExtraImageUrl9Nil sets the value for ExtraImageUrl9 to be an explicit nil
func (o *MerchantProductResponse) SetExtraImageUrl9Nil() {
	o.ExtraImageUrl9.Set(nil)
}

// UnsetExtraImageUrl9 ensures that no value is present for ExtraImageUrl9, not even an explicit nil
func (o *MerchantProductResponse) UnsetExtraImageUrl9() {
	o.ExtraImageUrl9.Unset()
}

// GetIsFrozen returns the IsFrozen field value if set, zero value otherwise.
func (o *MerchantProductResponse) GetIsFrozen() bool {
	if o == nil || IsNil(o.IsFrozen) {
		var ret bool
		return ret
	}
	return *o.IsFrozen
}

// GetIsFrozenOk returns a tuple with the IsFrozen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantProductResponse) GetIsFrozenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFrozen) {
		return nil, false
	}
	return o.IsFrozen, true
}

// HasIsFrozen returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasIsFrozen() bool {
	if o != nil && !IsNil(o.IsFrozen) {
		return true
	}

	return false
}

// SetIsFrozen gets a reference to the given bool and assigns it to the IsFrozen field.
func (o *MerchantProductResponse) SetIsFrozen(v bool) {
	o.IsFrozen = &v
}

// GetCategoryTrail returns the CategoryTrail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductResponse) GetCategoryTrail() string {
	if o == nil || IsNil(o.CategoryTrail.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryTrail.Get()
}

// GetCategoryTrailOk returns a tuple with the CategoryTrail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductResponse) GetCategoryTrailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryTrail.Get(), o.CategoryTrail.IsSet()
}

// HasCategoryTrail returns a boolean if a field has been set.
func (o *MerchantProductResponse) HasCategoryTrail() bool {
	if o != nil && o.CategoryTrail.IsSet() {
		return true
	}

	return false
}

// SetCategoryTrail gets a reference to the given NullableString and assigns it to the CategoryTrail field.
func (o *MerchantProductResponse) SetCategoryTrail(v string) {
	o.CategoryTrail.Set(&v)
}
// SetCategoryTrailNil sets the value for CategoryTrail to be an explicit nil
func (o *MerchantProductResponse) SetCategoryTrailNil() {
	o.CategoryTrail.Set(nil)
}

// UnsetCategoryTrail ensures that no value is present for CategoryTrail, not even an explicit nil
func (o *MerchantProductResponse) UnsetCategoryTrail() {
	o.CategoryTrail.Unset()
}

func (o MerchantProductResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantProductResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsActive) {
		toSerialize["IsActive"] = o.IsActive
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.ParentMerchantProductNo.IsSet() {
		toSerialize["ParentMerchantProductNo"] = o.ParentMerchantProductNo.Get()
	}
	if o.ParentMerchantProductNo2.IsSet() {
		toSerialize["ParentMerchantProductNo2"] = o.ParentMerchantProductNo2.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Brand.IsSet() {
		toSerialize["Brand"] = o.Brand.Get()
	}
	if o.Size.IsSet() {
		toSerialize["Size"] = o.Size.Get()
	}
	if o.Color.IsSet() {
		toSerialize["Color"] = o.Color.Get()
	}
	if o.Ean.IsSet() {
		toSerialize["Ean"] = o.Ean.Get()
	}
	if o.ManufacturerProductNumber.IsSet() {
		toSerialize["ManufacturerProductNumber"] = o.ManufacturerProductNumber.Get()
	}
	toSerialize["MerchantProductNo"] = o.MerchantProductNo
	if !IsNil(o.Stock) {
		toSerialize["Stock"] = o.Stock
	}
	if !IsNil(o.Price) {
		toSerialize["Price"] = o.Price
	}
	if o.MinPrice.IsSet() {
		toSerialize["MinPrice"] = o.MinPrice.Get()
	}
	if o.MaxPrice.IsSet() {
		toSerialize["MaxPrice"] = o.MaxPrice.Get()
	}
	if o.MSRP.IsSet() {
		toSerialize["MSRP"] = o.MSRP.Get()
	}
	if o.PurchasePrice.IsSet() {
		toSerialize["PurchasePrice"] = o.PurchasePrice.Get()
	}
	if !IsNil(o.VatRateType) {
		toSerialize["VatRateType"] = o.VatRateType
	}
	if o.ShippingCost.IsSet() {
		toSerialize["ShippingCost"] = o.ShippingCost.Get()
	}
	if o.ShippingTime.IsSet() {
		toSerialize["ShippingTime"] = o.ShippingTime.Get()
	}
	if o.Url.IsSet() {
		toSerialize["Url"] = o.Url.Get()
	}
	if o.ImageUrl.IsSet() {
		toSerialize["ImageUrl"] = o.ImageUrl.Get()
	}
	if o.ExtraImageUrl1.IsSet() {
		toSerialize["ExtraImageUrl1"] = o.ExtraImageUrl1.Get()
	}
	if o.ExtraImageUrl2.IsSet() {
		toSerialize["ExtraImageUrl2"] = o.ExtraImageUrl2.Get()
	}
	if o.ExtraImageUrl3.IsSet() {
		toSerialize["ExtraImageUrl3"] = o.ExtraImageUrl3.Get()
	}
	if o.ExtraImageUrl4.IsSet() {
		toSerialize["ExtraImageUrl4"] = o.ExtraImageUrl4.Get()
	}
	if o.ExtraImageUrl5.IsSet() {
		toSerialize["ExtraImageUrl5"] = o.ExtraImageUrl5.Get()
	}
	if o.ExtraImageUrl6.IsSet() {
		toSerialize["ExtraImageUrl6"] = o.ExtraImageUrl6.Get()
	}
	if o.ExtraImageUrl7.IsSet() {
		toSerialize["ExtraImageUrl7"] = o.ExtraImageUrl7.Get()
	}
	if o.ExtraImageUrl8.IsSet() {
		toSerialize["ExtraImageUrl8"] = o.ExtraImageUrl8.Get()
	}
	if o.ExtraImageUrl9.IsSet() {
		toSerialize["ExtraImageUrl9"] = o.ExtraImageUrl9.Get()
	}
	if !IsNil(o.IsFrozen) {
		toSerialize["IsFrozen"] = o.IsFrozen
	}
	if o.CategoryTrail.IsSet() {
		toSerialize["CategoryTrail"] = o.CategoryTrail.Get()
	}
	return toSerialize, nil
}

func (o *MerchantProductResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MerchantProductNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantProductResponse := _MerchantProductResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantProductResponse)

	if err != nil {
		return err
	}

	*o = MerchantProductResponse(varMerchantProductResponse)

	return err
}

type NullableMerchantProductResponse struct {
	value *MerchantProductResponse
	isSet bool
}

func (v NullableMerchantProductResponse) Get() *MerchantProductResponse {
	return v.value
}

func (v *NullableMerchantProductResponse) Set(val *MerchantProductResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantProductResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantProductResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantProductResponse(val *MerchantProductResponse) *NullableMerchantProductResponse {
	return &NullableMerchantProductResponse{value: val, isSet: true}
}

func (v NullableMerchantProductResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantProductResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


