/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the MerchantOrderLineResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantOrderLineResponse{}

// MerchantOrderLineResponse struct for MerchantOrderLineResponse
type MerchantOrderLineResponse struct {
	Status *OrderStatusView `json:"Status,omitempty"`
	// Is the order fulfilled by the marketplace (amazon: FBA, bol: LVB, etc.)?.
	IsFulfillmentByMarketplace *bool `json:"IsFulfillmentByMarketplace,omitempty"`
	// Either the GTIN (EAN, ISBN, UPC etc) provided by the channel, or the the GTIN belonging to the MerchantProductNo in ChannelEngine.
	Gtin NullableString `json:"Gtin,omitempty"`
	// The product description (or title) provided by the channel.
	Description NullableString `json:"Description,omitempty"`
	StockLocation *MerchantStockLocationResponse `json:"StockLocation,omitempty"`
	// The total amount of VAT charged over the value of a single unit of the ordered product  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	UnitVat NullableFloat32 `json:"UnitVat,omitempty"`
	// The total value of the order line (quantity * unit price) including VAT  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	LineTotalInclVat NullableFloat32 `json:"LineTotalInclVat,omitempty"`
	// The total amount of VAT charged over the total value of the order line (quantity * unit price)  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	LineVat NullableFloat32 `json:"LineVat,omitempty"`
	// The value of a single unit of the ordered product including VAT  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalUnitPriceInclVat NullableFloat32 `json:"OriginalUnitPriceInclVat,omitempty"`
	// The total amount of VAT charged over the value of a single unit of the ordered product  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalUnitVat NullableFloat32 `json:"OriginalUnitVat,omitempty"`
	// The total value of the order line (quantity * unit price) including VAT  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalLineTotalInclVat NullableFloat32 `json:"OriginalLineTotalInclVat,omitempty"`
	// The total amount of VAT charged over the total value of the order line (quantity * unit price)  (in the currency in which the order was paid for, see CurrencyCode).
	OriginalLineVat NullableFloat32 `json:"OriginalLineVat,omitempty"`
	// A percentage fee that is charged by the Channel for this orderline.  This fee rate is based on the currency of client  This field is optional, send 0 if not applicable.
	OriginalFeeFixed *float32 `json:"OriginalFeeFixed,omitempty"`
	// If the product is ordered part of a bundle, this field contains the MerchantProductNo of  the product bundle.
	BundleProductMerchantProductNo NullableString `json:"BundleProductMerchantProductNo,omitempty"`
	// State assigned code identifying the jurisdiction.
	JurisCode NullableString `json:"JurisCode,omitempty"`
	// Name of a tax jurisdiction.
	JurisName NullableString `json:"JurisName,omitempty"`
	// VAT rate of the orderline.
	VatRate *float32 `json:"VatRate,omitempty"`
	UnitPriceExclVat NullableFloat32 `json:"UnitPriceExclVat,omitempty"`
	LineTotalExclVat NullableFloat32 `json:"LineTotalExclVat,omitempty"`
	OriginalUnitPriceExclVat NullableFloat32 `json:"OriginalUnitPriceExclVat,omitempty"`
	OriginalLineTotalExclVat NullableFloat32 `json:"OriginalLineTotalExclVat,omitempty"`
	ExtraData []MerchantOrderLineExtraDataResponse `json:"ExtraData,omitempty"`
	// The unique product reference used by the channel.
	ChannelProductNo string `json:"ChannelProductNo"`
	// The unique product reference used by the merchant.
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	// The number of items of the product.
	Quantity int32 `json:"Quantity"`
	// The number of items for which cancellation was requested by the customer.  Some channels allow a customer to cancel an order until it has been shipped.  When an order has already been acknowledged in ChannelEngine, it can only be cancelled by creating a cancellation.  Use this field to check whether it is still possible to cancel the order. If this is the case, submit a cancellation to ChannelEngine.
	CancellationRequestedQuantity *int32 `json:"CancellationRequestedQuantity,omitempty"`
	// The value of a single unit of the ordered product including VAT  (in the shop's base currency calculated using the exchange rate at the time of ordering).
	UnitPriceInclVat float32 `json:"UnitPriceInclVat"`
	// A fixed fee that is charged by the Channel for this orderline.  This fee rate is based on the currency of the Channel  This field is optional, send 0 if not applicable.
	FeeFixed *float32 `json:"FeeFixed,omitempty"`
	// A percentage fee that is charged by the Channel for this orderline.  This field is optional, send 0 if not applicable.
	FeeRate *float32 `json:"FeeRate,omitempty"`
	Condition *Condition `json:"Condition,omitempty"`
	// Expected delivery date from channels, empty if channels not support this value
	ExpectedDeliveryDate NullableTime `json:"ExpectedDeliveryDate,omitempty"`
}

type _MerchantOrderLineResponse MerchantOrderLineResponse

// NewMerchantOrderLineResponse instantiates a new MerchantOrderLineResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantOrderLineResponse(channelProductNo string, quantity int32, unitPriceInclVat float32) *MerchantOrderLineResponse {
	this := MerchantOrderLineResponse{}
	this.ChannelProductNo = channelProductNo
	this.Quantity = quantity
	this.UnitPriceInclVat = unitPriceInclVat
	return &this
}

// NewMerchantOrderLineResponseWithDefaults instantiates a new MerchantOrderLineResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantOrderLineResponseWithDefaults() *MerchantOrderLineResponse {
	this := MerchantOrderLineResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetStatus() OrderStatusView {
	if o == nil || IsNil(o.Status) {
		var ret OrderStatusView
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetStatusOk() (*OrderStatusView, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrderStatusView and assigns it to the Status field.
func (o *MerchantOrderLineResponse) SetStatus(v OrderStatusView) {
	o.Status = &v
}

// GetIsFulfillmentByMarketplace returns the IsFulfillmentByMarketplace field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetIsFulfillmentByMarketplace() bool {
	if o == nil || IsNil(o.IsFulfillmentByMarketplace) {
		var ret bool
		return ret
	}
	return *o.IsFulfillmentByMarketplace
}

// GetIsFulfillmentByMarketplaceOk returns a tuple with the IsFulfillmentByMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetIsFulfillmentByMarketplaceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFulfillmentByMarketplace) {
		return nil, false
	}
	return o.IsFulfillmentByMarketplace, true
}

// HasIsFulfillmentByMarketplace returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasIsFulfillmentByMarketplace() bool {
	if o != nil && !IsNil(o.IsFulfillmentByMarketplace) {
		return true
	}

	return false
}

// SetIsFulfillmentByMarketplace gets a reference to the given bool and assigns it to the IsFulfillmentByMarketplace field.
func (o *MerchantOrderLineResponse) SetIsFulfillmentByMarketplace(v bool) {
	o.IsFulfillmentByMarketplace = &v
}

// GetGtin returns the Gtin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetGtin() string {
	if o == nil || IsNil(o.Gtin.Get()) {
		var ret string
		return ret
	}
	return *o.Gtin.Get()
}

// GetGtinOk returns a tuple with the Gtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetGtinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gtin.Get(), o.Gtin.IsSet()
}

// HasGtin returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasGtin() bool {
	if o != nil && o.Gtin.IsSet() {
		return true
	}

	return false
}

// SetGtin gets a reference to the given NullableString and assigns it to the Gtin field.
func (o *MerchantOrderLineResponse) SetGtin(v string) {
	o.Gtin.Set(&v)
}
// SetGtinNil sets the value for Gtin to be an explicit nil
func (o *MerchantOrderLineResponse) SetGtinNil() {
	o.Gtin.Set(nil)
}

// UnsetGtin ensures that no value is present for Gtin, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetGtin() {
	o.Gtin.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MerchantOrderLineResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MerchantOrderLineResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetStockLocation returns the StockLocation field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetStockLocation() MerchantStockLocationResponse {
	if o == nil || IsNil(o.StockLocation) {
		var ret MerchantStockLocationResponse
		return ret
	}
	return *o.StockLocation
}

// GetStockLocationOk returns a tuple with the StockLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetStockLocationOk() (*MerchantStockLocationResponse, bool) {
	if o == nil || IsNil(o.StockLocation) {
		return nil, false
	}
	return o.StockLocation, true
}

// HasStockLocation returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasStockLocation() bool {
	if o != nil && !IsNil(o.StockLocation) {
		return true
	}

	return false
}

// SetStockLocation gets a reference to the given MerchantStockLocationResponse and assigns it to the StockLocation field.
func (o *MerchantOrderLineResponse) SetStockLocation(v MerchantStockLocationResponse) {
	o.StockLocation = &v
}

// GetUnitVat returns the UnitVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetUnitVat() float32 {
	if o == nil || IsNil(o.UnitVat.Get()) {
		var ret float32
		return ret
	}
	return *o.UnitVat.Get()
}

// GetUnitVatOk returns a tuple with the UnitVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetUnitVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitVat.Get(), o.UnitVat.IsSet()
}

// HasUnitVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasUnitVat() bool {
	if o != nil && o.UnitVat.IsSet() {
		return true
	}

	return false
}

// SetUnitVat gets a reference to the given NullableFloat32 and assigns it to the UnitVat field.
func (o *MerchantOrderLineResponse) SetUnitVat(v float32) {
	o.UnitVat.Set(&v)
}
// SetUnitVatNil sets the value for UnitVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetUnitVatNil() {
	o.UnitVat.Set(nil)
}

// UnsetUnitVat ensures that no value is present for UnitVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetUnitVat() {
	o.UnitVat.Unset()
}

// GetLineTotalInclVat returns the LineTotalInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetLineTotalInclVat() float32 {
	if o == nil || IsNil(o.LineTotalInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.LineTotalInclVat.Get()
}

// GetLineTotalInclVatOk returns a tuple with the LineTotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetLineTotalInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineTotalInclVat.Get(), o.LineTotalInclVat.IsSet()
}

// HasLineTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasLineTotalInclVat() bool {
	if o != nil && o.LineTotalInclVat.IsSet() {
		return true
	}

	return false
}

// SetLineTotalInclVat gets a reference to the given NullableFloat32 and assigns it to the LineTotalInclVat field.
func (o *MerchantOrderLineResponse) SetLineTotalInclVat(v float32) {
	o.LineTotalInclVat.Set(&v)
}
// SetLineTotalInclVatNil sets the value for LineTotalInclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetLineTotalInclVatNil() {
	o.LineTotalInclVat.Set(nil)
}

// UnsetLineTotalInclVat ensures that no value is present for LineTotalInclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetLineTotalInclVat() {
	o.LineTotalInclVat.Unset()
}

// GetLineVat returns the LineVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetLineVat() float32 {
	if o == nil || IsNil(o.LineVat.Get()) {
		var ret float32
		return ret
	}
	return *o.LineVat.Get()
}

// GetLineVatOk returns a tuple with the LineVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetLineVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineVat.Get(), o.LineVat.IsSet()
}

// HasLineVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasLineVat() bool {
	if o != nil && o.LineVat.IsSet() {
		return true
	}

	return false
}

// SetLineVat gets a reference to the given NullableFloat32 and assigns it to the LineVat field.
func (o *MerchantOrderLineResponse) SetLineVat(v float32) {
	o.LineVat.Set(&v)
}
// SetLineVatNil sets the value for LineVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetLineVatNil() {
	o.LineVat.Set(nil)
}

// UnsetLineVat ensures that no value is present for LineVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetLineVat() {
	o.LineVat.Unset()
}

// GetOriginalUnitPriceInclVat returns the OriginalUnitPriceInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalUnitPriceInclVat() float32 {
	if o == nil || IsNil(o.OriginalUnitPriceInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalUnitPriceInclVat.Get()
}

// GetOriginalUnitPriceInclVatOk returns a tuple with the OriginalUnitPriceInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalUnitPriceInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalUnitPriceInclVat.Get(), o.OriginalUnitPriceInclVat.IsSet()
}

// HasOriginalUnitPriceInclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalUnitPriceInclVat() bool {
	if o != nil && o.OriginalUnitPriceInclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalUnitPriceInclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalUnitPriceInclVat field.
func (o *MerchantOrderLineResponse) SetOriginalUnitPriceInclVat(v float32) {
	o.OriginalUnitPriceInclVat.Set(&v)
}
// SetOriginalUnitPriceInclVatNil sets the value for OriginalUnitPriceInclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalUnitPriceInclVatNil() {
	o.OriginalUnitPriceInclVat.Set(nil)
}

// UnsetOriginalUnitPriceInclVat ensures that no value is present for OriginalUnitPriceInclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalUnitPriceInclVat() {
	o.OriginalUnitPriceInclVat.Unset()
}

// GetOriginalUnitVat returns the OriginalUnitVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalUnitVat() float32 {
	if o == nil || IsNil(o.OriginalUnitVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalUnitVat.Get()
}

// GetOriginalUnitVatOk returns a tuple with the OriginalUnitVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalUnitVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalUnitVat.Get(), o.OriginalUnitVat.IsSet()
}

// HasOriginalUnitVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalUnitVat() bool {
	if o != nil && o.OriginalUnitVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalUnitVat gets a reference to the given NullableFloat32 and assigns it to the OriginalUnitVat field.
func (o *MerchantOrderLineResponse) SetOriginalUnitVat(v float32) {
	o.OriginalUnitVat.Set(&v)
}
// SetOriginalUnitVatNil sets the value for OriginalUnitVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalUnitVatNil() {
	o.OriginalUnitVat.Set(nil)
}

// UnsetOriginalUnitVat ensures that no value is present for OriginalUnitVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalUnitVat() {
	o.OriginalUnitVat.Unset()
}

// GetOriginalLineTotalInclVat returns the OriginalLineTotalInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalLineTotalInclVat() float32 {
	if o == nil || IsNil(o.OriginalLineTotalInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalLineTotalInclVat.Get()
}

// GetOriginalLineTotalInclVatOk returns a tuple with the OriginalLineTotalInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalLineTotalInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalLineTotalInclVat.Get(), o.OriginalLineTotalInclVat.IsSet()
}

// HasOriginalLineTotalInclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalLineTotalInclVat() bool {
	if o != nil && o.OriginalLineTotalInclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalLineTotalInclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalLineTotalInclVat field.
func (o *MerchantOrderLineResponse) SetOriginalLineTotalInclVat(v float32) {
	o.OriginalLineTotalInclVat.Set(&v)
}
// SetOriginalLineTotalInclVatNil sets the value for OriginalLineTotalInclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalLineTotalInclVatNil() {
	o.OriginalLineTotalInclVat.Set(nil)
}

// UnsetOriginalLineTotalInclVat ensures that no value is present for OriginalLineTotalInclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalLineTotalInclVat() {
	o.OriginalLineTotalInclVat.Unset()
}

// GetOriginalLineVat returns the OriginalLineVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalLineVat() float32 {
	if o == nil || IsNil(o.OriginalLineVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalLineVat.Get()
}

// GetOriginalLineVatOk returns a tuple with the OriginalLineVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalLineVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalLineVat.Get(), o.OriginalLineVat.IsSet()
}

// HasOriginalLineVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalLineVat() bool {
	if o != nil && o.OriginalLineVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalLineVat gets a reference to the given NullableFloat32 and assigns it to the OriginalLineVat field.
func (o *MerchantOrderLineResponse) SetOriginalLineVat(v float32) {
	o.OriginalLineVat.Set(&v)
}
// SetOriginalLineVatNil sets the value for OriginalLineVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalLineVatNil() {
	o.OriginalLineVat.Set(nil)
}

// UnsetOriginalLineVat ensures that no value is present for OriginalLineVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalLineVat() {
	o.OriginalLineVat.Unset()
}

// GetOriginalFeeFixed returns the OriginalFeeFixed field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetOriginalFeeFixed() float32 {
	if o == nil || IsNil(o.OriginalFeeFixed) {
		var ret float32
		return ret
	}
	return *o.OriginalFeeFixed
}

// GetOriginalFeeFixedOk returns a tuple with the OriginalFeeFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetOriginalFeeFixedOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalFeeFixed) {
		return nil, false
	}
	return o.OriginalFeeFixed, true
}

// HasOriginalFeeFixed returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalFeeFixed() bool {
	if o != nil && !IsNil(o.OriginalFeeFixed) {
		return true
	}

	return false
}

// SetOriginalFeeFixed gets a reference to the given float32 and assigns it to the OriginalFeeFixed field.
func (o *MerchantOrderLineResponse) SetOriginalFeeFixed(v float32) {
	o.OriginalFeeFixed = &v
}

// GetBundleProductMerchantProductNo returns the BundleProductMerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetBundleProductMerchantProductNo() string {
	if o == nil || IsNil(o.BundleProductMerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.BundleProductMerchantProductNo.Get()
}

// GetBundleProductMerchantProductNoOk returns a tuple with the BundleProductMerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetBundleProductMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleProductMerchantProductNo.Get(), o.BundleProductMerchantProductNo.IsSet()
}

// HasBundleProductMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasBundleProductMerchantProductNo() bool {
	if o != nil && o.BundleProductMerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetBundleProductMerchantProductNo gets a reference to the given NullableString and assigns it to the BundleProductMerchantProductNo field.
func (o *MerchantOrderLineResponse) SetBundleProductMerchantProductNo(v string) {
	o.BundleProductMerchantProductNo.Set(&v)
}
// SetBundleProductMerchantProductNoNil sets the value for BundleProductMerchantProductNo to be an explicit nil
func (o *MerchantOrderLineResponse) SetBundleProductMerchantProductNoNil() {
	o.BundleProductMerchantProductNo.Set(nil)
}

// UnsetBundleProductMerchantProductNo ensures that no value is present for BundleProductMerchantProductNo, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetBundleProductMerchantProductNo() {
	o.BundleProductMerchantProductNo.Unset()
}

// GetJurisCode returns the JurisCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetJurisCode() string {
	if o == nil || IsNil(o.JurisCode.Get()) {
		var ret string
		return ret
	}
	return *o.JurisCode.Get()
}

// GetJurisCodeOk returns a tuple with the JurisCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetJurisCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JurisCode.Get(), o.JurisCode.IsSet()
}

// HasJurisCode returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasJurisCode() bool {
	if o != nil && o.JurisCode.IsSet() {
		return true
	}

	return false
}

// SetJurisCode gets a reference to the given NullableString and assigns it to the JurisCode field.
func (o *MerchantOrderLineResponse) SetJurisCode(v string) {
	o.JurisCode.Set(&v)
}
// SetJurisCodeNil sets the value for JurisCode to be an explicit nil
func (o *MerchantOrderLineResponse) SetJurisCodeNil() {
	o.JurisCode.Set(nil)
}

// UnsetJurisCode ensures that no value is present for JurisCode, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetJurisCode() {
	o.JurisCode.Unset()
}

// GetJurisName returns the JurisName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetJurisName() string {
	if o == nil || IsNil(o.JurisName.Get()) {
		var ret string
		return ret
	}
	return *o.JurisName.Get()
}

// GetJurisNameOk returns a tuple with the JurisName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetJurisNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JurisName.Get(), o.JurisName.IsSet()
}

// HasJurisName returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasJurisName() bool {
	if o != nil && o.JurisName.IsSet() {
		return true
	}

	return false
}

// SetJurisName gets a reference to the given NullableString and assigns it to the JurisName field.
func (o *MerchantOrderLineResponse) SetJurisName(v string) {
	o.JurisName.Set(&v)
}
// SetJurisNameNil sets the value for JurisName to be an explicit nil
func (o *MerchantOrderLineResponse) SetJurisNameNil() {
	o.JurisName.Set(nil)
}

// UnsetJurisName ensures that no value is present for JurisName, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetJurisName() {
	o.JurisName.Unset()
}

// GetVatRate returns the VatRate field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetVatRate() float32 {
	if o == nil || IsNil(o.VatRate) {
		var ret float32
		return ret
	}
	return *o.VatRate
}

// GetVatRateOk returns a tuple with the VatRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetVatRateOk() (*float32, bool) {
	if o == nil || IsNil(o.VatRate) {
		return nil, false
	}
	return o.VatRate, true
}

// HasVatRate returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasVatRate() bool {
	if o != nil && !IsNil(o.VatRate) {
		return true
	}

	return false
}

// SetVatRate gets a reference to the given float32 and assigns it to the VatRate field.
func (o *MerchantOrderLineResponse) SetVatRate(v float32) {
	o.VatRate = &v
}

// GetUnitPriceExclVat returns the UnitPriceExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetUnitPriceExclVat() float32 {
	if o == nil || IsNil(o.UnitPriceExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.UnitPriceExclVat.Get()
}

// GetUnitPriceExclVatOk returns a tuple with the UnitPriceExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetUnitPriceExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitPriceExclVat.Get(), o.UnitPriceExclVat.IsSet()
}

// HasUnitPriceExclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasUnitPriceExclVat() bool {
	if o != nil && o.UnitPriceExclVat.IsSet() {
		return true
	}

	return false
}

// SetUnitPriceExclVat gets a reference to the given NullableFloat32 and assigns it to the UnitPriceExclVat field.
func (o *MerchantOrderLineResponse) SetUnitPriceExclVat(v float32) {
	o.UnitPriceExclVat.Set(&v)
}
// SetUnitPriceExclVatNil sets the value for UnitPriceExclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetUnitPriceExclVatNil() {
	o.UnitPriceExclVat.Set(nil)
}

// UnsetUnitPriceExclVat ensures that no value is present for UnitPriceExclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetUnitPriceExclVat() {
	o.UnitPriceExclVat.Unset()
}

// GetLineTotalExclVat returns the LineTotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetLineTotalExclVat() float32 {
	if o == nil || IsNil(o.LineTotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.LineTotalExclVat.Get()
}

// GetLineTotalExclVatOk returns a tuple with the LineTotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetLineTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineTotalExclVat.Get(), o.LineTotalExclVat.IsSet()
}

// HasLineTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasLineTotalExclVat() bool {
	if o != nil && o.LineTotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetLineTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the LineTotalExclVat field.
func (o *MerchantOrderLineResponse) SetLineTotalExclVat(v float32) {
	o.LineTotalExclVat.Set(&v)
}
// SetLineTotalExclVatNil sets the value for LineTotalExclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetLineTotalExclVatNil() {
	o.LineTotalExclVat.Set(nil)
}

// UnsetLineTotalExclVat ensures that no value is present for LineTotalExclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetLineTotalExclVat() {
	o.LineTotalExclVat.Unset()
}

// GetOriginalUnitPriceExclVat returns the OriginalUnitPriceExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalUnitPriceExclVat() float32 {
	if o == nil || IsNil(o.OriginalUnitPriceExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalUnitPriceExclVat.Get()
}

// GetOriginalUnitPriceExclVatOk returns a tuple with the OriginalUnitPriceExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalUnitPriceExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalUnitPriceExclVat.Get(), o.OriginalUnitPriceExclVat.IsSet()
}

// HasOriginalUnitPriceExclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalUnitPriceExclVat() bool {
	if o != nil && o.OriginalUnitPriceExclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalUnitPriceExclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalUnitPriceExclVat field.
func (o *MerchantOrderLineResponse) SetOriginalUnitPriceExclVat(v float32) {
	o.OriginalUnitPriceExclVat.Set(&v)
}
// SetOriginalUnitPriceExclVatNil sets the value for OriginalUnitPriceExclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalUnitPriceExclVatNil() {
	o.OriginalUnitPriceExclVat.Set(nil)
}

// UnsetOriginalUnitPriceExclVat ensures that no value is present for OriginalUnitPriceExclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalUnitPriceExclVat() {
	o.OriginalUnitPriceExclVat.Unset()
}

// GetOriginalLineTotalExclVat returns the OriginalLineTotalExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetOriginalLineTotalExclVat() float32 {
	if o == nil || IsNil(o.OriginalLineTotalExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.OriginalLineTotalExclVat.Get()
}

// GetOriginalLineTotalExclVatOk returns a tuple with the OriginalLineTotalExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetOriginalLineTotalExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalLineTotalExclVat.Get(), o.OriginalLineTotalExclVat.IsSet()
}

// HasOriginalLineTotalExclVat returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasOriginalLineTotalExclVat() bool {
	if o != nil && o.OriginalLineTotalExclVat.IsSet() {
		return true
	}

	return false
}

// SetOriginalLineTotalExclVat gets a reference to the given NullableFloat32 and assigns it to the OriginalLineTotalExclVat field.
func (o *MerchantOrderLineResponse) SetOriginalLineTotalExclVat(v float32) {
	o.OriginalLineTotalExclVat.Set(&v)
}
// SetOriginalLineTotalExclVatNil sets the value for OriginalLineTotalExclVat to be an explicit nil
func (o *MerchantOrderLineResponse) SetOriginalLineTotalExclVatNil() {
	o.OriginalLineTotalExclVat.Set(nil)
}

// UnsetOriginalLineTotalExclVat ensures that no value is present for OriginalLineTotalExclVat, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetOriginalLineTotalExclVat() {
	o.OriginalLineTotalExclVat.Unset()
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetExtraData() []MerchantOrderLineExtraDataResponse {
	if o == nil {
		var ret []MerchantOrderLineExtraDataResponse
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetExtraDataOk() ([]MerchantOrderLineExtraDataResponse, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasExtraData() bool {
	if o != nil && IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given []MerchantOrderLineExtraDataResponse and assigns it to the ExtraData field.
func (o *MerchantOrderLineResponse) SetExtraData(v []MerchantOrderLineExtraDataResponse) {
	o.ExtraData = v
}

// GetChannelProductNo returns the ChannelProductNo field value
func (o *MerchantOrderLineResponse) GetChannelProductNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelProductNo
}

// GetChannelProductNoOk returns a tuple with the ChannelProductNo field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetChannelProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelProductNo, true
}

// SetChannelProductNo sets field value
func (o *MerchantOrderLineResponse) SetChannelProductNo(v string) {
	o.ChannelProductNo = v
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *MerchantOrderLineResponse) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *MerchantOrderLineResponse) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetQuantity returns the Quantity field value
func (o *MerchantOrderLineResponse) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *MerchantOrderLineResponse) SetQuantity(v int32) {
	o.Quantity = v
}

// GetCancellationRequestedQuantity returns the CancellationRequestedQuantity field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetCancellationRequestedQuantity() int32 {
	if o == nil || IsNil(o.CancellationRequestedQuantity) {
		var ret int32
		return ret
	}
	return *o.CancellationRequestedQuantity
}

// GetCancellationRequestedQuantityOk returns a tuple with the CancellationRequestedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetCancellationRequestedQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.CancellationRequestedQuantity) {
		return nil, false
	}
	return o.CancellationRequestedQuantity, true
}

// HasCancellationRequestedQuantity returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasCancellationRequestedQuantity() bool {
	if o != nil && !IsNil(o.CancellationRequestedQuantity) {
		return true
	}

	return false
}

// SetCancellationRequestedQuantity gets a reference to the given int32 and assigns it to the CancellationRequestedQuantity field.
func (o *MerchantOrderLineResponse) SetCancellationRequestedQuantity(v int32) {
	o.CancellationRequestedQuantity = &v
}

// GetUnitPriceInclVat returns the UnitPriceInclVat field value
func (o *MerchantOrderLineResponse) GetUnitPriceInclVat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UnitPriceInclVat
}

// GetUnitPriceInclVatOk returns a tuple with the UnitPriceInclVat field value
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetUnitPriceInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitPriceInclVat, true
}

// SetUnitPriceInclVat sets field value
func (o *MerchantOrderLineResponse) SetUnitPriceInclVat(v float32) {
	o.UnitPriceInclVat = v
}

// GetFeeFixed returns the FeeFixed field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetFeeFixed() float32 {
	if o == nil || IsNil(o.FeeFixed) {
		var ret float32
		return ret
	}
	return *o.FeeFixed
}

// GetFeeFixedOk returns a tuple with the FeeFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetFeeFixedOk() (*float32, bool) {
	if o == nil || IsNil(o.FeeFixed) {
		return nil, false
	}
	return o.FeeFixed, true
}

// HasFeeFixed returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasFeeFixed() bool {
	if o != nil && !IsNil(o.FeeFixed) {
		return true
	}

	return false
}

// SetFeeFixed gets a reference to the given float32 and assigns it to the FeeFixed field.
func (o *MerchantOrderLineResponse) SetFeeFixed(v float32) {
	o.FeeFixed = &v
}

// GetFeeRate returns the FeeRate field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetFeeRate() float32 {
	if o == nil || IsNil(o.FeeRate) {
		var ret float32
		return ret
	}
	return *o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetFeeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.FeeRate) {
		return nil, false
	}
	return o.FeeRate, true
}

// HasFeeRate returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasFeeRate() bool {
	if o != nil && !IsNil(o.FeeRate) {
		return true
	}

	return false
}

// SetFeeRate gets a reference to the given float32 and assigns it to the FeeRate field.
func (o *MerchantOrderLineResponse) SetFeeRate(v float32) {
	o.FeeRate = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *MerchantOrderLineResponse) GetCondition() Condition {
	if o == nil || IsNil(o.Condition) {
		var ret Condition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOrderLineResponse) GetConditionOk() (*Condition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given Condition and assigns it to the Condition field.
func (o *MerchantOrderLineResponse) SetCondition(v Condition) {
	o.Condition = &v
}

// GetExpectedDeliveryDate returns the ExpectedDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOrderLineResponse) GetExpectedDeliveryDate() time.Time {
	if o == nil || IsNil(o.ExpectedDeliveryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpectedDeliveryDate.Get()
}

// GetExpectedDeliveryDateOk returns a tuple with the ExpectedDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOrderLineResponse) GetExpectedDeliveryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectedDeliveryDate.Get(), o.ExpectedDeliveryDate.IsSet()
}

// HasExpectedDeliveryDate returns a boolean if a field has been set.
func (o *MerchantOrderLineResponse) HasExpectedDeliveryDate() bool {
	if o != nil && o.ExpectedDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetExpectedDeliveryDate gets a reference to the given NullableTime and assigns it to the ExpectedDeliveryDate field.
func (o *MerchantOrderLineResponse) SetExpectedDeliveryDate(v time.Time) {
	o.ExpectedDeliveryDate.Set(&v)
}
// SetExpectedDeliveryDateNil sets the value for ExpectedDeliveryDate to be an explicit nil
func (o *MerchantOrderLineResponse) SetExpectedDeliveryDateNil() {
	o.ExpectedDeliveryDate.Set(nil)
}

// UnsetExpectedDeliveryDate ensures that no value is present for ExpectedDeliveryDate, not even an explicit nil
func (o *MerchantOrderLineResponse) UnsetExpectedDeliveryDate() {
	o.ExpectedDeliveryDate.Unset()
}

func (o MerchantOrderLineResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantOrderLineResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.IsFulfillmentByMarketplace) {
		toSerialize["IsFulfillmentByMarketplace"] = o.IsFulfillmentByMarketplace
	}
	if o.Gtin.IsSet() {
		toSerialize["Gtin"] = o.Gtin.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !IsNil(o.StockLocation) {
		toSerialize["StockLocation"] = o.StockLocation
	}
	if o.UnitVat.IsSet() {
		toSerialize["UnitVat"] = o.UnitVat.Get()
	}
	if o.LineTotalInclVat.IsSet() {
		toSerialize["LineTotalInclVat"] = o.LineTotalInclVat.Get()
	}
	if o.LineVat.IsSet() {
		toSerialize["LineVat"] = o.LineVat.Get()
	}
	if o.OriginalUnitPriceInclVat.IsSet() {
		toSerialize["OriginalUnitPriceInclVat"] = o.OriginalUnitPriceInclVat.Get()
	}
	if o.OriginalUnitVat.IsSet() {
		toSerialize["OriginalUnitVat"] = o.OriginalUnitVat.Get()
	}
	if o.OriginalLineTotalInclVat.IsSet() {
		toSerialize["OriginalLineTotalInclVat"] = o.OriginalLineTotalInclVat.Get()
	}
	if o.OriginalLineVat.IsSet() {
		toSerialize["OriginalLineVat"] = o.OriginalLineVat.Get()
	}
	if !IsNil(o.OriginalFeeFixed) {
		toSerialize["OriginalFeeFixed"] = o.OriginalFeeFixed
	}
	if o.BundleProductMerchantProductNo.IsSet() {
		toSerialize["BundleProductMerchantProductNo"] = o.BundleProductMerchantProductNo.Get()
	}
	if o.JurisCode.IsSet() {
		toSerialize["JurisCode"] = o.JurisCode.Get()
	}
	if o.JurisName.IsSet() {
		toSerialize["JurisName"] = o.JurisName.Get()
	}
	if !IsNil(o.VatRate) {
		toSerialize["VatRate"] = o.VatRate
	}
	if o.UnitPriceExclVat.IsSet() {
		toSerialize["UnitPriceExclVat"] = o.UnitPriceExclVat.Get()
	}
	if o.LineTotalExclVat.IsSet() {
		toSerialize["LineTotalExclVat"] = o.LineTotalExclVat.Get()
	}
	if o.OriginalUnitPriceExclVat.IsSet() {
		toSerialize["OriginalUnitPriceExclVat"] = o.OriginalUnitPriceExclVat.Get()
	}
	if o.OriginalLineTotalExclVat.IsSet() {
		toSerialize["OriginalLineTotalExclVat"] = o.OriginalLineTotalExclVat.Get()
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	toSerialize["ChannelProductNo"] = o.ChannelProductNo
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	toSerialize["Quantity"] = o.Quantity
	if !IsNil(o.CancellationRequestedQuantity) {
		toSerialize["CancellationRequestedQuantity"] = o.CancellationRequestedQuantity
	}
	toSerialize["UnitPriceInclVat"] = o.UnitPriceInclVat
	if !IsNil(o.FeeFixed) {
		toSerialize["FeeFixed"] = o.FeeFixed
	}
	if !IsNil(o.FeeRate) {
		toSerialize["FeeRate"] = o.FeeRate
	}
	if !IsNil(o.Condition) {
		toSerialize["Condition"] = o.Condition
	}
	if o.ExpectedDeliveryDate.IsSet() {
		toSerialize["ExpectedDeliveryDate"] = o.ExpectedDeliveryDate.Get()
	}
	return toSerialize, nil
}

func (o *MerchantOrderLineResponse) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelProductNo",
		"Quantity",
		"UnitPriceInclVat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantOrderLineResponse := _MerchantOrderLineResponse{}

	err = json.Unmarshal(bytes, &varMerchantOrderLineResponse)

	if err != nil {
		return err
	}

	*o = MerchantOrderLineResponse(varMerchantOrderLineResponse)

	return err
}

type NullableMerchantOrderLineResponse struct {
	value *MerchantOrderLineResponse
	isSet bool
}

func (v NullableMerchantOrderLineResponse) Get() *MerchantOrderLineResponse {
	return v.value
}

func (v *NullableMerchantOrderLineResponse) Set(val *MerchantOrderLineResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantOrderLineResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantOrderLineResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantOrderLineResponse(val *MerchantOrderLineResponse) *NullableMerchantOrderLineResponse {
	return &NullableMerchantOrderLineResponse{value: val, isSet: true}
}

func (v NullableMerchantOrderLineResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantOrderLineResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


