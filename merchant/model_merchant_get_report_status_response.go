/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantGetReportStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantGetReportStatusResponse{}

// MerchantGetReportStatusResponse struct for MerchantGetReportStatusResponse
type MerchantGetReportStatusResponse struct {
	Status *ReportStatus `json:"Status,omitempty"`
	ResourceUrl NullableString `json:"ResourceUrl,omitempty"`
}

// NewMerchantGetReportStatusResponse instantiates a new MerchantGetReportStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantGetReportStatusResponse() *MerchantGetReportStatusResponse {
	this := MerchantGetReportStatusResponse{}
	return &this
}

// NewMerchantGetReportStatusResponseWithDefaults instantiates a new MerchantGetReportStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantGetReportStatusResponseWithDefaults() *MerchantGetReportStatusResponse {
	this := MerchantGetReportStatusResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MerchantGetReportStatusResponse) GetStatus() ReportStatus {
	if o == nil || IsNil(o.Status) {
		var ret ReportStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGetReportStatusResponse) GetStatusOk() (*ReportStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MerchantGetReportStatusResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ReportStatus and assigns it to the Status field.
func (o *MerchantGetReportStatusResponse) SetStatus(v ReportStatus) {
	o.Status = &v
}

// GetResourceUrl returns the ResourceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantGetReportStatusResponse) GetResourceUrl() string {
	if o == nil || IsNil(o.ResourceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceUrl.Get()
}

// GetResourceUrlOk returns a tuple with the ResourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantGetReportStatusResponse) GetResourceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceUrl.Get(), o.ResourceUrl.IsSet()
}

// HasResourceUrl returns a boolean if a field has been set.
func (o *MerchantGetReportStatusResponse) HasResourceUrl() bool {
	if o != nil && o.ResourceUrl.IsSet() {
		return true
	}

	return false
}

// SetResourceUrl gets a reference to the given NullableString and assigns it to the ResourceUrl field.
func (o *MerchantGetReportStatusResponse) SetResourceUrl(v string) {
	o.ResourceUrl.Set(&v)
}
// SetResourceUrlNil sets the value for ResourceUrl to be an explicit nil
func (o *MerchantGetReportStatusResponse) SetResourceUrlNil() {
	o.ResourceUrl.Set(nil)
}

// UnsetResourceUrl ensures that no value is present for ResourceUrl, not even an explicit nil
func (o *MerchantGetReportStatusResponse) UnsetResourceUrl() {
	o.ResourceUrl.Unset()
}

func (o MerchantGetReportStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantGetReportStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if o.ResourceUrl.IsSet() {
		toSerialize["ResourceUrl"] = o.ResourceUrl.Get()
	}
	return toSerialize, nil
}

type NullableMerchantGetReportStatusResponse struct {
	value *MerchantGetReportStatusResponse
	isSet bool
}

func (v NullableMerchantGetReportStatusResponse) Get() *MerchantGetReportStatusResponse {
	return v.value
}

func (v *NullableMerchantGetReportStatusResponse) Set(val *MerchantGetReportStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantGetReportStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantGetReportStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantGetReportStatusResponse(val *MerchantGetReportStatusResponse) *NullableMerchantGetReportStatusResponse {
	return &NullableMerchantGetReportStatusResponse{value: val, isSet: true}
}

func (v NullableMerchantGetReportStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantGetReportStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


