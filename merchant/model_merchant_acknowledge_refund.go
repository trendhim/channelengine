/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantAcknowledgeRefund type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantAcknowledgeRefund{}

// MerchantAcknowledgeRefund struct for MerchantAcknowledgeRefund
type MerchantAcknowledgeRefund struct {
	Identifier NullableString `json:"Identifier,omitempty"`
	MerchantRefundNo NullableString `json:"MerchantRefundNo,omitempty"`
}

// NewMerchantAcknowledgeRefund instantiates a new MerchantAcknowledgeRefund object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantAcknowledgeRefund() *MerchantAcknowledgeRefund {
	this := MerchantAcknowledgeRefund{}
	return &this
}

// NewMerchantAcknowledgeRefundWithDefaults instantiates a new MerchantAcknowledgeRefund object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantAcknowledgeRefundWithDefaults() *MerchantAcknowledgeRefund {
	this := MerchantAcknowledgeRefund{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantAcknowledgeRefund) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier.Get()) {
		var ret string
		return ret
	}
	return *o.Identifier.Get()
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantAcknowledgeRefund) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifier.Get(), o.Identifier.IsSet()
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MerchantAcknowledgeRefund) HasIdentifier() bool {
	if o != nil && o.Identifier.IsSet() {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given NullableString and assigns it to the Identifier field.
func (o *MerchantAcknowledgeRefund) SetIdentifier(v string) {
	o.Identifier.Set(&v)
}
// SetIdentifierNil sets the value for Identifier to be an explicit nil
func (o *MerchantAcknowledgeRefund) SetIdentifierNil() {
	o.Identifier.Set(nil)
}

// UnsetIdentifier ensures that no value is present for Identifier, not even an explicit nil
func (o *MerchantAcknowledgeRefund) UnsetIdentifier() {
	o.Identifier.Unset()
}

// GetMerchantRefundNo returns the MerchantRefundNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantAcknowledgeRefund) GetMerchantRefundNo() string {
	if o == nil || IsNil(o.MerchantRefundNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantRefundNo.Get()
}

// GetMerchantRefundNoOk returns a tuple with the MerchantRefundNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantAcknowledgeRefund) GetMerchantRefundNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantRefundNo.Get(), o.MerchantRefundNo.IsSet()
}

// HasMerchantRefundNo returns a boolean if a field has been set.
func (o *MerchantAcknowledgeRefund) HasMerchantRefundNo() bool {
	if o != nil && o.MerchantRefundNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantRefundNo gets a reference to the given NullableString and assigns it to the MerchantRefundNo field.
func (o *MerchantAcknowledgeRefund) SetMerchantRefundNo(v string) {
	o.MerchantRefundNo.Set(&v)
}
// SetMerchantRefundNoNil sets the value for MerchantRefundNo to be an explicit nil
func (o *MerchantAcknowledgeRefund) SetMerchantRefundNoNil() {
	o.MerchantRefundNo.Set(nil)
}

// UnsetMerchantRefundNo ensures that no value is present for MerchantRefundNo, not even an explicit nil
func (o *MerchantAcknowledgeRefund) UnsetMerchantRefundNo() {
	o.MerchantRefundNo.Unset()
}

func (o MerchantAcknowledgeRefund) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantAcknowledgeRefund) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier.IsSet() {
		toSerialize["Identifier"] = o.Identifier.Get()
	}
	if o.MerchantRefundNo.IsSet() {
		toSerialize["MerchantRefundNo"] = o.MerchantRefundNo.Get()
	}
	return toSerialize, nil
}

type NullableMerchantAcknowledgeRefund struct {
	value *MerchantAcknowledgeRefund
	isSet bool
}

func (v NullableMerchantAcknowledgeRefund) Get() *MerchantAcknowledgeRefund {
	return v.value
}

func (v *NullableMerchantAcknowledgeRefund) Set(val *MerchantAcknowledgeRefund) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantAcknowledgeRefund) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantAcknowledgeRefund) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantAcknowledgeRefund(val *MerchantAcknowledgeRefund) *NullableMerchantAcknowledgeRefund {
	return &NullableMerchantAcknowledgeRefund{value: val, isSet: true}
}

func (v NullableMerchantAcknowledgeRefund) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantAcknowledgeRefund) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


