/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantFulfillmentStockStockLocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantFulfillmentStockStockLocationsResponse{}

// MerchantFulfillmentStockStockLocationsResponse struct for MerchantFulfillmentStockStockLocationsResponse
type MerchantFulfillmentStockStockLocationsResponse struct {
	// The product SKU.
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	// The ChannelEngine id of the stock location.
	StockLocations []MerchantFulfillmentStockLocationItemResponse `json:"StockLocations,omitempty"`
}

// NewMerchantFulfillmentStockStockLocationsResponse instantiates a new MerchantFulfillmentStockStockLocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantFulfillmentStockStockLocationsResponse() *MerchantFulfillmentStockStockLocationsResponse {
	this := MerchantFulfillmentStockStockLocationsResponse{}
	return &this
}

// NewMerchantFulfillmentStockStockLocationsResponseWithDefaults instantiates a new MerchantFulfillmentStockStockLocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantFulfillmentStockStockLocationsResponseWithDefaults() *MerchantFulfillmentStockStockLocationsResponse {
	this := MerchantFulfillmentStockStockLocationsResponse{}
	return &this
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantFulfillmentStockStockLocationsResponse) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantFulfillmentStockStockLocationsResponse) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantFulfillmentStockStockLocationsResponse) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *MerchantFulfillmentStockStockLocationsResponse) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *MerchantFulfillmentStockStockLocationsResponse) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *MerchantFulfillmentStockStockLocationsResponse) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetStockLocations returns the StockLocations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantFulfillmentStockStockLocationsResponse) GetStockLocations() []MerchantFulfillmentStockLocationItemResponse {
	if o == nil {
		var ret []MerchantFulfillmentStockLocationItemResponse
		return ret
	}
	return o.StockLocations
}

// GetStockLocationsOk returns a tuple with the StockLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantFulfillmentStockStockLocationsResponse) GetStockLocationsOk() ([]MerchantFulfillmentStockLocationItemResponse, bool) {
	if o == nil || IsNil(o.StockLocations) {
		return nil, false
	}
	return o.StockLocations, true
}

// HasStockLocations returns a boolean if a field has been set.
func (o *MerchantFulfillmentStockStockLocationsResponse) HasStockLocations() bool {
	if o != nil && !IsNil(o.StockLocations) {
		return true
	}

	return false
}

// SetStockLocations gets a reference to the given []MerchantFulfillmentStockLocationItemResponse and assigns it to the StockLocations field.
func (o *MerchantFulfillmentStockStockLocationsResponse) SetStockLocations(v []MerchantFulfillmentStockLocationItemResponse) {
	o.StockLocations = v
}

func (o MerchantFulfillmentStockStockLocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantFulfillmentStockStockLocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	if o.StockLocations != nil {
		toSerialize["StockLocations"] = o.StockLocations
	}
	return toSerialize, nil
}

type NullableMerchantFulfillmentStockStockLocationsResponse struct {
	value *MerchantFulfillmentStockStockLocationsResponse
	isSet bool
}

func (v NullableMerchantFulfillmentStockStockLocationsResponse) Get() *MerchantFulfillmentStockStockLocationsResponse {
	return v.value
}

func (v *NullableMerchantFulfillmentStockStockLocationsResponse) Set(val *MerchantFulfillmentStockStockLocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantFulfillmentStockStockLocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantFulfillmentStockStockLocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantFulfillmentStockStockLocationsResponse(val *MerchantFulfillmentStockStockLocationsResponse) *NullableMerchantFulfillmentStockStockLocationsResponse {
	return &NullableMerchantFulfillmentStockStockLocationsResponse{value: val, isSet: true}
}

func (v NullableMerchantFulfillmentStockStockLocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantFulfillmentStockStockLocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


