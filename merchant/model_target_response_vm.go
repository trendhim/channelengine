/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the TargetResponseVm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetResponseVm{}

// TargetResponseVm struct for TargetResponseVm
type TargetResponseVm struct {
	ChannelId NullableInt32 `json:"ChannelId,omitempty"`
	TargetInclVat NullableFloat32 `json:"TargetInclVat,omitempty"`
	TargetExclVat NullableFloat32 `json:"TargetExclVat,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	Month *int32 `json:"Month,omitempty"`
	Year *int32 `json:"Year,omitempty"`
}

// NewTargetResponseVm instantiates a new TargetResponseVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetResponseVm() *TargetResponseVm {
	this := TargetResponseVm{}
	return &this
}

// NewTargetResponseVmWithDefaults instantiates a new TargetResponseVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetResponseVmWithDefaults() *TargetResponseVm {
	this := TargetResponseVm{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetResponseVm) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetResponseVm) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *TargetResponseVm) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableInt32 and assigns it to the ChannelId field.
func (o *TargetResponseVm) SetChannelId(v int32) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *TargetResponseVm) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *TargetResponseVm) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetTargetInclVat returns the TargetInclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetResponseVm) GetTargetInclVat() float32 {
	if o == nil || IsNil(o.TargetInclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.TargetInclVat.Get()
}

// GetTargetInclVatOk returns a tuple with the TargetInclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetResponseVm) GetTargetInclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetInclVat.Get(), o.TargetInclVat.IsSet()
}

// HasTargetInclVat returns a boolean if a field has been set.
func (o *TargetResponseVm) HasTargetInclVat() bool {
	if o != nil && o.TargetInclVat.IsSet() {
		return true
	}

	return false
}

// SetTargetInclVat gets a reference to the given NullableFloat32 and assigns it to the TargetInclVat field.
func (o *TargetResponseVm) SetTargetInclVat(v float32) {
	o.TargetInclVat.Set(&v)
}
// SetTargetInclVatNil sets the value for TargetInclVat to be an explicit nil
func (o *TargetResponseVm) SetTargetInclVatNil() {
	o.TargetInclVat.Set(nil)
}

// UnsetTargetInclVat ensures that no value is present for TargetInclVat, not even an explicit nil
func (o *TargetResponseVm) UnsetTargetInclVat() {
	o.TargetInclVat.Unset()
}

// GetTargetExclVat returns the TargetExclVat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetResponseVm) GetTargetExclVat() float32 {
	if o == nil || IsNil(o.TargetExclVat.Get()) {
		var ret float32
		return ret
	}
	return *o.TargetExclVat.Get()
}

// GetTargetExclVatOk returns a tuple with the TargetExclVat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetResponseVm) GetTargetExclVatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetExclVat.Get(), o.TargetExclVat.IsSet()
}

// HasTargetExclVat returns a boolean if a field has been set.
func (o *TargetResponseVm) HasTargetExclVat() bool {
	if o != nil && o.TargetExclVat.IsSet() {
		return true
	}

	return false
}

// SetTargetExclVat gets a reference to the given NullableFloat32 and assigns it to the TargetExclVat field.
func (o *TargetResponseVm) SetTargetExclVat(v float32) {
	o.TargetExclVat.Set(&v)
}
// SetTargetExclVatNil sets the value for TargetExclVat to be an explicit nil
func (o *TargetResponseVm) SetTargetExclVatNil() {
	o.TargetExclVat.Set(nil)
}

// UnsetTargetExclVat ensures that no value is present for TargetExclVat, not even an explicit nil
func (o *TargetResponseVm) UnsetTargetExclVat() {
	o.TargetExclVat.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TargetResponseVm) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResponseVm) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TargetResponseVm) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *TargetResponseVm) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TargetResponseVm) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResponseVm) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TargetResponseVm) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TargetResponseVm) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *TargetResponseVm) GetMonth() int32 {
	if o == nil || IsNil(o.Month) {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResponseVm) GetMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *TargetResponseVm) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *TargetResponseVm) SetMonth(v int32) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *TargetResponseVm) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResponseVm) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *TargetResponseVm) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *TargetResponseVm) SetYear(v int32) {
	o.Year = &v
}

func (o TargetResponseVm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetResponseVm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.TargetInclVat.IsSet() {
		toSerialize["TargetInclVat"] = o.TargetInclVat.Get()
	}
	if o.TargetExclVat.IsSet() {
		toSerialize["TargetExclVat"] = o.TargetExclVat.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Month) {
		toSerialize["Month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["Year"] = o.Year
	}
	return toSerialize, nil
}

type NullableTargetResponseVm struct {
	value *TargetResponseVm
	isSet bool
}

func (v NullableTargetResponseVm) Get() *TargetResponseVm {
	return v.value
}

func (v *NullableTargetResponseVm) Set(val *TargetResponseVm) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetResponseVm) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetResponseVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetResponseVm(val *TargetResponseVm) *NullableTargetResponseVm {
	return &NullableTargetResponseVm{value: val, isSet: true}
}

func (v NullableTargetResponseVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetResponseVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


