/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChangePurchaseOrderShipmentLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePurchaseOrderShipmentLine{}

// ChangePurchaseOrderShipmentLine For Create or Update
type ChangePurchaseOrderShipmentLine struct {
	// Channel's identifier of the purchase order
	ChannelOrderNo string `json:"ChannelOrderNo"`
	// Merchant's identifier of the product.  The combination of ChannelOrderNo + MerchantProductNo identifies the order line this shipment line  ships.
	MerchantProductNo string `json:"MerchantProductNo"`
	QuantityUnitOfMeasure *PurchaseOrderLineUnitOfMeasure `json:"QuantityUnitOfMeasure,omitempty"`
	// The quantity
	Quantity *int32 `json:"Quantity,omitempty"`
	// The case size, when QuantityUnitOfMeasure is 'CASES'. Otherwise, it is 1.
	QuantityUnitSize NullableInt32 `json:"QuantityUnitSize,omitempty"`
	// The date that determines the limit of consumption or use of a product.  For perishable products.
	ExpiryDate NullableTime `json:"ExpiryDate,omitempty"`
}

type _ChangePurchaseOrderShipmentLine ChangePurchaseOrderShipmentLine

// NewChangePurchaseOrderShipmentLine instantiates a new ChangePurchaseOrderShipmentLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePurchaseOrderShipmentLine(channelOrderNo string, merchantProductNo string) *ChangePurchaseOrderShipmentLine {
	this := ChangePurchaseOrderShipmentLine{}
	this.ChannelOrderNo = channelOrderNo
	this.MerchantProductNo = merchantProductNo
	return &this
}

// NewChangePurchaseOrderShipmentLineWithDefaults instantiates a new ChangePurchaseOrderShipmentLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePurchaseOrderShipmentLineWithDefaults() *ChangePurchaseOrderShipmentLine {
	this := ChangePurchaseOrderShipmentLine{}
	return &this
}

// GetChannelOrderNo returns the ChannelOrderNo field value
func (o *ChangePurchaseOrderShipmentLine) GetChannelOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelOrderNo
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value
// and a boolean to check if the value has been set.
func (o *ChangePurchaseOrderShipmentLine) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelOrderNo, true
}

// SetChannelOrderNo sets field value
func (o *ChangePurchaseOrderShipmentLine) SetChannelOrderNo(v string) {
	o.ChannelOrderNo = v
}

// GetMerchantProductNo returns the MerchantProductNo field value
func (o *ChangePurchaseOrderShipmentLine) GetMerchantProductNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantProductNo
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value
// and a boolean to check if the value has been set.
func (o *ChangePurchaseOrderShipmentLine) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantProductNo, true
}

// SetMerchantProductNo sets field value
func (o *ChangePurchaseOrderShipmentLine) SetMerchantProductNo(v string) {
	o.MerchantProductNo = v
}

// GetQuantityUnitOfMeasure returns the QuantityUnitOfMeasure field value if set, zero value otherwise.
func (o *ChangePurchaseOrderShipmentLine) GetQuantityUnitOfMeasure() PurchaseOrderLineUnitOfMeasure {
	if o == nil || IsNil(o.QuantityUnitOfMeasure) {
		var ret PurchaseOrderLineUnitOfMeasure
		return ret
	}
	return *o.QuantityUnitOfMeasure
}

// GetQuantityUnitOfMeasureOk returns a tuple with the QuantityUnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePurchaseOrderShipmentLine) GetQuantityUnitOfMeasureOk() (*PurchaseOrderLineUnitOfMeasure, bool) {
	if o == nil || IsNil(o.QuantityUnitOfMeasure) {
		return nil, false
	}
	return o.QuantityUnitOfMeasure, true
}

// HasQuantityUnitOfMeasure returns a boolean if a field has been set.
func (o *ChangePurchaseOrderShipmentLine) HasQuantityUnitOfMeasure() bool {
	if o != nil && !IsNil(o.QuantityUnitOfMeasure) {
		return true
	}

	return false
}

// SetQuantityUnitOfMeasure gets a reference to the given PurchaseOrderLineUnitOfMeasure and assigns it to the QuantityUnitOfMeasure field.
func (o *ChangePurchaseOrderShipmentLine) SetQuantityUnitOfMeasure(v PurchaseOrderLineUnitOfMeasure) {
	o.QuantityUnitOfMeasure = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ChangePurchaseOrderShipmentLine) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePurchaseOrderShipmentLine) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ChangePurchaseOrderShipmentLine) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ChangePurchaseOrderShipmentLine) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetQuantityUnitSize returns the QuantityUnitSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChangePurchaseOrderShipmentLine) GetQuantityUnitSize() int32 {
	if o == nil || IsNil(o.QuantityUnitSize.Get()) {
		var ret int32
		return ret
	}
	return *o.QuantityUnitSize.Get()
}

// GetQuantityUnitSizeOk returns a tuple with the QuantityUnitSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChangePurchaseOrderShipmentLine) GetQuantityUnitSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuantityUnitSize.Get(), o.QuantityUnitSize.IsSet()
}

// HasQuantityUnitSize returns a boolean if a field has been set.
func (o *ChangePurchaseOrderShipmentLine) HasQuantityUnitSize() bool {
	if o != nil && o.QuantityUnitSize.IsSet() {
		return true
	}

	return false
}

// SetQuantityUnitSize gets a reference to the given NullableInt32 and assigns it to the QuantityUnitSize field.
func (o *ChangePurchaseOrderShipmentLine) SetQuantityUnitSize(v int32) {
	o.QuantityUnitSize.Set(&v)
}
// SetQuantityUnitSizeNil sets the value for QuantityUnitSize to be an explicit nil
func (o *ChangePurchaseOrderShipmentLine) SetQuantityUnitSizeNil() {
	o.QuantityUnitSize.Set(nil)
}

// UnsetQuantityUnitSize ensures that no value is present for QuantityUnitSize, not even an explicit nil
func (o *ChangePurchaseOrderShipmentLine) UnsetQuantityUnitSize() {
	o.QuantityUnitSize.Unset()
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChangePurchaseOrderShipmentLine) GetExpiryDate() time.Time {
	if o == nil || IsNil(o.ExpiryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate.Get()
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChangePurchaseOrderShipmentLine) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryDate.Get(), o.ExpiryDate.IsSet()
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *ChangePurchaseOrderShipmentLine) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate.IsSet() {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given NullableTime and assigns it to the ExpiryDate field.
func (o *ChangePurchaseOrderShipmentLine) SetExpiryDate(v time.Time) {
	o.ExpiryDate.Set(&v)
}
// SetExpiryDateNil sets the value for ExpiryDate to be an explicit nil
func (o *ChangePurchaseOrderShipmentLine) SetExpiryDateNil() {
	o.ExpiryDate.Set(nil)
}

// UnsetExpiryDate ensures that no value is present for ExpiryDate, not even an explicit nil
func (o *ChangePurchaseOrderShipmentLine) UnsetExpiryDate() {
	o.ExpiryDate.Unset()
}

func (o ChangePurchaseOrderShipmentLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePurchaseOrderShipmentLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ChannelOrderNo"] = o.ChannelOrderNo
	toSerialize["MerchantProductNo"] = o.MerchantProductNo
	if !IsNil(o.QuantityUnitOfMeasure) {
		toSerialize["QuantityUnitOfMeasure"] = o.QuantityUnitOfMeasure
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	if o.QuantityUnitSize.IsSet() {
		toSerialize["QuantityUnitSize"] = o.QuantityUnitSize.Get()
	}
	if o.ExpiryDate.IsSet() {
		toSerialize["ExpiryDate"] = o.ExpiryDate.Get()
	}
	return toSerialize, nil
}

func (o *ChangePurchaseOrderShipmentLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ChannelOrderNo",
		"MerchantProductNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChangePurchaseOrderShipmentLine := _ChangePurchaseOrderShipmentLine{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChangePurchaseOrderShipmentLine)

	if err != nil {
		return err
	}

	*o = ChangePurchaseOrderShipmentLine(varChangePurchaseOrderShipmentLine)

	return err
}

type NullableChangePurchaseOrderShipmentLine struct {
	value *ChangePurchaseOrderShipmentLine
	isSet bool
}

func (v NullableChangePurchaseOrderShipmentLine) Get() *ChangePurchaseOrderShipmentLine {
	return v.value
}

func (v *NullableChangePurchaseOrderShipmentLine) Set(val *ChangePurchaseOrderShipmentLine) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePurchaseOrderShipmentLine) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePurchaseOrderShipmentLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePurchaseOrderShipmentLine(val *ChangePurchaseOrderShipmentLine) *NullableChangePurchaseOrderShipmentLine {
	return &NullableChangePurchaseOrderShipmentLine{value: val, isSet: true}
}

func (v NullableChangePurchaseOrderShipmentLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePurchaseOrderShipmentLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


