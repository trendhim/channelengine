/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"fmt"
)

// PurchaseOrderIdentifierType the model 'PurchaseOrderIdentifierType'
type PurchaseOrderIdentifierType string

// List of PurchaseOrderIdentifierType
const (
	PURCHASEORDERIDENTIFIERTYPE_PURCHASE_ORDER_ID PurchaseOrderIdentifierType = "PURCHASE_ORDER_ID"
	PURCHASEORDERIDENTIFIERTYPE_CHANNEL_PURCHASE_ORDER_NO PurchaseOrderIdentifierType = "CHANNEL_PURCHASE_ORDER_NO"
	PURCHASEORDERIDENTIFIERTYPE_MERCHANT_PURCHASE_ORDER_NO PurchaseOrderIdentifierType = "MERCHANT_PURCHASE_ORDER_NO"
)

// All allowed values of PurchaseOrderIdentifierType enum
var AllowedPurchaseOrderIdentifierTypeEnumValues = []PurchaseOrderIdentifierType{
	"PURCHASE_ORDER_ID",
	"CHANNEL_PURCHASE_ORDER_NO",
	"MERCHANT_PURCHASE_ORDER_NO",
}

func (v *PurchaseOrderIdentifierType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PurchaseOrderIdentifierType(value)
	for _, existing := range AllowedPurchaseOrderIdentifierTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PurchaseOrderIdentifierType", value)
}

// NewPurchaseOrderIdentifierTypeFromValue returns a pointer to a valid PurchaseOrderIdentifierType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPurchaseOrderIdentifierTypeFromValue(v string) (*PurchaseOrderIdentifierType, error) {
	ev := PurchaseOrderIdentifierType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PurchaseOrderIdentifierType: valid values are %v", v, AllowedPurchaseOrderIdentifierTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PurchaseOrderIdentifierType) IsValid() bool {
	for _, existing := range AllowedPurchaseOrderIdentifierTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PurchaseOrderIdentifierType value
func (v PurchaseOrderIdentifierType) Ptr() *PurchaseOrderIdentifierType {
	return &v
}

type NullablePurchaseOrderIdentifierType struct {
	value *PurchaseOrderIdentifierType
	isSet bool
}

func (v NullablePurchaseOrderIdentifierType) Get() *PurchaseOrderIdentifierType {
	return v.value
}

func (v *NullablePurchaseOrderIdentifierType) Set(val *PurchaseOrderIdentifierType) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrderIdentifierType) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrderIdentifierType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrderIdentifierType(val *PurchaseOrderIdentifierType) *NullablePurchaseOrderIdentifierType {
	return &NullablePurchaseOrderIdentifierType{value: val, isSet: true}
}

func (v NullablePurchaseOrderIdentifierType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrderIdentifierType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

