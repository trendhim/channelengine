/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"fmt"
)

// ModulesPurchaseOrderInvoiceType the model 'ModulesPurchaseOrderInvoiceType'
type ModulesPurchaseOrderInvoiceType string

// List of ModulesPurchaseOrderInvoiceType
const (
	MODULESPURCHASEORDERINVOICETYPE_INVOICE ModulesPurchaseOrderInvoiceType = "INVOICE"
	MODULESPURCHASEORDERINVOICETYPE_CREDIT_NOTE ModulesPurchaseOrderInvoiceType = "CREDIT_NOTE"
)

// All allowed values of ModulesPurchaseOrderInvoiceType enum
var AllowedModulesPurchaseOrderInvoiceTypeEnumValues = []ModulesPurchaseOrderInvoiceType{
	"INVOICE",
	"CREDIT_NOTE",
}

func (v *ModulesPurchaseOrderInvoiceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModulesPurchaseOrderInvoiceType(value)
	for _, existing := range AllowedModulesPurchaseOrderInvoiceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModulesPurchaseOrderInvoiceType", value)
}

// NewModulesPurchaseOrderInvoiceTypeFromValue returns a pointer to a valid ModulesPurchaseOrderInvoiceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModulesPurchaseOrderInvoiceTypeFromValue(v string) (*ModulesPurchaseOrderInvoiceType, error) {
	ev := ModulesPurchaseOrderInvoiceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModulesPurchaseOrderInvoiceType: valid values are %v", v, AllowedModulesPurchaseOrderInvoiceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModulesPurchaseOrderInvoiceType) IsValid() bool {
	for _, existing := range AllowedModulesPurchaseOrderInvoiceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ModulesPurchaseOrderInvoiceType value
func (v ModulesPurchaseOrderInvoiceType) Ptr() *ModulesPurchaseOrderInvoiceType {
	return &v
}

type NullableModulesPurchaseOrderInvoiceType struct {
	value *ModulesPurchaseOrderInvoiceType
	isSet bool
}

func (v NullableModulesPurchaseOrderInvoiceType) Get() *ModulesPurchaseOrderInvoiceType {
	return v.value
}

func (v *NullableModulesPurchaseOrderInvoiceType) Set(val *ModulesPurchaseOrderInvoiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableModulesPurchaseOrderInvoiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableModulesPurchaseOrderInvoiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModulesPurchaseOrderInvoiceType(val *ModulesPurchaseOrderInvoiceType) *NullableModulesPurchaseOrderInvoiceType {
	return &NullableModulesPurchaseOrderInvoiceType{value: val, isSet: true}
}

func (v NullableModulesPurchaseOrderInvoiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModulesPurchaseOrderInvoiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

