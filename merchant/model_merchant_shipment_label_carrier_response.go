/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantShipmentLabelCarrierResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantShipmentLabelCarrierResponse{}

// MerchantShipmentLabelCarrierResponse struct for MerchantShipmentLabelCarrierResponse
type MerchantShipmentLabelCarrierResponse struct {
	// The channel's name for the shipping label carrier
	Name NullableString `json:"Name,omitempty"`
	// The channel's code for the shipping label carrier
	Code NullableString `json:"Code,omitempty"`
	// Optional. Any restrictions on this carriers, e.g. weight and/or dimensions
	Restrictions NullableString `json:"Restrictions,omitempty"`
	// Optional. Price for this shipping label
	Price NullableFloat32 `json:"Price,omitempty"`
	Recommendation *ChannelCarrierRecommendationApi `json:"Recommendation,omitempty"`
	CollectionMethod *ChannelCarrierCollectionMethodApi `json:"CollectionMethod,omitempty"`
	// Optional. When to handover the package to the carrier  It is in the ISO format including the timezone offset.  E.g. 2020-10-03T18:00:00+02:00  which is 3rd Oct 2020, at 18:00 PM in Amsterdam (Summer Time aka CEST: UTC +2:00 )
	HandoverDateTime NullableTime `json:"HandoverDateTime,omitempty"`
}

// NewMerchantShipmentLabelCarrierResponse instantiates a new MerchantShipmentLabelCarrierResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantShipmentLabelCarrierResponse() *MerchantShipmentLabelCarrierResponse {
	this := MerchantShipmentLabelCarrierResponse{}
	return &this
}

// NewMerchantShipmentLabelCarrierResponseWithDefaults instantiates a new MerchantShipmentLabelCarrierResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantShipmentLabelCarrierResponseWithDefaults() *MerchantShipmentLabelCarrierResponse {
	this := MerchantShipmentLabelCarrierResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentLabelCarrierResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentLabelCarrierResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MerchantShipmentLabelCarrierResponse) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) UnsetName() {
	o.Name.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentLabelCarrierResponse) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentLabelCarrierResponse) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *MerchantShipmentLabelCarrierResponse) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) UnsetCode() {
	o.Code.Unset()
}

// GetRestrictions returns the Restrictions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentLabelCarrierResponse) GetRestrictions() string {
	if o == nil || IsNil(o.Restrictions.Get()) {
		var ret string
		return ret
	}
	return *o.Restrictions.Get()
}

// GetRestrictionsOk returns a tuple with the Restrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentLabelCarrierResponse) GetRestrictionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Restrictions.Get(), o.Restrictions.IsSet()
}

// HasRestrictions returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasRestrictions() bool {
	if o != nil && o.Restrictions.IsSet() {
		return true
	}

	return false
}

// SetRestrictions gets a reference to the given NullableString and assigns it to the Restrictions field.
func (o *MerchantShipmentLabelCarrierResponse) SetRestrictions(v string) {
	o.Restrictions.Set(&v)
}
// SetRestrictionsNil sets the value for Restrictions to be an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) SetRestrictionsNil() {
	o.Restrictions.Set(nil)
}

// UnsetRestrictions ensures that no value is present for Restrictions, not even an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) UnsetRestrictions() {
	o.Restrictions.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentLabelCarrierResponse) GetPrice() float32 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float32
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentLabelCarrierResponse) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat32 and assigns it to the Price field.
func (o *MerchantShipmentLabelCarrierResponse) SetPrice(v float32) {
	o.Price.Set(&v)
}
// SetPriceNil sets the value for Price to be an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) UnsetPrice() {
	o.Price.Unset()
}

// GetRecommendation returns the Recommendation field value if set, zero value otherwise.
func (o *MerchantShipmentLabelCarrierResponse) GetRecommendation() ChannelCarrierRecommendationApi {
	if o == nil || IsNil(o.Recommendation) {
		var ret ChannelCarrierRecommendationApi
		return ret
	}
	return *o.Recommendation
}

// GetRecommendationOk returns a tuple with the Recommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantShipmentLabelCarrierResponse) GetRecommendationOk() (*ChannelCarrierRecommendationApi, bool) {
	if o == nil || IsNil(o.Recommendation) {
		return nil, false
	}
	return o.Recommendation, true
}

// HasRecommendation returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasRecommendation() bool {
	if o != nil && !IsNil(o.Recommendation) {
		return true
	}

	return false
}

// SetRecommendation gets a reference to the given ChannelCarrierRecommendationApi and assigns it to the Recommendation field.
func (o *MerchantShipmentLabelCarrierResponse) SetRecommendation(v ChannelCarrierRecommendationApi) {
	o.Recommendation = &v
}

// GetCollectionMethod returns the CollectionMethod field value if set, zero value otherwise.
func (o *MerchantShipmentLabelCarrierResponse) GetCollectionMethod() ChannelCarrierCollectionMethodApi {
	if o == nil || IsNil(o.CollectionMethod) {
		var ret ChannelCarrierCollectionMethodApi
		return ret
	}
	return *o.CollectionMethod
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantShipmentLabelCarrierResponse) GetCollectionMethodOk() (*ChannelCarrierCollectionMethodApi, bool) {
	if o == nil || IsNil(o.CollectionMethod) {
		return nil, false
	}
	return o.CollectionMethod, true
}

// HasCollectionMethod returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasCollectionMethod() bool {
	if o != nil && !IsNil(o.CollectionMethod) {
		return true
	}

	return false
}

// SetCollectionMethod gets a reference to the given ChannelCarrierCollectionMethodApi and assigns it to the CollectionMethod field.
func (o *MerchantShipmentLabelCarrierResponse) SetCollectionMethod(v ChannelCarrierCollectionMethodApi) {
	o.CollectionMethod = &v
}

// GetHandoverDateTime returns the HandoverDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentLabelCarrierResponse) GetHandoverDateTime() time.Time {
	if o == nil || IsNil(o.HandoverDateTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.HandoverDateTime.Get()
}

// GetHandoverDateTimeOk returns a tuple with the HandoverDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentLabelCarrierResponse) GetHandoverDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.HandoverDateTime.Get(), o.HandoverDateTime.IsSet()
}

// HasHandoverDateTime returns a boolean if a field has been set.
func (o *MerchantShipmentLabelCarrierResponse) HasHandoverDateTime() bool {
	if o != nil && o.HandoverDateTime.IsSet() {
		return true
	}

	return false
}

// SetHandoverDateTime gets a reference to the given NullableTime and assigns it to the HandoverDateTime field.
func (o *MerchantShipmentLabelCarrierResponse) SetHandoverDateTime(v time.Time) {
	o.HandoverDateTime.Set(&v)
}
// SetHandoverDateTimeNil sets the value for HandoverDateTime to be an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) SetHandoverDateTimeNil() {
	o.HandoverDateTime.Set(nil)
}

// UnsetHandoverDateTime ensures that no value is present for HandoverDateTime, not even an explicit nil
func (o *MerchantShipmentLabelCarrierResponse) UnsetHandoverDateTime() {
	o.HandoverDateTime.Unset()
}

func (o MerchantShipmentLabelCarrierResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantShipmentLabelCarrierResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Code.IsSet() {
		toSerialize["Code"] = o.Code.Get()
	}
	if o.Restrictions.IsSet() {
		toSerialize["Restrictions"] = o.Restrictions.Get()
	}
	if o.Price.IsSet() {
		toSerialize["Price"] = o.Price.Get()
	}
	if !IsNil(o.Recommendation) {
		toSerialize["Recommendation"] = o.Recommendation
	}
	if !IsNil(o.CollectionMethod) {
		toSerialize["CollectionMethod"] = o.CollectionMethod
	}
	if o.HandoverDateTime.IsSet() {
		toSerialize["HandoverDateTime"] = o.HandoverDateTime.Get()
	}
	return toSerialize, nil
}

type NullableMerchantShipmentLabelCarrierResponse struct {
	value *MerchantShipmentLabelCarrierResponse
	isSet bool
}

func (v NullableMerchantShipmentLabelCarrierResponse) Get() *MerchantShipmentLabelCarrierResponse {
	return v.value
}

func (v *NullableMerchantShipmentLabelCarrierResponse) Set(val *MerchantShipmentLabelCarrierResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantShipmentLabelCarrierResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantShipmentLabelCarrierResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantShipmentLabelCarrierResponse(val *MerchantShipmentLabelCarrierResponse) *NullableMerchantShipmentLabelCarrierResponse {
	return &NullableMerchantShipmentLabelCarrierResponse{value: val, isSet: true}
}

func (v NullableMerchantShipmentLabelCarrierResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantShipmentLabelCarrierResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


