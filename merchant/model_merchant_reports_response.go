/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantReportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantReportsResponse{}

// MerchantReportsResponse struct for MerchantReportsResponse
type MerchantReportsResponse struct {
	Id *int32 `json:"Id,omitempty"`
	ChannelSettlementNo NullableString `json:"ChannelSettlementNo,omitempty"`
	ChannelSellerNo NullableString `json:"ChannelSellerNo,omitempty"`
	ChannelId NullableInt32 `json:"ChannelId,omitempty"`
	StartDate *time.Time `json:"StartDate,omitempty"`
	EndDate *time.Time `json:"EndDate,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	TransactionsCount *int32 `json:"TransactionsCount,omitempty"`
}

// NewMerchantReportsResponse instantiates a new MerchantReportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantReportsResponse() *MerchantReportsResponse {
	this := MerchantReportsResponse{}
	return &this
}

// NewMerchantReportsResponseWithDefaults instantiates a new MerchantReportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantReportsResponseWithDefaults() *MerchantReportsResponse {
	this := MerchantReportsResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MerchantReportsResponse) SetId(v int32) {
	o.Id = &v
}

// GetChannelSettlementNo returns the ChannelSettlementNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantReportsResponse) GetChannelSettlementNo() string {
	if o == nil || IsNil(o.ChannelSettlementNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelSettlementNo.Get()
}

// GetChannelSettlementNoOk returns a tuple with the ChannelSettlementNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantReportsResponse) GetChannelSettlementNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelSettlementNo.Get(), o.ChannelSettlementNo.IsSet()
}

// HasChannelSettlementNo returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasChannelSettlementNo() bool {
	if o != nil && o.ChannelSettlementNo.IsSet() {
		return true
	}

	return false
}

// SetChannelSettlementNo gets a reference to the given NullableString and assigns it to the ChannelSettlementNo field.
func (o *MerchantReportsResponse) SetChannelSettlementNo(v string) {
	o.ChannelSettlementNo.Set(&v)
}
// SetChannelSettlementNoNil sets the value for ChannelSettlementNo to be an explicit nil
func (o *MerchantReportsResponse) SetChannelSettlementNoNil() {
	o.ChannelSettlementNo.Set(nil)
}

// UnsetChannelSettlementNo ensures that no value is present for ChannelSettlementNo, not even an explicit nil
func (o *MerchantReportsResponse) UnsetChannelSettlementNo() {
	o.ChannelSettlementNo.Unset()
}

// GetChannelSellerNo returns the ChannelSellerNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantReportsResponse) GetChannelSellerNo() string {
	if o == nil || IsNil(o.ChannelSellerNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelSellerNo.Get()
}

// GetChannelSellerNoOk returns a tuple with the ChannelSellerNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantReportsResponse) GetChannelSellerNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelSellerNo.Get(), o.ChannelSellerNo.IsSet()
}

// HasChannelSellerNo returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasChannelSellerNo() bool {
	if o != nil && o.ChannelSellerNo.IsSet() {
		return true
	}

	return false
}

// SetChannelSellerNo gets a reference to the given NullableString and assigns it to the ChannelSellerNo field.
func (o *MerchantReportsResponse) SetChannelSellerNo(v string) {
	o.ChannelSellerNo.Set(&v)
}
// SetChannelSellerNoNil sets the value for ChannelSellerNo to be an explicit nil
func (o *MerchantReportsResponse) SetChannelSellerNoNil() {
	o.ChannelSellerNo.Set(nil)
}

// UnsetChannelSellerNo ensures that no value is present for ChannelSellerNo, not even an explicit nil
func (o *MerchantReportsResponse) UnsetChannelSellerNo() {
	o.ChannelSellerNo.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantReportsResponse) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantReportsResponse) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableInt32 and assigns it to the ChannelId field.
func (o *MerchantReportsResponse) SetChannelId(v int32) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *MerchantReportsResponse) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *MerchantReportsResponse) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *MerchantReportsResponse) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *MerchantReportsResponse) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MerchantReportsResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *MerchantReportsResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetTransactionsCount returns the TransactionsCount field value if set, zero value otherwise.
func (o *MerchantReportsResponse) GetTransactionsCount() int32 {
	if o == nil || IsNil(o.TransactionsCount) {
		var ret int32
		return ret
	}
	return *o.TransactionsCount
}

// GetTransactionsCountOk returns a tuple with the TransactionsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantReportsResponse) GetTransactionsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionsCount) {
		return nil, false
	}
	return o.TransactionsCount, true
}

// HasTransactionsCount returns a boolean if a field has been set.
func (o *MerchantReportsResponse) HasTransactionsCount() bool {
	if o != nil && !IsNil(o.TransactionsCount) {
		return true
	}

	return false
}

// SetTransactionsCount gets a reference to the given int32 and assigns it to the TransactionsCount field.
func (o *MerchantReportsResponse) SetTransactionsCount(v int32) {
	o.TransactionsCount = &v
}

func (o MerchantReportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantReportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.ChannelSettlementNo.IsSet() {
		toSerialize["ChannelSettlementNo"] = o.ChannelSettlementNo.Get()
	}
	if o.ChannelSellerNo.IsSet() {
		toSerialize["ChannelSellerNo"] = o.ChannelSellerNo.Get()
	}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["EndDate"] = o.EndDate
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.TransactionsCount) {
		toSerialize["TransactionsCount"] = o.TransactionsCount
	}
	return toSerialize, nil
}

type NullableMerchantReportsResponse struct {
	value *MerchantReportsResponse
	isSet bool
}

func (v NullableMerchantReportsResponse) Get() *MerchantReportsResponse {
	return v.value
}

func (v *NullableMerchantReportsResponse) Set(val *MerchantReportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantReportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantReportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantReportsResponse(val *MerchantReportsResponse) *NullableMerchantReportsResponse {
	return &NullableMerchantReportsResponse{value: val, isSet: true}
}

func (v NullableMerchantReportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantReportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


