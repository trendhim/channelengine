/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the IPurchaseOrderShipmentByFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPurchaseOrderShipmentByFilter{}

// IPurchaseOrderShipmentByFilter struct for IPurchaseOrderShipmentByFilter
type IPurchaseOrderShipmentByFilter struct {
	// ChannelEngine identifier of the shipment
	Id NullableInt32 `json:"Id,omitempty"`
	// The number the merchant uses to id this PO shipment
	MerchantShipmentNo NullableString `json:"MerchantShipmentNo,omitempty"`
	// The number the channel uses to id this PO shipment
	ChannelShipmentNo NullableString `json:"ChannelShipmentNo,omitempty"`
	ShipmentType *ShipmentType `json:"ShipmentType,omitempty"`
	// When the shipment was shipped
	ShippedDate *time.Time `json:"ShippedDate,omitempty"`
	// Estimated delivery time in the channel's warehouse
	EstimatedDeliveryDate *time.Time `json:"EstimatedDeliveryDate,omitempty"`
	// Name of the carrier
	CarrierName NullableString `json:"CarrierName,omitempty"`
	// The number the carrier uses to id this PO shipment
	CarrierShipmentNo NullableString `json:"CarrierShipmentNo,omitempty"`
	// Bill of Lading number (not unique for a shipment)
	BillOfLadingNumber NullableString `json:"BillOfLadingNumber,omitempty"`
	ShipmentWeightUnitOfMeasure *WeightUnitOfMeasure `json:"ShipmentWeightUnitOfMeasure,omitempty"`
	// The shipment's weight
	ShipmentWeight NullableFloat32 `json:"ShipmentWeight,omitempty"`
	ShipmentVolumeUnitOfMeasure *VolumeUnitOfMeasure `json:"ShipmentVolumeUnitOfMeasure,omitempty"`
	// The shipment's volume
	ShipmentVolume NullableFloat32 `json:"ShipmentVolume,omitempty"`
	// The last time the shipment was updated by the merchant
	LastMerchantUpdatedAt *time.Time `json:"LastMerchantUpdatedAt,omitempty"`
	// The last time the shipment was exported to the channel
	LastExportedAt NullableTime `json:"LastExportedAt,omitempty"`
	LastExportStatus *PurchaseOrderRelatedItemExportStatus `json:"LastExportStatus,omitempty"`
	// The products in this PO shipment
	Lines []IPurchaseOrderShipmentLineByFilter `json:"Lines,omitempty"`
}

// NewIPurchaseOrderShipmentByFilter instantiates a new IPurchaseOrderShipmentByFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPurchaseOrderShipmentByFilter() *IPurchaseOrderShipmentByFilter {
	this := IPurchaseOrderShipmentByFilter{}
	return &this
}

// NewIPurchaseOrderShipmentByFilterWithDefaults instantiates a new IPurchaseOrderShipmentByFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPurchaseOrderShipmentByFilterWithDefaults() *IPurchaseOrderShipmentByFilter {
	this := IPurchaseOrderShipmentByFilter{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *IPurchaseOrderShipmentByFilter) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetId() {
	o.Id.Unset()
}

// GetMerchantShipmentNo returns the MerchantShipmentNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetMerchantShipmentNo() string {
	if o == nil || IsNil(o.MerchantShipmentNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantShipmentNo.Get()
}

// GetMerchantShipmentNoOk returns a tuple with the MerchantShipmentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetMerchantShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantShipmentNo.Get(), o.MerchantShipmentNo.IsSet()
}

// HasMerchantShipmentNo returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasMerchantShipmentNo() bool {
	if o != nil && o.MerchantShipmentNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantShipmentNo gets a reference to the given NullableString and assigns it to the MerchantShipmentNo field.
func (o *IPurchaseOrderShipmentByFilter) SetMerchantShipmentNo(v string) {
	o.MerchantShipmentNo.Set(&v)
}
// SetMerchantShipmentNoNil sets the value for MerchantShipmentNo to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetMerchantShipmentNoNil() {
	o.MerchantShipmentNo.Set(nil)
}

// UnsetMerchantShipmentNo ensures that no value is present for MerchantShipmentNo, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetMerchantShipmentNo() {
	o.MerchantShipmentNo.Unset()
}

// GetChannelShipmentNo returns the ChannelShipmentNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetChannelShipmentNo() string {
	if o == nil || IsNil(o.ChannelShipmentNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelShipmentNo.Get()
}

// GetChannelShipmentNoOk returns a tuple with the ChannelShipmentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetChannelShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelShipmentNo.Get(), o.ChannelShipmentNo.IsSet()
}

// HasChannelShipmentNo returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasChannelShipmentNo() bool {
	if o != nil && o.ChannelShipmentNo.IsSet() {
		return true
	}

	return false
}

// SetChannelShipmentNo gets a reference to the given NullableString and assigns it to the ChannelShipmentNo field.
func (o *IPurchaseOrderShipmentByFilter) SetChannelShipmentNo(v string) {
	o.ChannelShipmentNo.Set(&v)
}
// SetChannelShipmentNoNil sets the value for ChannelShipmentNo to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetChannelShipmentNoNil() {
	o.ChannelShipmentNo.Set(nil)
}

// UnsetChannelShipmentNo ensures that no value is present for ChannelShipmentNo, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetChannelShipmentNo() {
	o.ChannelShipmentNo.Unset()
}

// GetShipmentType returns the ShipmentType field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentType() ShipmentType {
	if o == nil || IsNil(o.ShipmentType) {
		var ret ShipmentType
		return ret
	}
	return *o.ShipmentType
}

// GetShipmentTypeOk returns a tuple with the ShipmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentTypeOk() (*ShipmentType, bool) {
	if o == nil || IsNil(o.ShipmentType) {
		return nil, false
	}
	return o.ShipmentType, true
}

// HasShipmentType returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShipmentType() bool {
	if o != nil && !IsNil(o.ShipmentType) {
		return true
	}

	return false
}

// SetShipmentType gets a reference to the given ShipmentType and assigns it to the ShipmentType field.
func (o *IPurchaseOrderShipmentByFilter) SetShipmentType(v ShipmentType) {
	o.ShipmentType = &v
}

// GetShippedDate returns the ShippedDate field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetShippedDate() time.Time {
	if o == nil || IsNil(o.ShippedDate) {
		var ret time.Time
		return ret
	}
	return *o.ShippedDate
}

// GetShippedDateOk returns a tuple with the ShippedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetShippedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ShippedDate) {
		return nil, false
	}
	return o.ShippedDate, true
}

// HasShippedDate returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShippedDate() bool {
	if o != nil && !IsNil(o.ShippedDate) {
		return true
	}

	return false
}

// SetShippedDate gets a reference to the given time.Time and assigns it to the ShippedDate field.
func (o *IPurchaseOrderShipmentByFilter) SetShippedDate(v time.Time) {
	o.ShippedDate = &v
}

// GetEstimatedDeliveryDate returns the EstimatedDeliveryDate field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetEstimatedDeliveryDate() time.Time {
	if o == nil || IsNil(o.EstimatedDeliveryDate) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedDeliveryDate
}

// GetEstimatedDeliveryDateOk returns a tuple with the EstimatedDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetEstimatedDeliveryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedDeliveryDate) {
		return nil, false
	}
	return o.EstimatedDeliveryDate, true
}

// HasEstimatedDeliveryDate returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasEstimatedDeliveryDate() bool {
	if o != nil && !IsNil(o.EstimatedDeliveryDate) {
		return true
	}

	return false
}

// SetEstimatedDeliveryDate gets a reference to the given time.Time and assigns it to the EstimatedDeliveryDate field.
func (o *IPurchaseOrderShipmentByFilter) SetEstimatedDeliveryDate(v time.Time) {
	o.EstimatedDeliveryDate = &v
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetCarrierName() string {
	if o == nil || IsNil(o.CarrierName.Get()) {
		var ret string
		return ret
	}
	return *o.CarrierName.Get()
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetCarrierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CarrierName.Get(), o.CarrierName.IsSet()
}

// HasCarrierName returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasCarrierName() bool {
	if o != nil && o.CarrierName.IsSet() {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given NullableString and assigns it to the CarrierName field.
func (o *IPurchaseOrderShipmentByFilter) SetCarrierName(v string) {
	o.CarrierName.Set(&v)
}
// SetCarrierNameNil sets the value for CarrierName to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetCarrierNameNil() {
	o.CarrierName.Set(nil)
}

// UnsetCarrierName ensures that no value is present for CarrierName, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetCarrierName() {
	o.CarrierName.Unset()
}

// GetCarrierShipmentNo returns the CarrierShipmentNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetCarrierShipmentNo() string {
	if o == nil || IsNil(o.CarrierShipmentNo.Get()) {
		var ret string
		return ret
	}
	return *o.CarrierShipmentNo.Get()
}

// GetCarrierShipmentNoOk returns a tuple with the CarrierShipmentNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetCarrierShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CarrierShipmentNo.Get(), o.CarrierShipmentNo.IsSet()
}

// HasCarrierShipmentNo returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasCarrierShipmentNo() bool {
	if o != nil && o.CarrierShipmentNo.IsSet() {
		return true
	}

	return false
}

// SetCarrierShipmentNo gets a reference to the given NullableString and assigns it to the CarrierShipmentNo field.
func (o *IPurchaseOrderShipmentByFilter) SetCarrierShipmentNo(v string) {
	o.CarrierShipmentNo.Set(&v)
}
// SetCarrierShipmentNoNil sets the value for CarrierShipmentNo to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetCarrierShipmentNoNil() {
	o.CarrierShipmentNo.Set(nil)
}

// UnsetCarrierShipmentNo ensures that no value is present for CarrierShipmentNo, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetCarrierShipmentNo() {
	o.CarrierShipmentNo.Unset()
}

// GetBillOfLadingNumber returns the BillOfLadingNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetBillOfLadingNumber() string {
	if o == nil || IsNil(o.BillOfLadingNumber.Get()) {
		var ret string
		return ret
	}
	return *o.BillOfLadingNumber.Get()
}

// GetBillOfLadingNumberOk returns a tuple with the BillOfLadingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetBillOfLadingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillOfLadingNumber.Get(), o.BillOfLadingNumber.IsSet()
}

// HasBillOfLadingNumber returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasBillOfLadingNumber() bool {
	if o != nil && o.BillOfLadingNumber.IsSet() {
		return true
	}

	return false
}

// SetBillOfLadingNumber gets a reference to the given NullableString and assigns it to the BillOfLadingNumber field.
func (o *IPurchaseOrderShipmentByFilter) SetBillOfLadingNumber(v string) {
	o.BillOfLadingNumber.Set(&v)
}
// SetBillOfLadingNumberNil sets the value for BillOfLadingNumber to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetBillOfLadingNumberNil() {
	o.BillOfLadingNumber.Set(nil)
}

// UnsetBillOfLadingNumber ensures that no value is present for BillOfLadingNumber, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetBillOfLadingNumber() {
	o.BillOfLadingNumber.Unset()
}

// GetShipmentWeightUnitOfMeasure returns the ShipmentWeightUnitOfMeasure field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentWeightUnitOfMeasure() WeightUnitOfMeasure {
	if o == nil || IsNil(o.ShipmentWeightUnitOfMeasure) {
		var ret WeightUnitOfMeasure
		return ret
	}
	return *o.ShipmentWeightUnitOfMeasure
}

// GetShipmentWeightUnitOfMeasureOk returns a tuple with the ShipmentWeightUnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentWeightUnitOfMeasureOk() (*WeightUnitOfMeasure, bool) {
	if o == nil || IsNil(o.ShipmentWeightUnitOfMeasure) {
		return nil, false
	}
	return o.ShipmentWeightUnitOfMeasure, true
}

// HasShipmentWeightUnitOfMeasure returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShipmentWeightUnitOfMeasure() bool {
	if o != nil && !IsNil(o.ShipmentWeightUnitOfMeasure) {
		return true
	}

	return false
}

// SetShipmentWeightUnitOfMeasure gets a reference to the given WeightUnitOfMeasure and assigns it to the ShipmentWeightUnitOfMeasure field.
func (o *IPurchaseOrderShipmentByFilter) SetShipmentWeightUnitOfMeasure(v WeightUnitOfMeasure) {
	o.ShipmentWeightUnitOfMeasure = &v
}

// GetShipmentWeight returns the ShipmentWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetShipmentWeight() float32 {
	if o == nil || IsNil(o.ShipmentWeight.Get()) {
		var ret float32
		return ret
	}
	return *o.ShipmentWeight.Get()
}

// GetShipmentWeightOk returns a tuple with the ShipmentWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetShipmentWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentWeight.Get(), o.ShipmentWeight.IsSet()
}

// HasShipmentWeight returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShipmentWeight() bool {
	if o != nil && o.ShipmentWeight.IsSet() {
		return true
	}

	return false
}

// SetShipmentWeight gets a reference to the given NullableFloat32 and assigns it to the ShipmentWeight field.
func (o *IPurchaseOrderShipmentByFilter) SetShipmentWeight(v float32) {
	o.ShipmentWeight.Set(&v)
}
// SetShipmentWeightNil sets the value for ShipmentWeight to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetShipmentWeightNil() {
	o.ShipmentWeight.Set(nil)
}

// UnsetShipmentWeight ensures that no value is present for ShipmentWeight, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetShipmentWeight() {
	o.ShipmentWeight.Unset()
}

// GetShipmentVolumeUnitOfMeasure returns the ShipmentVolumeUnitOfMeasure field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentVolumeUnitOfMeasure() VolumeUnitOfMeasure {
	if o == nil || IsNil(o.ShipmentVolumeUnitOfMeasure) {
		var ret VolumeUnitOfMeasure
		return ret
	}
	return *o.ShipmentVolumeUnitOfMeasure
}

// GetShipmentVolumeUnitOfMeasureOk returns a tuple with the ShipmentVolumeUnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetShipmentVolumeUnitOfMeasureOk() (*VolumeUnitOfMeasure, bool) {
	if o == nil || IsNil(o.ShipmentVolumeUnitOfMeasure) {
		return nil, false
	}
	return o.ShipmentVolumeUnitOfMeasure, true
}

// HasShipmentVolumeUnitOfMeasure returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShipmentVolumeUnitOfMeasure() bool {
	if o != nil && !IsNil(o.ShipmentVolumeUnitOfMeasure) {
		return true
	}

	return false
}

// SetShipmentVolumeUnitOfMeasure gets a reference to the given VolumeUnitOfMeasure and assigns it to the ShipmentVolumeUnitOfMeasure field.
func (o *IPurchaseOrderShipmentByFilter) SetShipmentVolumeUnitOfMeasure(v VolumeUnitOfMeasure) {
	o.ShipmentVolumeUnitOfMeasure = &v
}

// GetShipmentVolume returns the ShipmentVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetShipmentVolume() float32 {
	if o == nil || IsNil(o.ShipmentVolume.Get()) {
		var ret float32
		return ret
	}
	return *o.ShipmentVolume.Get()
}

// GetShipmentVolumeOk returns a tuple with the ShipmentVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetShipmentVolumeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentVolume.Get(), o.ShipmentVolume.IsSet()
}

// HasShipmentVolume returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasShipmentVolume() bool {
	if o != nil && o.ShipmentVolume.IsSet() {
		return true
	}

	return false
}

// SetShipmentVolume gets a reference to the given NullableFloat32 and assigns it to the ShipmentVolume field.
func (o *IPurchaseOrderShipmentByFilter) SetShipmentVolume(v float32) {
	o.ShipmentVolume.Set(&v)
}
// SetShipmentVolumeNil sets the value for ShipmentVolume to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetShipmentVolumeNil() {
	o.ShipmentVolume.Set(nil)
}

// UnsetShipmentVolume ensures that no value is present for ShipmentVolume, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetShipmentVolume() {
	o.ShipmentVolume.Unset()
}

// GetLastMerchantUpdatedAt returns the LastMerchantUpdatedAt field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetLastMerchantUpdatedAt() time.Time {
	if o == nil || IsNil(o.LastMerchantUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastMerchantUpdatedAt
}

// GetLastMerchantUpdatedAtOk returns a tuple with the LastMerchantUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetLastMerchantUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMerchantUpdatedAt) {
		return nil, false
	}
	return o.LastMerchantUpdatedAt, true
}

// HasLastMerchantUpdatedAt returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasLastMerchantUpdatedAt() bool {
	if o != nil && !IsNil(o.LastMerchantUpdatedAt) {
		return true
	}

	return false
}

// SetLastMerchantUpdatedAt gets a reference to the given time.Time and assigns it to the LastMerchantUpdatedAt field.
func (o *IPurchaseOrderShipmentByFilter) SetLastMerchantUpdatedAt(v time.Time) {
	o.LastMerchantUpdatedAt = &v
}

// GetLastExportedAt returns the LastExportedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetLastExportedAt() time.Time {
	if o == nil || IsNil(o.LastExportedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastExportedAt.Get()
}

// GetLastExportedAtOk returns a tuple with the LastExportedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetLastExportedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastExportedAt.Get(), o.LastExportedAt.IsSet()
}

// HasLastExportedAt returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasLastExportedAt() bool {
	if o != nil && o.LastExportedAt.IsSet() {
		return true
	}

	return false
}

// SetLastExportedAt gets a reference to the given NullableTime and assigns it to the LastExportedAt field.
func (o *IPurchaseOrderShipmentByFilter) SetLastExportedAt(v time.Time) {
	o.LastExportedAt.Set(&v)
}
// SetLastExportedAtNil sets the value for LastExportedAt to be an explicit nil
func (o *IPurchaseOrderShipmentByFilter) SetLastExportedAtNil() {
	o.LastExportedAt.Set(nil)
}

// UnsetLastExportedAt ensures that no value is present for LastExportedAt, not even an explicit nil
func (o *IPurchaseOrderShipmentByFilter) UnsetLastExportedAt() {
	o.LastExportedAt.Unset()
}

// GetLastExportStatus returns the LastExportStatus field value if set, zero value otherwise.
func (o *IPurchaseOrderShipmentByFilter) GetLastExportStatus() PurchaseOrderRelatedItemExportStatus {
	if o == nil || IsNil(o.LastExportStatus) {
		var ret PurchaseOrderRelatedItemExportStatus
		return ret
	}
	return *o.LastExportStatus
}

// GetLastExportStatusOk returns a tuple with the LastExportStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderShipmentByFilter) GetLastExportStatusOk() (*PurchaseOrderRelatedItemExportStatus, bool) {
	if o == nil || IsNil(o.LastExportStatus) {
		return nil, false
	}
	return o.LastExportStatus, true
}

// HasLastExportStatus returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasLastExportStatus() bool {
	if o != nil && !IsNil(o.LastExportStatus) {
		return true
	}

	return false
}

// SetLastExportStatus gets a reference to the given PurchaseOrderRelatedItemExportStatus and assigns it to the LastExportStatus field.
func (o *IPurchaseOrderShipmentByFilter) SetLastExportStatus(v PurchaseOrderRelatedItemExportStatus) {
	o.LastExportStatus = &v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderShipmentByFilter) GetLines() []IPurchaseOrderShipmentLineByFilter {
	if o == nil {
		var ret []IPurchaseOrderShipmentLineByFilter
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderShipmentByFilter) GetLinesOk() ([]IPurchaseOrderShipmentLineByFilter, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *IPurchaseOrderShipmentByFilter) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []IPurchaseOrderShipmentLineByFilter and assigns it to the Lines field.
func (o *IPurchaseOrderShipmentByFilter) SetLines(v []IPurchaseOrderShipmentLineByFilter) {
	o.Lines = v
}

func (o IPurchaseOrderShipmentByFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPurchaseOrderShipmentByFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.MerchantShipmentNo.IsSet() {
		toSerialize["MerchantShipmentNo"] = o.MerchantShipmentNo.Get()
	}
	if o.ChannelShipmentNo.IsSet() {
		toSerialize["ChannelShipmentNo"] = o.ChannelShipmentNo.Get()
	}
	if !IsNil(o.ShipmentType) {
		toSerialize["ShipmentType"] = o.ShipmentType
	}
	if !IsNil(o.ShippedDate) {
		toSerialize["ShippedDate"] = o.ShippedDate
	}
	if !IsNil(o.EstimatedDeliveryDate) {
		toSerialize["EstimatedDeliveryDate"] = o.EstimatedDeliveryDate
	}
	if o.CarrierName.IsSet() {
		toSerialize["CarrierName"] = o.CarrierName.Get()
	}
	if o.CarrierShipmentNo.IsSet() {
		toSerialize["CarrierShipmentNo"] = o.CarrierShipmentNo.Get()
	}
	if o.BillOfLadingNumber.IsSet() {
		toSerialize["BillOfLadingNumber"] = o.BillOfLadingNumber.Get()
	}
	if !IsNil(o.ShipmentWeightUnitOfMeasure) {
		toSerialize["ShipmentWeightUnitOfMeasure"] = o.ShipmentWeightUnitOfMeasure
	}
	if o.ShipmentWeight.IsSet() {
		toSerialize["ShipmentWeight"] = o.ShipmentWeight.Get()
	}
	if !IsNil(o.ShipmentVolumeUnitOfMeasure) {
		toSerialize["ShipmentVolumeUnitOfMeasure"] = o.ShipmentVolumeUnitOfMeasure
	}
	if o.ShipmentVolume.IsSet() {
		toSerialize["ShipmentVolume"] = o.ShipmentVolume.Get()
	}
	if !IsNil(o.LastMerchantUpdatedAt) {
		toSerialize["LastMerchantUpdatedAt"] = o.LastMerchantUpdatedAt
	}
	if o.LastExportedAt.IsSet() {
		toSerialize["LastExportedAt"] = o.LastExportedAt.Get()
	}
	if !IsNil(o.LastExportStatus) {
		toSerialize["LastExportStatus"] = o.LastExportStatus
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	return toSerialize, nil
}

type NullableIPurchaseOrderShipmentByFilter struct {
	value *IPurchaseOrderShipmentByFilter
	isSet bool
}

func (v NullableIPurchaseOrderShipmentByFilter) Get() *IPurchaseOrderShipmentByFilter {
	return v.value
}

func (v *NullableIPurchaseOrderShipmentByFilter) Set(val *IPurchaseOrderShipmentByFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIPurchaseOrderShipmentByFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIPurchaseOrderShipmentByFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPurchaseOrderShipmentByFilter(val *IPurchaseOrderShipmentByFilter) *NullableIPurchaseOrderShipmentByFilter {
	return &NullableIPurchaseOrderShipmentByFilter{value: val, isSet: true}
}

func (v NullableIPurchaseOrderShipmentByFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPurchaseOrderShipmentByFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


