/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantOfferGetStockResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantOfferGetStockResponse{}

// MerchantOfferGetStockResponse struct for MerchantOfferGetStockResponse
type MerchantOfferGetStockResponse struct {
	// The product SKU.
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	// The ChannelEngine id of the stock location.
	StockLocationId *int32 `json:"StockLocationId,omitempty"`
	// The quantity of products in stock at the stock location.
	Stock *int32 `json:"Stock,omitempty"`
	// The timestamp of the last stock update for the stock location.
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
}

// NewMerchantOfferGetStockResponse instantiates a new MerchantOfferGetStockResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantOfferGetStockResponse() *MerchantOfferGetStockResponse {
	this := MerchantOfferGetStockResponse{}
	return &this
}

// NewMerchantOfferGetStockResponseWithDefaults instantiates a new MerchantOfferGetStockResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantOfferGetStockResponseWithDefaults() *MerchantOfferGetStockResponse {
	this := MerchantOfferGetStockResponse{}
	return &this
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantOfferGetStockResponse) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantOfferGetStockResponse) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantOfferGetStockResponse) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *MerchantOfferGetStockResponse) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *MerchantOfferGetStockResponse) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *MerchantOfferGetStockResponse) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetStockLocationId returns the StockLocationId field value if set, zero value otherwise.
func (o *MerchantOfferGetStockResponse) GetStockLocationId() int32 {
	if o == nil || IsNil(o.StockLocationId) {
		var ret int32
		return ret
	}
	return *o.StockLocationId
}

// GetStockLocationIdOk returns a tuple with the StockLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOfferGetStockResponse) GetStockLocationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StockLocationId) {
		return nil, false
	}
	return o.StockLocationId, true
}

// HasStockLocationId returns a boolean if a field has been set.
func (o *MerchantOfferGetStockResponse) HasStockLocationId() bool {
	if o != nil && !IsNil(o.StockLocationId) {
		return true
	}

	return false
}

// SetStockLocationId gets a reference to the given int32 and assigns it to the StockLocationId field.
func (o *MerchantOfferGetStockResponse) SetStockLocationId(v int32) {
	o.StockLocationId = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *MerchantOfferGetStockResponse) GetStock() int32 {
	if o == nil || IsNil(o.Stock) {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOfferGetStockResponse) GetStockOk() (*int32, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *MerchantOfferGetStockResponse) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *MerchantOfferGetStockResponse) SetStock(v int32) {
	o.Stock = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MerchantOfferGetStockResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantOfferGetStockResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MerchantOfferGetStockResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *MerchantOfferGetStockResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o MerchantOfferGetStockResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantOfferGetStockResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	if !IsNil(o.StockLocationId) {
		toSerialize["StockLocationId"] = o.StockLocationId
	}
	if !IsNil(o.Stock) {
		toSerialize["Stock"] = o.Stock
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableMerchantOfferGetStockResponse struct {
	value *MerchantOfferGetStockResponse
	isSet bool
}

func (v NullableMerchantOfferGetStockResponse) Get() *MerchantOfferGetStockResponse {
	return v.value
}

func (v *NullableMerchantOfferGetStockResponse) Set(val *MerchantOfferGetStockResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantOfferGetStockResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantOfferGetStockResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantOfferGetStockResponse(val *MerchantOfferGetStockResponse) *NullableMerchantOfferGetStockResponse {
	return &NullableMerchantOfferGetStockResponse{value: val, isSet: true}
}

func (v NullableMerchantOfferGetStockResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantOfferGetStockResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


