/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"fmt"
)

// NotificationType the model 'NotificationType'
type NotificationType string

// List of NotificationType
const (
	NOTIFICATIONTYPE_CHANNEL_ORDER_ANONYMIZED_BY_REQUEST NotificationType = "CHANNEL_ORDER_ANONYMIZED_BY_REQUEST"
	NOTIFICATIONTYPE_CHANNEL_ORDER_ANONYMIZED_AUTOMATICALLY NotificationType = "CHANNEL_ORDER_ANONYMIZED_AUTOMATICALLY"
	NOTIFICATIONTYPE_CHANNEL_ORDER_CANCELLATION_REQUEST_NEW NotificationType = "CHANNEL_ORDER_CANCELLATION_REQUEST_NEW"
	NOTIFICATIONTYPE_CHANNEL_ORDER_CORRECTION_NEEDED NotificationType = "CHANNEL_ORDER_CORRECTION_NEEDED"
	NOTIFICATIONTYPE_CHANNEL_ORDER_DUPLICATE_LINE NotificationType = "CHANNEL_ORDER_DUPLICATE_LINE"
	NOTIFICATIONTYPE_CHANNEL_ORDER_INVOICE_SEND_FAILED NotificationType = "CHANNEL_ORDER_INVOICE_SEND_FAILED"
	NOTIFICATIONTYPE_CHANNEL_ORDER_IMPORT_FAILED NotificationType = "CHANNEL_ORDER_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_ORDER_NEW NotificationType = "CHANNEL_ORDER_NEW"
	NOTIFICATIONTYPE_CHANNEL_ORDER_OVERDUE NotificationType = "CHANNEL_ORDER_OVERDUE"
	NOTIFICATIONTYPE_CHANNEL_PRODUCT_DATA_EXPORT_FAILED NotificationType = "CHANNEL_PRODUCT_DATA_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_PRODUCT_DATA_IMPORT_FAILED NotificationType = "CHANNEL_PRODUCT_DATA_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_RETURN_EXPORT_FAILED NotificationType = "CHANNEL_RETURN_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_RETURN_IMPORT_FAILED NotificationType = "CHANNEL_RETURN_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_RETURN_NEW NotificationType = "CHANNEL_RETURN_NEW"
	NOTIFICATIONTYPE_CHANNEL_RETURN_OVERDUE NotificationType = "CHANNEL_RETURN_OVERDUE"
	NOTIFICATIONTYPE_CHANNEL_REFUND_EXPORT_FAILED NotificationType = "CHANNEL_REFUND_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_SHIPMENT_IMPORT_FAILED NotificationType = "CHANNEL_SHIPMENT_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_SHIPMENT_IMPORT_STATUS_FAILED NotificationType = "CHANNEL_SHIPMENT_IMPORT_STATUS_FAILED"
	NOTIFICATIONTYPE_CHANNEL_SHIPMENT_EXPORT_FAILED NotificationType = "CHANNEL_SHIPMENT_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_SHIPMENT_IMPORT_MISSING_LINE_FAILED NotificationType = "CHANNEL_SHIPMENT_IMPORT_MISSING_LINE_FAILED"
	NOTIFICATIONTYPE_CHANNEL_FULFILLMENT_SHIPMENT_IMPORT_STATUS_FAILED NotificationType = "CHANNEL_FULFILLMENT_SHIPMENT_IMPORT_STATUS_FAILED"
	NOTIFICATIONTYPE_CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_FAILED NotificationType = "CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_SUCCEEDED NotificationType = "CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_SUCCEEDED"
	NOTIFICATIONTYPE_CHANNEL_FULFILLMENT_SHIPMENT_LINE_FOR_CLOSED_ORDER NotificationType = "CHANNEL_FULFILLMENT_SHIPMENT_LINE_FOR_CLOSED_ORDER"
	NOTIFICATIONTYPE_CHANNELENGINE_SUPPORT_NOTIFICATION NotificationType = "CHANNELENGINE_SUPPORT_NOTIFICATION"
	NOTIFICATIONTYPE_CHANNELENGINE_WEBHOOK_RQUEST_FAILED NotificationType = "CHANNELENGINE_WEBHOOK_RQUEST_FAILED"
	NOTIFICATIONTYPE_FEED_NO_PRODUCTS_FAILED NotificationType = "FEED_NO_PRODUCTS_FAILED"
	NOTIFICATIONTYPE_FEED_IMPORT_FAILED NotificationType = "FEED_IMPORT_FAILED"
	NOTIFICATIONTYPE_GLOBAL_MESSAGE NotificationType = "GLOBAL_MESSAGE"
	NOTIFICATIONTYPE_MERCHANT_ORDER_EXPORT_FAILED NotificationType = "MERCHANT_ORDER_EXPORT_FAILED"
	NOTIFICATIONTYPE_PLUGIN_INVALID_SETTING NotificationType = "PLUGIN_INVALID_SETTING"
	NOTIFICATIONTYPE_PLUGIN_DEACTIVATED NotificationType = "PLUGIN_DEACTIVATED"
	NOTIFICATIONTYPE_PRODUCT_BUNDLE_IMPORT_FAILED NotificationType = "PRODUCT_BUNDLE_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_REFUND_LINE_ITEMS_ERROR NotificationType = "CHANNEL_REFUND_LINE_ITEMS_ERROR"
	NOTIFICATIONTYPE_CHANNEL_CANCELLATION_EXPORT_FAILED NotificationType = "CHANNEL_CANCELLATION_EXPORT_FAILED"
	NOTIFICATIONTYPE_MERCHANT_ORDER_EXPORT_LINES_CANCELLED NotificationType = "MERCHANT_ORDER_EXPORT_LINES_CANCELLED"
	NOTIFICATIONTYPE_OAUTH_REFRESH_TOKEN_ABOUT_TO_EXPIRE NotificationType = "OAUTH_REFRESH_TOKEN_ABOUT_TO_EXPIRE"
	NOTIFICATIONTYPE_MERCHANT_CANCELLATION_IMPORT_FAILED NotificationType = "MERCHANT_CANCELLATION_IMPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_ORDER_TOO_LONG_ON_NEW NotificationType = "CHANNEL_ORDER_TOO_LONG_ON_NEW"
	NOTIFICATIONTYPE_MERCHANT_STOCK_UPDATE_FAILED NotificationType = "MERCHANT_STOCK_UPDATE_FAILED"
	NOTIFICATIONTYPE_FEED_INVALID_PRODUCTS_OCCURED NotificationType = "FEED_INVALID_PRODUCTS_OCCURED"
	NOTIFICATIONTYPE_CHANNEL_SHIPMENT_EXPORT_INVALID_MERCHANTSHIPMENTNO NotificationType = "CHANNEL_SHIPMENT_EXPORT_INVALID_MERCHANTSHIPMENTNO"
	NOTIFICATIONTYPE_CHANNEL_PRODUCT_OFFER_EXPORT_FAILED NotificationType = "CHANNEL_PRODUCT_OFFER_EXPORT_FAILED"
	NOTIFICATIONTYPE_TRANSLATION_IMAGE_TAGS_BROKEN NotificationType = "TRANSLATION_IMAGE_TAGS_BROKEN"
	NOTIFICATIONTYPE_CHANNEL_RETURN_DELETED NotificationType = "CHANNEL_RETURN_DELETED"
	NOTIFICATIONTYPE_TAX_PROVIDER_NOT_ACTIVATED NotificationType = "TAX_PROVIDER_NOT_ACTIVATED"
	NOTIFICATIONTYPE_STOCK_LOCATION_NOT_FOUND NotificationType = "STOCK_LOCATION_NOT_FOUND"
	NOTIFICATIONTYPE_CUSTOM_VAT_RATE_OVERLAPPING_RATES NotificationType = "CUSTOM_VAT_RATE_OVERLAPPING_RATES"
	NOTIFICATIONTYPE_TRANSLATION_FAILED NotificationType = "TRANSLATION_FAILED"
	NOTIFICATIONTYPE_ORDER_FALLBACK_TO_DEFAULT_STOCKLOCATION NotificationType = "ORDER_FALLBACK_TO_DEFAULT_STOCKLOCATION"
	NOTIFICATIONTYPE_CHANNEL_FULFILLMENT_SHIPMENT_RECEIVED NotificationType = "CHANNEL_FULFILLMENT_SHIPMENT_RECEIVED"
	NOTIFICATIONTYPE_TRANSLATION_RETRY NotificationType = "TRANSLATION_RETRY"
	NOTIFICATIONTYPE_PLUGIN_SALES_CHANNEL_DEACTIVATED NotificationType = "PLUGIN_SALES_CHANNEL_DEACTIVATED"
	NOTIFICATIONTYPE_PLUGIN_CATEGORIES_CHANGED NotificationType = "PLUGIN_CATEGORIES_CHANGED"
	NOTIFICATIONTYPE_PLUGIN_ATTRIBUTES_CHANGED NotificationType = "PLUGIN_ATTRIBUTES_CHANGED"
	NOTIFICATIONTYPE_ORDER_WITH_BACKORDER_STATUS NotificationType = "ORDER_WITH_BACKORDER_STATUS"
	NOTIFICATIONTYPE_ORDER_WITH_BACKORDER_STATUS_FULFILLED NotificationType = "ORDER_WITH_BACKORDER_STATUS_FULFILLED"
	NOTIFICATIONTYPE_ORDERS_GOT_REJECTED_BY_MCF NotificationType = "ORDERS_GOT_REJECTED_BY_MCF"
	NOTIFICATIONTYPE_PLUGIN_VALIDATION_FAILED NotificationType = "PLUGIN_VALIDATION_FAILED"
	NOTIFICATIONTYPE_UPDATE_STOCK_SWITCHED_OFF_FOR_PLUGIN NotificationType = "UPDATE_STOCK_SWITCHED_OFF_FOR_PLUGIN"
	NOTIFICATIONTYPE_CHANNEL_RETURN_REQUIRED_ATTENTION NotificationType = "CHANNEL_RETURN_REQUIRED_ATTENTION"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_NEW NotificationType = "CHANNEL_PURCHASE_ORDER_NEW"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_LINE_CHANGED NotificationType = "CHANNEL_PURCHASE_ORDER_LINE_CHANGED"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_LINE_CANCELLED NotificationType = "CHANNEL_PURCHASE_ORDER_LINE_CANCELLED"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_ACKNOWLEDGEMENT_FAILED NotificationType = "CHANNEL_PURCHASE_ORDER_ACKNOWLEDGEMENT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_SHIPMENT_EXPORT_FAILED NotificationType = "CHANNEL_PURCHASE_ORDER_SHIPMENT_EXPORT_FAILED"
	NOTIFICATIONTYPE_CHANNEL_PURCHASE_ORDER_INVOICE_CREATION_FAILED NotificationType = "CHANNEL_PURCHASE_ORDER_INVOICE_CREATION_FAILED"
	NOTIFICATIONTYPE_CHANNEL_KPI_TARGET_MISSED NotificationType = "CHANNEL_KPI_TARGET_MISSED"
	NOTIFICATIONTYPE_LATE_UNSHIPPED_ORDERS NotificationType = "LATE_UNSHIPPED_ORDERS"
	NOTIFICATIONTYPE_FEED_ENABLED NotificationType = "FEED_ENABLED"
	NOTIFICATIONTYPE_FEED_DISABLED NotificationType = "FEED_DISABLED"
	NOTIFICATIONTYPE_PRODUCT_IMPORT_FEEDS_SUCCESS NotificationType = "PRODUCT_IMPORT_FEEDS_SUCCESS"
	NOTIFICATIONTYPE_SETTLEMENT_EXPORT_FAILED NotificationType = "SETTLEMENT_EXPORT_FAILED"
)

// All allowed values of NotificationType enum
var AllowedNotificationTypeEnumValues = []NotificationType{
	"CHANNEL_ORDER_ANONYMIZED_BY_REQUEST",
	"CHANNEL_ORDER_ANONYMIZED_AUTOMATICALLY",
	"CHANNEL_ORDER_CANCELLATION_REQUEST_NEW",
	"CHANNEL_ORDER_CORRECTION_NEEDED",
	"CHANNEL_ORDER_DUPLICATE_LINE",
	"CHANNEL_ORDER_INVOICE_SEND_FAILED",
	"CHANNEL_ORDER_IMPORT_FAILED",
	"CHANNEL_ORDER_NEW",
	"CHANNEL_ORDER_OVERDUE",
	"CHANNEL_PRODUCT_DATA_EXPORT_FAILED",
	"CHANNEL_PRODUCT_DATA_IMPORT_FAILED",
	"CHANNEL_RETURN_EXPORT_FAILED",
	"CHANNEL_RETURN_IMPORT_FAILED",
	"CHANNEL_RETURN_NEW",
	"CHANNEL_RETURN_OVERDUE",
	"CHANNEL_REFUND_EXPORT_FAILED",
	"CHANNEL_SHIPMENT_IMPORT_FAILED",
	"CHANNEL_SHIPMENT_IMPORT_STATUS_FAILED",
	"CHANNEL_SHIPMENT_EXPORT_FAILED",
	"CHANNEL_SHIPMENT_IMPORT_MISSING_LINE_FAILED",
	"CHANNEL_FULFILLMENT_SHIPMENT_IMPORT_STATUS_FAILED",
	"CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_FAILED",
	"CHANNEL_FULFILLMENT_SHIPMENT_EXPORT_SUCCEEDED",
	"CHANNEL_FULFILLMENT_SHIPMENT_LINE_FOR_CLOSED_ORDER",
	"CHANNELENGINE_SUPPORT_NOTIFICATION",
	"CHANNELENGINE_WEBHOOK_RQUEST_FAILED",
	"FEED_NO_PRODUCTS_FAILED",
	"FEED_IMPORT_FAILED",
	"GLOBAL_MESSAGE",
	"MERCHANT_ORDER_EXPORT_FAILED",
	"PLUGIN_INVALID_SETTING",
	"PLUGIN_DEACTIVATED",
	"PRODUCT_BUNDLE_IMPORT_FAILED",
	"CHANNEL_REFUND_LINE_ITEMS_ERROR",
	"CHANNEL_CANCELLATION_EXPORT_FAILED",
	"MERCHANT_ORDER_EXPORT_LINES_CANCELLED",
	"OAUTH_REFRESH_TOKEN_ABOUT_TO_EXPIRE",
	"MERCHANT_CANCELLATION_IMPORT_FAILED",
	"CHANNEL_ORDER_TOO_LONG_ON_NEW",
	"MERCHANT_STOCK_UPDATE_FAILED",
	"FEED_INVALID_PRODUCTS_OCCURED",
	"CHANNEL_SHIPMENT_EXPORT_INVALID_MERCHANTSHIPMENTNO",
	"CHANNEL_PRODUCT_OFFER_EXPORT_FAILED",
	"TRANSLATION_IMAGE_TAGS_BROKEN",
	"CHANNEL_RETURN_DELETED",
	"TAX_PROVIDER_NOT_ACTIVATED",
	"STOCK_LOCATION_NOT_FOUND",
	"CUSTOM_VAT_RATE_OVERLAPPING_RATES",
	"TRANSLATION_FAILED",
	"ORDER_FALLBACK_TO_DEFAULT_STOCKLOCATION",
	"CHANNEL_FULFILLMENT_SHIPMENT_RECEIVED",
	"TRANSLATION_RETRY",
	"PLUGIN_SALES_CHANNEL_DEACTIVATED",
	"PLUGIN_CATEGORIES_CHANGED",
	"PLUGIN_ATTRIBUTES_CHANGED",
	"ORDER_WITH_BACKORDER_STATUS",
	"ORDER_WITH_BACKORDER_STATUS_FULFILLED",
	"ORDERS_GOT_REJECTED_BY_MCF",
	"PLUGIN_VALIDATION_FAILED",
	"UPDATE_STOCK_SWITCHED_OFF_FOR_PLUGIN",
	"CHANNEL_RETURN_REQUIRED_ATTENTION",
	"CHANNEL_PURCHASE_ORDER_NEW",
	"CHANNEL_PURCHASE_ORDER_LINE_CHANGED",
	"CHANNEL_PURCHASE_ORDER_LINE_CANCELLED",
	"CHANNEL_PURCHASE_ORDER_ACKNOWLEDGEMENT_FAILED",
	"CHANNEL_PURCHASE_ORDER_SHIPMENT_EXPORT_FAILED",
	"CHANNEL_PURCHASE_ORDER_INVOICE_CREATION_FAILED",
	"CHANNEL_KPI_TARGET_MISSED",
	"LATE_UNSHIPPED_ORDERS",
	"FEED_ENABLED",
	"FEED_DISABLED",
	"PRODUCT_IMPORT_FEEDS_SUCCESS",
	"SETTLEMENT_EXPORT_FAILED",
}

func (v *NotificationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NotificationType(value)
	for _, existing := range AllowedNotificationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NotificationType", value)
}

// NewNotificationTypeFromValue returns a pointer to a valid NotificationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNotificationTypeFromValue(v string) (*NotificationType, error) {
	ev := NotificationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NotificationType: valid values are %v", v, AllowedNotificationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NotificationType) IsValid() bool {
	for _, existing := range AllowedNotificationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NotificationType value
func (v NotificationType) Ptr() *NotificationType {
	return &v
}

type NullableNotificationType struct {
	value *NotificationType
	isSet bool
}

func (v NullableNotificationType) Get() *NotificationType {
	return v.value
}

func (v *NullableNotificationType) Set(val *NotificationType) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationType) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationType(val *NotificationType) *NullableNotificationType {
	return &NullableNotificationType{value: val, isSet: true}
}

func (v NullableNotificationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

