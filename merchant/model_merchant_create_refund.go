/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantCreateRefund type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantCreateRefund{}

// MerchantCreateRefund struct for MerchantCreateRefund
type MerchantCreateRefund struct {
	OrderIdentifier NullableString `json:"OrderIdentifier,omitempty"`
	MerchantRefundNo NullableString `json:"MerchantRefundNo,omitempty"`
	Reason *RefundReason `json:"Reason,omitempty"`
	MerchantComment NullableString `json:"MerchantComment,omitempty"`
	AdditionalAmountInclTax *float32 `json:"AdditionalAmountInclTax,omitempty"`
	ShippingAmountInclTax *float32 `json:"ShippingAmountInclTax,omitempty"`
	RefundDate *time.Time `json:"RefundDate,omitempty"`
	ExtraData map[string]string `json:"ExtraData,omitempty"`
	Lines []MerchantCreateRefundLine `json:"Lines,omitempty"`
}

// NewMerchantCreateRefund instantiates a new MerchantCreateRefund object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantCreateRefund() *MerchantCreateRefund {
	this := MerchantCreateRefund{}
	return &this
}

// NewMerchantCreateRefundWithDefaults instantiates a new MerchantCreateRefund object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantCreateRefundWithDefaults() *MerchantCreateRefund {
	this := MerchantCreateRefund{}
	return &this
}

// GetOrderIdentifier returns the OrderIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateRefund) GetOrderIdentifier() string {
	if o == nil || IsNil(o.OrderIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.OrderIdentifier.Get()
}

// GetOrderIdentifierOk returns a tuple with the OrderIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateRefund) GetOrderIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderIdentifier.Get(), o.OrderIdentifier.IsSet()
}

// HasOrderIdentifier returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasOrderIdentifier() bool {
	if o != nil && o.OrderIdentifier.IsSet() {
		return true
	}

	return false
}

// SetOrderIdentifier gets a reference to the given NullableString and assigns it to the OrderIdentifier field.
func (o *MerchantCreateRefund) SetOrderIdentifier(v string) {
	o.OrderIdentifier.Set(&v)
}
// SetOrderIdentifierNil sets the value for OrderIdentifier to be an explicit nil
func (o *MerchantCreateRefund) SetOrderIdentifierNil() {
	o.OrderIdentifier.Set(nil)
}

// UnsetOrderIdentifier ensures that no value is present for OrderIdentifier, not even an explicit nil
func (o *MerchantCreateRefund) UnsetOrderIdentifier() {
	o.OrderIdentifier.Unset()
}

// GetMerchantRefundNo returns the MerchantRefundNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateRefund) GetMerchantRefundNo() string {
	if o == nil || IsNil(o.MerchantRefundNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantRefundNo.Get()
}

// GetMerchantRefundNoOk returns a tuple with the MerchantRefundNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateRefund) GetMerchantRefundNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantRefundNo.Get(), o.MerchantRefundNo.IsSet()
}

// HasMerchantRefundNo returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasMerchantRefundNo() bool {
	if o != nil && o.MerchantRefundNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantRefundNo gets a reference to the given NullableString and assigns it to the MerchantRefundNo field.
func (o *MerchantCreateRefund) SetMerchantRefundNo(v string) {
	o.MerchantRefundNo.Set(&v)
}
// SetMerchantRefundNoNil sets the value for MerchantRefundNo to be an explicit nil
func (o *MerchantCreateRefund) SetMerchantRefundNoNil() {
	o.MerchantRefundNo.Set(nil)
}

// UnsetMerchantRefundNo ensures that no value is present for MerchantRefundNo, not even an explicit nil
func (o *MerchantCreateRefund) UnsetMerchantRefundNo() {
	o.MerchantRefundNo.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *MerchantCreateRefund) GetReason() RefundReason {
	if o == nil || IsNil(o.Reason) {
		var ret RefundReason
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateRefund) GetReasonOk() (*RefundReason, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given RefundReason and assigns it to the Reason field.
func (o *MerchantCreateRefund) SetReason(v RefundReason) {
	o.Reason = &v
}

// GetMerchantComment returns the MerchantComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateRefund) GetMerchantComment() string {
	if o == nil || IsNil(o.MerchantComment.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantComment.Get()
}

// GetMerchantCommentOk returns a tuple with the MerchantComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateRefund) GetMerchantCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantComment.Get(), o.MerchantComment.IsSet()
}

// HasMerchantComment returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasMerchantComment() bool {
	if o != nil && o.MerchantComment.IsSet() {
		return true
	}

	return false
}

// SetMerchantComment gets a reference to the given NullableString and assigns it to the MerchantComment field.
func (o *MerchantCreateRefund) SetMerchantComment(v string) {
	o.MerchantComment.Set(&v)
}
// SetMerchantCommentNil sets the value for MerchantComment to be an explicit nil
func (o *MerchantCreateRefund) SetMerchantCommentNil() {
	o.MerchantComment.Set(nil)
}

// UnsetMerchantComment ensures that no value is present for MerchantComment, not even an explicit nil
func (o *MerchantCreateRefund) UnsetMerchantComment() {
	o.MerchantComment.Unset()
}

// GetAdditionalAmountInclTax returns the AdditionalAmountInclTax field value if set, zero value otherwise.
func (o *MerchantCreateRefund) GetAdditionalAmountInclTax() float32 {
	if o == nil || IsNil(o.AdditionalAmountInclTax) {
		var ret float32
		return ret
	}
	return *o.AdditionalAmountInclTax
}

// GetAdditionalAmountInclTaxOk returns a tuple with the AdditionalAmountInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateRefund) GetAdditionalAmountInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.AdditionalAmountInclTax) {
		return nil, false
	}
	return o.AdditionalAmountInclTax, true
}

// HasAdditionalAmountInclTax returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasAdditionalAmountInclTax() bool {
	if o != nil && !IsNil(o.AdditionalAmountInclTax) {
		return true
	}

	return false
}

// SetAdditionalAmountInclTax gets a reference to the given float32 and assigns it to the AdditionalAmountInclTax field.
func (o *MerchantCreateRefund) SetAdditionalAmountInclTax(v float32) {
	o.AdditionalAmountInclTax = &v
}

// GetShippingAmountInclTax returns the ShippingAmountInclTax field value if set, zero value otherwise.
func (o *MerchantCreateRefund) GetShippingAmountInclTax() float32 {
	if o == nil || IsNil(o.ShippingAmountInclTax) {
		var ret float32
		return ret
	}
	return *o.ShippingAmountInclTax
}

// GetShippingAmountInclTaxOk returns a tuple with the ShippingAmountInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateRefund) GetShippingAmountInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmountInclTax) {
		return nil, false
	}
	return o.ShippingAmountInclTax, true
}

// HasShippingAmountInclTax returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasShippingAmountInclTax() bool {
	if o != nil && !IsNil(o.ShippingAmountInclTax) {
		return true
	}

	return false
}

// SetShippingAmountInclTax gets a reference to the given float32 and assigns it to the ShippingAmountInclTax field.
func (o *MerchantCreateRefund) SetShippingAmountInclTax(v float32) {
	o.ShippingAmountInclTax = &v
}

// GetRefundDate returns the RefundDate field value if set, zero value otherwise.
func (o *MerchantCreateRefund) GetRefundDate() time.Time {
	if o == nil || IsNil(o.RefundDate) {
		var ret time.Time
		return ret
	}
	return *o.RefundDate
}

// GetRefundDateOk returns a tuple with the RefundDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateRefund) GetRefundDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RefundDate) {
		return nil, false
	}
	return o.RefundDate, true
}

// HasRefundDate returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasRefundDate() bool {
	if o != nil && !IsNil(o.RefundDate) {
		return true
	}

	return false
}

// SetRefundDate gets a reference to the given time.Time and assigns it to the RefundDate field.
func (o *MerchantCreateRefund) SetRefundDate(v time.Time) {
	o.RefundDate = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateRefund) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateRefund) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *MerchantCreateRefund) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateRefund) GetLines() []MerchantCreateRefundLine {
	if o == nil {
		var ret []MerchantCreateRefundLine
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateRefund) GetLinesOk() ([]MerchantCreateRefundLine, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *MerchantCreateRefund) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []MerchantCreateRefundLine and assigns it to the Lines field.
func (o *MerchantCreateRefund) SetLines(v []MerchantCreateRefundLine) {
	o.Lines = v
}

func (o MerchantCreateRefund) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantCreateRefund) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderIdentifier.IsSet() {
		toSerialize["OrderIdentifier"] = o.OrderIdentifier.Get()
	}
	if o.MerchantRefundNo.IsSet() {
		toSerialize["MerchantRefundNo"] = o.MerchantRefundNo.Get()
	}
	if !IsNil(o.Reason) {
		toSerialize["Reason"] = o.Reason
	}
	if o.MerchantComment.IsSet() {
		toSerialize["MerchantComment"] = o.MerchantComment.Get()
	}
	if !IsNil(o.AdditionalAmountInclTax) {
		toSerialize["AdditionalAmountInclTax"] = o.AdditionalAmountInclTax
	}
	if !IsNil(o.ShippingAmountInclTax) {
		toSerialize["ShippingAmountInclTax"] = o.ShippingAmountInclTax
	}
	if !IsNil(o.RefundDate) {
		toSerialize["RefundDate"] = o.RefundDate
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	return toSerialize, nil
}

type NullableMerchantCreateRefund struct {
	value *MerchantCreateRefund
	isSet bool
}

func (v NullableMerchantCreateRefund) Get() *MerchantCreateRefund {
	return v.value
}

func (v *NullableMerchantCreateRefund) Set(val *MerchantCreateRefund) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantCreateRefund) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantCreateRefund) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantCreateRefund(val *MerchantCreateRefund) *NullableMerchantCreateRefund {
	return &NullableMerchantCreateRefund{value: val, isSet: true}
}

func (v NullableMerchantCreateRefund) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantCreateRefund) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


