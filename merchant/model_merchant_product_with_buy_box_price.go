/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantProductWithBuyBoxPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantProductWithBuyBoxPrice{}

// MerchantProductWithBuyBoxPrice struct for MerchantProductWithBuyBoxPrice
type MerchantProductWithBuyBoxPrice struct {
	// Product SKU number
	Sku NullableString `json:"Sku,omitempty"`
	// Product GTIN
	Gtin NullableString `json:"Gtin,omitempty"`
	// Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping
	BuyBoxPrice NullableFloat32 `json:"BuyBoxPrice,omitempty"`
	// Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner
	BuyBoxPriceInclShipping NullableFloat32 `json:"BuyBoxPriceInclShipping,omitempty"`
	// Are you the Buy box winner or not?
	IsMerchantBuyBoxWinner *bool `json:"IsMerchantBuyBoxWinner,omitempty"`
}

// NewMerchantProductWithBuyBoxPrice instantiates a new MerchantProductWithBuyBoxPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantProductWithBuyBoxPrice() *MerchantProductWithBuyBoxPrice {
	this := MerchantProductWithBuyBoxPrice{}
	return &this
}

// NewMerchantProductWithBuyBoxPriceWithDefaults instantiates a new MerchantProductWithBuyBoxPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantProductWithBuyBoxPriceWithDefaults() *MerchantProductWithBuyBoxPrice {
	this := MerchantProductWithBuyBoxPrice{}
	return &this
}

// GetSku returns the Sku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductWithBuyBoxPrice) GetSku() string {
	if o == nil || IsNil(o.Sku.Get()) {
		var ret string
		return ret
	}
	return *o.Sku.Get()
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductWithBuyBoxPrice) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sku.Get(), o.Sku.IsSet()
}

// HasSku returns a boolean if a field has been set.
func (o *MerchantProductWithBuyBoxPrice) HasSku() bool {
	if o != nil && o.Sku.IsSet() {
		return true
	}

	return false
}

// SetSku gets a reference to the given NullableString and assigns it to the Sku field.
func (o *MerchantProductWithBuyBoxPrice) SetSku(v string) {
	o.Sku.Set(&v)
}
// SetSkuNil sets the value for Sku to be an explicit nil
func (o *MerchantProductWithBuyBoxPrice) SetSkuNil() {
	o.Sku.Set(nil)
}

// UnsetSku ensures that no value is present for Sku, not even an explicit nil
func (o *MerchantProductWithBuyBoxPrice) UnsetSku() {
	o.Sku.Unset()
}

// GetGtin returns the Gtin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductWithBuyBoxPrice) GetGtin() string {
	if o == nil || IsNil(o.Gtin.Get()) {
		var ret string
		return ret
	}
	return *o.Gtin.Get()
}

// GetGtinOk returns a tuple with the Gtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductWithBuyBoxPrice) GetGtinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gtin.Get(), o.Gtin.IsSet()
}

// HasGtin returns a boolean if a field has been set.
func (o *MerchantProductWithBuyBoxPrice) HasGtin() bool {
	if o != nil && o.Gtin.IsSet() {
		return true
	}

	return false
}

// SetGtin gets a reference to the given NullableString and assigns it to the Gtin field.
func (o *MerchantProductWithBuyBoxPrice) SetGtin(v string) {
	o.Gtin.Set(&v)
}
// SetGtinNil sets the value for Gtin to be an explicit nil
func (o *MerchantProductWithBuyBoxPrice) SetGtinNil() {
	o.Gtin.Set(nil)
}

// UnsetGtin ensures that no value is present for Gtin, not even an explicit nil
func (o *MerchantProductWithBuyBoxPrice) UnsetGtin() {
	o.Gtin.Unset()
}

// GetBuyBoxPrice returns the BuyBoxPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductWithBuyBoxPrice) GetBuyBoxPrice() float32 {
	if o == nil || IsNil(o.BuyBoxPrice.Get()) {
		var ret float32
		return ret
	}
	return *o.BuyBoxPrice.Get()
}

// GetBuyBoxPriceOk returns a tuple with the BuyBoxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductWithBuyBoxPrice) GetBuyBoxPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BuyBoxPrice.Get(), o.BuyBoxPrice.IsSet()
}

// HasBuyBoxPrice returns a boolean if a field has been set.
func (o *MerchantProductWithBuyBoxPrice) HasBuyBoxPrice() bool {
	if o != nil && o.BuyBoxPrice.IsSet() {
		return true
	}

	return false
}

// SetBuyBoxPrice gets a reference to the given NullableFloat32 and assigns it to the BuyBoxPrice field.
func (o *MerchantProductWithBuyBoxPrice) SetBuyBoxPrice(v float32) {
	o.BuyBoxPrice.Set(&v)
}
// SetBuyBoxPriceNil sets the value for BuyBoxPrice to be an explicit nil
func (o *MerchantProductWithBuyBoxPrice) SetBuyBoxPriceNil() {
	o.BuyBoxPrice.Set(nil)
}

// UnsetBuyBoxPrice ensures that no value is present for BuyBoxPrice, not even an explicit nil
func (o *MerchantProductWithBuyBoxPrice) UnsetBuyBoxPrice() {
	o.BuyBoxPrice.Unset()
}

// GetBuyBoxPriceInclShipping returns the BuyBoxPriceInclShipping field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantProductWithBuyBoxPrice) GetBuyBoxPriceInclShipping() float32 {
	if o == nil || IsNil(o.BuyBoxPriceInclShipping.Get()) {
		var ret float32
		return ret
	}
	return *o.BuyBoxPriceInclShipping.Get()
}

// GetBuyBoxPriceInclShippingOk returns a tuple with the BuyBoxPriceInclShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantProductWithBuyBoxPrice) GetBuyBoxPriceInclShippingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BuyBoxPriceInclShipping.Get(), o.BuyBoxPriceInclShipping.IsSet()
}

// HasBuyBoxPriceInclShipping returns a boolean if a field has been set.
func (o *MerchantProductWithBuyBoxPrice) HasBuyBoxPriceInclShipping() bool {
	if o != nil && o.BuyBoxPriceInclShipping.IsSet() {
		return true
	}

	return false
}

// SetBuyBoxPriceInclShipping gets a reference to the given NullableFloat32 and assigns it to the BuyBoxPriceInclShipping field.
func (o *MerchantProductWithBuyBoxPrice) SetBuyBoxPriceInclShipping(v float32) {
	o.BuyBoxPriceInclShipping.Set(&v)
}
// SetBuyBoxPriceInclShippingNil sets the value for BuyBoxPriceInclShipping to be an explicit nil
func (o *MerchantProductWithBuyBoxPrice) SetBuyBoxPriceInclShippingNil() {
	o.BuyBoxPriceInclShipping.Set(nil)
}

// UnsetBuyBoxPriceInclShipping ensures that no value is present for BuyBoxPriceInclShipping, not even an explicit nil
func (o *MerchantProductWithBuyBoxPrice) UnsetBuyBoxPriceInclShipping() {
	o.BuyBoxPriceInclShipping.Unset()
}

// GetIsMerchantBuyBoxWinner returns the IsMerchantBuyBoxWinner field value if set, zero value otherwise.
func (o *MerchantProductWithBuyBoxPrice) GetIsMerchantBuyBoxWinner() bool {
	if o == nil || IsNil(o.IsMerchantBuyBoxWinner) {
		var ret bool
		return ret
	}
	return *o.IsMerchantBuyBoxWinner
}

// GetIsMerchantBuyBoxWinnerOk returns a tuple with the IsMerchantBuyBoxWinner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantProductWithBuyBoxPrice) GetIsMerchantBuyBoxWinnerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMerchantBuyBoxWinner) {
		return nil, false
	}
	return o.IsMerchantBuyBoxWinner, true
}

// HasIsMerchantBuyBoxWinner returns a boolean if a field has been set.
func (o *MerchantProductWithBuyBoxPrice) HasIsMerchantBuyBoxWinner() bool {
	if o != nil && !IsNil(o.IsMerchantBuyBoxWinner) {
		return true
	}

	return false
}

// SetIsMerchantBuyBoxWinner gets a reference to the given bool and assigns it to the IsMerchantBuyBoxWinner field.
func (o *MerchantProductWithBuyBoxPrice) SetIsMerchantBuyBoxWinner(v bool) {
	o.IsMerchantBuyBoxWinner = &v
}

func (o MerchantProductWithBuyBoxPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantProductWithBuyBoxPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Sku.IsSet() {
		toSerialize["Sku"] = o.Sku.Get()
	}
	if o.Gtin.IsSet() {
		toSerialize["Gtin"] = o.Gtin.Get()
	}
	if o.BuyBoxPrice.IsSet() {
		toSerialize["BuyBoxPrice"] = o.BuyBoxPrice.Get()
	}
	if o.BuyBoxPriceInclShipping.IsSet() {
		toSerialize["BuyBoxPriceInclShipping"] = o.BuyBoxPriceInclShipping.Get()
	}
	if !IsNil(o.IsMerchantBuyBoxWinner) {
		toSerialize["IsMerchantBuyBoxWinner"] = o.IsMerchantBuyBoxWinner
	}
	return toSerialize, nil
}

type NullableMerchantProductWithBuyBoxPrice struct {
	value *MerchantProductWithBuyBoxPrice
	isSet bool
}

func (v NullableMerchantProductWithBuyBoxPrice) Get() *MerchantProductWithBuyBoxPrice {
	return v.value
}

func (v *NullableMerchantProductWithBuyBoxPrice) Set(val *MerchantProductWithBuyBoxPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantProductWithBuyBoxPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantProductWithBuyBoxPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantProductWithBuyBoxPrice(val *MerchantProductWithBuyBoxPrice) *NullableMerchantProductWithBuyBoxPrice {
	return &NullableMerchantProductWithBuyBoxPrice{value: val, isSet: true}
}

func (v NullableMerchantProductWithBuyBoxPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantProductWithBuyBoxPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


