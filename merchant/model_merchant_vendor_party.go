/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the MerchantVendorParty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantVendorParty{}

// MerchantVendorParty struct for MerchantVendorParty
type MerchantVendorParty struct {
	Name NullableString `json:"Name,omitempty"`
	AddressLine1 NullableString `json:"AddressLine1,omitempty"`
	AddressLine2 NullableString `json:"AddressLine2,omitempty"`
	AddressLine3 NullableString `json:"AddressLine3,omitempty"`
	City NullableString `json:"City,omitempty"`
	County NullableString `json:"County,omitempty"`
	District NullableString `json:"District,omitempty"`
	StateOrRegion NullableString `json:"StateOrRegion,omitempty"`
	PostalCode NullableString `json:"PostalCode,omitempty"`
	CountryCode NullableString `json:"CountryCode,omitempty"`
	Phone NullableString `json:"Phone,omitempty"`
	TaxRegistrationType *ModulesTaxRegistrationType `json:"TaxRegistrationType,omitempty"`
	TaxRegistrationNo NullableString `json:"TaxRegistrationNo,omitempty"`
}

// NewMerchantVendorParty instantiates a new MerchantVendorParty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantVendorParty() *MerchantVendorParty {
	this := MerchantVendorParty{}
	return &this
}

// NewMerchantVendorPartyWithDefaults instantiates a new MerchantVendorParty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantVendorPartyWithDefaults() *MerchantVendorParty {
	this := MerchantVendorParty{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MerchantVendorParty) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MerchantVendorParty) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MerchantVendorParty) UnsetName() {
	o.Name.Unset()
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine1.Get()
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine1.Get(), o.AddressLine1.IsSet()
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasAddressLine1() bool {
	if o != nil && o.AddressLine1.IsSet() {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given NullableString and assigns it to the AddressLine1 field.
func (o *MerchantVendorParty) SetAddressLine1(v string) {
	o.AddressLine1.Set(&v)
}
// SetAddressLine1Nil sets the value for AddressLine1 to be an explicit nil
func (o *MerchantVendorParty) SetAddressLine1Nil() {
	o.AddressLine1.Set(nil)
}

// UnsetAddressLine1 ensures that no value is present for AddressLine1, not even an explicit nil
func (o *MerchantVendorParty) UnsetAddressLine1() {
	o.AddressLine1.Unset()
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine2.Get()
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetAddressLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine2.Get(), o.AddressLine2.IsSet()
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasAddressLine2() bool {
	if o != nil && o.AddressLine2.IsSet() {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given NullableString and assigns it to the AddressLine2 field.
func (o *MerchantVendorParty) SetAddressLine2(v string) {
	o.AddressLine2.Set(&v)
}
// SetAddressLine2Nil sets the value for AddressLine2 to be an explicit nil
func (o *MerchantVendorParty) SetAddressLine2Nil() {
	o.AddressLine2.Set(nil)
}

// UnsetAddressLine2 ensures that no value is present for AddressLine2, not even an explicit nil
func (o *MerchantVendorParty) UnsetAddressLine2() {
	o.AddressLine2.Unset()
}

// GetAddressLine3 returns the AddressLine3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetAddressLine3() string {
	if o == nil || IsNil(o.AddressLine3.Get()) {
		var ret string
		return ret
	}
	return *o.AddressLine3.Get()
}

// GetAddressLine3Ok returns a tuple with the AddressLine3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetAddressLine3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressLine3.Get(), o.AddressLine3.IsSet()
}

// HasAddressLine3 returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasAddressLine3() bool {
	if o != nil && o.AddressLine3.IsSet() {
		return true
	}

	return false
}

// SetAddressLine3 gets a reference to the given NullableString and assigns it to the AddressLine3 field.
func (o *MerchantVendorParty) SetAddressLine3(v string) {
	o.AddressLine3.Set(&v)
}
// SetAddressLine3Nil sets the value for AddressLine3 to be an explicit nil
func (o *MerchantVendorParty) SetAddressLine3Nil() {
	o.AddressLine3.Set(nil)
}

// UnsetAddressLine3 ensures that no value is present for AddressLine3, not even an explicit nil
func (o *MerchantVendorParty) UnsetAddressLine3() {
	o.AddressLine3.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *MerchantVendorParty) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *MerchantVendorParty) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *MerchantVendorParty) UnsetCity() {
	o.City.Unset()
}

// GetCounty returns the County field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetCounty() string {
	if o == nil || IsNil(o.County.Get()) {
		var ret string
		return ret
	}
	return *o.County.Get()
}

// GetCountyOk returns a tuple with the County field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetCountyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.County.Get(), o.County.IsSet()
}

// HasCounty returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasCounty() bool {
	if o != nil && o.County.IsSet() {
		return true
	}

	return false
}

// SetCounty gets a reference to the given NullableString and assigns it to the County field.
func (o *MerchantVendorParty) SetCounty(v string) {
	o.County.Set(&v)
}
// SetCountyNil sets the value for County to be an explicit nil
func (o *MerchantVendorParty) SetCountyNil() {
	o.County.Set(nil)
}

// UnsetCounty ensures that no value is present for County, not even an explicit nil
func (o *MerchantVendorParty) UnsetCounty() {
	o.County.Unset()
}

// GetDistrict returns the District field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetDistrict() string {
	if o == nil || IsNil(o.District.Get()) {
		var ret string
		return ret
	}
	return *o.District.Get()
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.District.Get(), o.District.IsSet()
}

// HasDistrict returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasDistrict() bool {
	if o != nil && o.District.IsSet() {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given NullableString and assigns it to the District field.
func (o *MerchantVendorParty) SetDistrict(v string) {
	o.District.Set(&v)
}
// SetDistrictNil sets the value for District to be an explicit nil
func (o *MerchantVendorParty) SetDistrictNil() {
	o.District.Set(nil)
}

// UnsetDistrict ensures that no value is present for District, not even an explicit nil
func (o *MerchantVendorParty) UnsetDistrict() {
	o.District.Unset()
}

// GetStateOrRegion returns the StateOrRegion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetStateOrRegion() string {
	if o == nil || IsNil(o.StateOrRegion.Get()) {
		var ret string
		return ret
	}
	return *o.StateOrRegion.Get()
}

// GetStateOrRegionOk returns a tuple with the StateOrRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetStateOrRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateOrRegion.Get(), o.StateOrRegion.IsSet()
}

// HasStateOrRegion returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasStateOrRegion() bool {
	if o != nil && o.StateOrRegion.IsSet() {
		return true
	}

	return false
}

// SetStateOrRegion gets a reference to the given NullableString and assigns it to the StateOrRegion field.
func (o *MerchantVendorParty) SetStateOrRegion(v string) {
	o.StateOrRegion.Set(&v)
}
// SetStateOrRegionNil sets the value for StateOrRegion to be an explicit nil
func (o *MerchantVendorParty) SetStateOrRegionNil() {
	o.StateOrRegion.Set(nil)
}

// UnsetStateOrRegion ensures that no value is present for StateOrRegion, not even an explicit nil
func (o *MerchantVendorParty) UnsetStateOrRegion() {
	o.StateOrRegion.Unset()
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode.Get()) {
		var ret string
		return ret
	}
	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// HasPostalCode returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasPostalCode() bool {
	if o != nil && o.PostalCode.IsSet() {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given NullableString and assigns it to the PostalCode field.
func (o *MerchantVendorParty) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}
// SetPostalCodeNil sets the value for PostalCode to be an explicit nil
func (o *MerchantVendorParty) SetPostalCodeNil() {
	o.PostalCode.Set(nil)
}

// UnsetPostalCode ensures that no value is present for PostalCode, not even an explicit nil
func (o *MerchantVendorParty) UnsetPostalCode() {
	o.PostalCode.Unset()
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasCountryCode() bool {
	if o != nil && o.CountryCode.IsSet() {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *MerchantVendorParty) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}
// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *MerchantVendorParty) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *MerchantVendorParty) UnsetCountryCode() {
	o.CountryCode.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *MerchantVendorParty) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *MerchantVendorParty) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *MerchantVendorParty) UnsetPhone() {
	o.Phone.Unset()
}

// GetTaxRegistrationType returns the TaxRegistrationType field value if set, zero value otherwise.
func (o *MerchantVendorParty) GetTaxRegistrationType() ModulesTaxRegistrationType {
	if o == nil || IsNil(o.TaxRegistrationType) {
		var ret ModulesTaxRegistrationType
		return ret
	}
	return *o.TaxRegistrationType
}

// GetTaxRegistrationTypeOk returns a tuple with the TaxRegistrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantVendorParty) GetTaxRegistrationTypeOk() (*ModulesTaxRegistrationType, bool) {
	if o == nil || IsNil(o.TaxRegistrationType) {
		return nil, false
	}
	return o.TaxRegistrationType, true
}

// HasTaxRegistrationType returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasTaxRegistrationType() bool {
	if o != nil && !IsNil(o.TaxRegistrationType) {
		return true
	}

	return false
}

// SetTaxRegistrationType gets a reference to the given ModulesTaxRegistrationType and assigns it to the TaxRegistrationType field.
func (o *MerchantVendorParty) SetTaxRegistrationType(v ModulesTaxRegistrationType) {
	o.TaxRegistrationType = &v
}

// GetTaxRegistrationNo returns the TaxRegistrationNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantVendorParty) GetTaxRegistrationNo() string {
	if o == nil || IsNil(o.TaxRegistrationNo.Get()) {
		var ret string
		return ret
	}
	return *o.TaxRegistrationNo.Get()
}

// GetTaxRegistrationNoOk returns a tuple with the TaxRegistrationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantVendorParty) GetTaxRegistrationNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxRegistrationNo.Get(), o.TaxRegistrationNo.IsSet()
}

// HasTaxRegistrationNo returns a boolean if a field has been set.
func (o *MerchantVendorParty) HasTaxRegistrationNo() bool {
	if o != nil && o.TaxRegistrationNo.IsSet() {
		return true
	}

	return false
}

// SetTaxRegistrationNo gets a reference to the given NullableString and assigns it to the TaxRegistrationNo field.
func (o *MerchantVendorParty) SetTaxRegistrationNo(v string) {
	o.TaxRegistrationNo.Set(&v)
}
// SetTaxRegistrationNoNil sets the value for TaxRegistrationNo to be an explicit nil
func (o *MerchantVendorParty) SetTaxRegistrationNoNil() {
	o.TaxRegistrationNo.Set(nil)
}

// UnsetTaxRegistrationNo ensures that no value is present for TaxRegistrationNo, not even an explicit nil
func (o *MerchantVendorParty) UnsetTaxRegistrationNo() {
	o.TaxRegistrationNo.Unset()
}

func (o MerchantVendorParty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantVendorParty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.AddressLine1.IsSet() {
		toSerialize["AddressLine1"] = o.AddressLine1.Get()
	}
	if o.AddressLine2.IsSet() {
		toSerialize["AddressLine2"] = o.AddressLine2.Get()
	}
	if o.AddressLine3.IsSet() {
		toSerialize["AddressLine3"] = o.AddressLine3.Get()
	}
	if o.City.IsSet() {
		toSerialize["City"] = o.City.Get()
	}
	if o.County.IsSet() {
		toSerialize["County"] = o.County.Get()
	}
	if o.District.IsSet() {
		toSerialize["District"] = o.District.Get()
	}
	if o.StateOrRegion.IsSet() {
		toSerialize["StateOrRegion"] = o.StateOrRegion.Get()
	}
	if o.PostalCode.IsSet() {
		toSerialize["PostalCode"] = o.PostalCode.Get()
	}
	if o.CountryCode.IsSet() {
		toSerialize["CountryCode"] = o.CountryCode.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["Phone"] = o.Phone.Get()
	}
	if !IsNil(o.TaxRegistrationType) {
		toSerialize["TaxRegistrationType"] = o.TaxRegistrationType
	}
	if o.TaxRegistrationNo.IsSet() {
		toSerialize["TaxRegistrationNo"] = o.TaxRegistrationNo.Get()
	}
	return toSerialize, nil
}

type NullableMerchantVendorParty struct {
	value *MerchantVendorParty
	isSet bool
}

func (v NullableMerchantVendorParty) Get() *MerchantVendorParty {
	return v.value
}

func (v *NullableMerchantVendorParty) Set(val *MerchantVendorParty) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantVendorParty) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantVendorParty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantVendorParty(val *MerchantVendorParty) *NullableMerchantVendorParty {
	return &NullableMerchantVendorParty{value: val, isSet: true}
}

func (v NullableMerchantVendorParty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantVendorParty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


