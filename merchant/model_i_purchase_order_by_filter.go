/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the IPurchaseOrderByFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPurchaseOrderByFilter{}

// IPurchaseOrderByFilter struct for IPurchaseOrderByFilter
type IPurchaseOrderByFilter struct {
	Id NullableInt32 `json:"Id,omitempty"`
	ChannelId *int32 `json:"ChannelId,omitempty"`
	ChannelName NullableString `json:"ChannelName,omitempty"`
	GlobalChannelName NullableString `json:"GlobalChannelName,omitempty"`
	GlobalChannelId NullableInt32 `json:"GlobalChannelId,omitempty"`
	ChannelPurchaseOrderNo NullableString `json:"ChannelPurchaseOrderNo,omitempty"`
	MerchantPurchaseOrderNo NullableString `json:"MerchantPurchaseOrderNo,omitempty"`
	Status *ModulesPurchaseOrderStatus `json:"Status,omitempty"`
	CreatedAt NullableTime `json:"CreatedAt,omitempty"`
	UpdatedAt NullableTime `json:"UpdatedAt,omitempty"`
	Type *ModulesPurchaseOrderType `json:"Type,omitempty"`
	FromShipDate NullableTime `json:"FromShipDate,omitempty"`
	ToShipDate NullableTime `json:"ToShipDate,omitempty"`
	FromDeliveryDate NullableTime `json:"FromDeliveryDate,omitempty"`
	ToDeliveryDate NullableTime `json:"ToDeliveryDate,omitempty"`
	ImportInformation *IImportInformation `json:"ImportInformation,omitempty"`
	SellingParty *IVendorParty `json:"SellingParty,omitempty"`
	ShipToParty *IVendorParty `json:"ShipToParty,omitempty"`
	BuyingParty *IVendorParty `json:"BuyingParty,omitempty"`
	BillingParty *IVendorParty `json:"BillingParty,omitempty"`
	Lines []IPurchaseOrderLineByFilter `json:"Lines,omitempty"`
}

// NewIPurchaseOrderByFilter instantiates a new IPurchaseOrderByFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPurchaseOrderByFilter() *IPurchaseOrderByFilter {
	this := IPurchaseOrderByFilter{}
	return &this
}

// NewIPurchaseOrderByFilterWithDefaults instantiates a new IPurchaseOrderByFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPurchaseOrderByFilterWithDefaults() *IPurchaseOrderByFilter {
	this := IPurchaseOrderByFilter{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *IPurchaseOrderByFilter) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *IPurchaseOrderByFilter) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetId() {
	o.Id.Unset()
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId) {
		var ret int32
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given int32 and assigns it to the ChannelId field.
func (o *IPurchaseOrderByFilter) SetChannelId(v int32) {
	o.ChannelId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelName.Get()
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelName.Get(), o.ChannelName.IsSet()
}

// HasChannelName returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasChannelName() bool {
	if o != nil && o.ChannelName.IsSet() {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given NullableString and assigns it to the ChannelName field.
func (o *IPurchaseOrderByFilter) SetChannelName(v string) {
	o.ChannelName.Set(&v)
}
// SetChannelNameNil sets the value for ChannelName to be an explicit nil
func (o *IPurchaseOrderByFilter) SetChannelNameNil() {
	o.ChannelName.Set(nil)
}

// UnsetChannelName ensures that no value is present for ChannelName, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetChannelName() {
	o.ChannelName.Unset()
}

// GetGlobalChannelName returns the GlobalChannelName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetGlobalChannelName() string {
	if o == nil || IsNil(o.GlobalChannelName.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalChannelName.Get()
}

// GetGlobalChannelNameOk returns a tuple with the GlobalChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetGlobalChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalChannelName.Get(), o.GlobalChannelName.IsSet()
}

// HasGlobalChannelName returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasGlobalChannelName() bool {
	if o != nil && o.GlobalChannelName.IsSet() {
		return true
	}

	return false
}

// SetGlobalChannelName gets a reference to the given NullableString and assigns it to the GlobalChannelName field.
func (o *IPurchaseOrderByFilter) SetGlobalChannelName(v string) {
	o.GlobalChannelName.Set(&v)
}
// SetGlobalChannelNameNil sets the value for GlobalChannelName to be an explicit nil
func (o *IPurchaseOrderByFilter) SetGlobalChannelNameNil() {
	o.GlobalChannelName.Set(nil)
}

// UnsetGlobalChannelName ensures that no value is present for GlobalChannelName, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetGlobalChannelName() {
	o.GlobalChannelName.Unset()
}

// GetGlobalChannelId returns the GlobalChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetGlobalChannelId() int32 {
	if o == nil || IsNil(o.GlobalChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.GlobalChannelId.Get()
}

// GetGlobalChannelIdOk returns a tuple with the GlobalChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetGlobalChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalChannelId.Get(), o.GlobalChannelId.IsSet()
}

// HasGlobalChannelId returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasGlobalChannelId() bool {
	if o != nil && o.GlobalChannelId.IsSet() {
		return true
	}

	return false
}

// SetGlobalChannelId gets a reference to the given NullableInt32 and assigns it to the GlobalChannelId field.
func (o *IPurchaseOrderByFilter) SetGlobalChannelId(v int32) {
	o.GlobalChannelId.Set(&v)
}
// SetGlobalChannelIdNil sets the value for GlobalChannelId to be an explicit nil
func (o *IPurchaseOrderByFilter) SetGlobalChannelIdNil() {
	o.GlobalChannelId.Set(nil)
}

// UnsetGlobalChannelId ensures that no value is present for GlobalChannelId, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetGlobalChannelId() {
	o.GlobalChannelId.Unset()
}

// GetChannelPurchaseOrderNo returns the ChannelPurchaseOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetChannelPurchaseOrderNo() string {
	if o == nil || IsNil(o.ChannelPurchaseOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelPurchaseOrderNo.Get()
}

// GetChannelPurchaseOrderNoOk returns a tuple with the ChannelPurchaseOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetChannelPurchaseOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelPurchaseOrderNo.Get(), o.ChannelPurchaseOrderNo.IsSet()
}

// HasChannelPurchaseOrderNo returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasChannelPurchaseOrderNo() bool {
	if o != nil && o.ChannelPurchaseOrderNo.IsSet() {
		return true
	}

	return false
}

// SetChannelPurchaseOrderNo gets a reference to the given NullableString and assigns it to the ChannelPurchaseOrderNo field.
func (o *IPurchaseOrderByFilter) SetChannelPurchaseOrderNo(v string) {
	o.ChannelPurchaseOrderNo.Set(&v)
}
// SetChannelPurchaseOrderNoNil sets the value for ChannelPurchaseOrderNo to be an explicit nil
func (o *IPurchaseOrderByFilter) SetChannelPurchaseOrderNoNil() {
	o.ChannelPurchaseOrderNo.Set(nil)
}

// UnsetChannelPurchaseOrderNo ensures that no value is present for ChannelPurchaseOrderNo, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetChannelPurchaseOrderNo() {
	o.ChannelPurchaseOrderNo.Unset()
}

// GetMerchantPurchaseOrderNo returns the MerchantPurchaseOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetMerchantPurchaseOrderNo() string {
	if o == nil || IsNil(o.MerchantPurchaseOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantPurchaseOrderNo.Get()
}

// GetMerchantPurchaseOrderNoOk returns a tuple with the MerchantPurchaseOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetMerchantPurchaseOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantPurchaseOrderNo.Get(), o.MerchantPurchaseOrderNo.IsSet()
}

// HasMerchantPurchaseOrderNo returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasMerchantPurchaseOrderNo() bool {
	if o != nil && o.MerchantPurchaseOrderNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantPurchaseOrderNo gets a reference to the given NullableString and assigns it to the MerchantPurchaseOrderNo field.
func (o *IPurchaseOrderByFilter) SetMerchantPurchaseOrderNo(v string) {
	o.MerchantPurchaseOrderNo.Set(&v)
}
// SetMerchantPurchaseOrderNoNil sets the value for MerchantPurchaseOrderNo to be an explicit nil
func (o *IPurchaseOrderByFilter) SetMerchantPurchaseOrderNoNil() {
	o.MerchantPurchaseOrderNo.Set(nil)
}

// UnsetMerchantPurchaseOrderNo ensures that no value is present for MerchantPurchaseOrderNo, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetMerchantPurchaseOrderNo() {
	o.MerchantPurchaseOrderNo.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetStatus() ModulesPurchaseOrderStatus {
	if o == nil || IsNil(o.Status) {
		var ret ModulesPurchaseOrderStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetStatusOk() (*ModulesPurchaseOrderStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ModulesPurchaseOrderStatus and assigns it to the Status field.
func (o *IPurchaseOrderByFilter) SetStatus(v ModulesPurchaseOrderStatus) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *IPurchaseOrderByFilter) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *IPurchaseOrderByFilter) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *IPurchaseOrderByFilter) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *IPurchaseOrderByFilter) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetType() ModulesPurchaseOrderType {
	if o == nil || IsNil(o.Type) {
		var ret ModulesPurchaseOrderType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetTypeOk() (*ModulesPurchaseOrderType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ModulesPurchaseOrderType and assigns it to the Type field.
func (o *IPurchaseOrderByFilter) SetType(v ModulesPurchaseOrderType) {
	o.Type = &v
}

// GetFromShipDate returns the FromShipDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetFromShipDate() time.Time {
	if o == nil || IsNil(o.FromShipDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FromShipDate.Get()
}

// GetFromShipDateOk returns a tuple with the FromShipDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetFromShipDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FromShipDate.Get(), o.FromShipDate.IsSet()
}

// HasFromShipDate returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasFromShipDate() bool {
	if o != nil && o.FromShipDate.IsSet() {
		return true
	}

	return false
}

// SetFromShipDate gets a reference to the given NullableTime and assigns it to the FromShipDate field.
func (o *IPurchaseOrderByFilter) SetFromShipDate(v time.Time) {
	o.FromShipDate.Set(&v)
}
// SetFromShipDateNil sets the value for FromShipDate to be an explicit nil
func (o *IPurchaseOrderByFilter) SetFromShipDateNil() {
	o.FromShipDate.Set(nil)
}

// UnsetFromShipDate ensures that no value is present for FromShipDate, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetFromShipDate() {
	o.FromShipDate.Unset()
}

// GetToShipDate returns the ToShipDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetToShipDate() time.Time {
	if o == nil || IsNil(o.ToShipDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ToShipDate.Get()
}

// GetToShipDateOk returns a tuple with the ToShipDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetToShipDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToShipDate.Get(), o.ToShipDate.IsSet()
}

// HasToShipDate returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasToShipDate() bool {
	if o != nil && o.ToShipDate.IsSet() {
		return true
	}

	return false
}

// SetToShipDate gets a reference to the given NullableTime and assigns it to the ToShipDate field.
func (o *IPurchaseOrderByFilter) SetToShipDate(v time.Time) {
	o.ToShipDate.Set(&v)
}
// SetToShipDateNil sets the value for ToShipDate to be an explicit nil
func (o *IPurchaseOrderByFilter) SetToShipDateNil() {
	o.ToShipDate.Set(nil)
}

// UnsetToShipDate ensures that no value is present for ToShipDate, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetToShipDate() {
	o.ToShipDate.Unset()
}

// GetFromDeliveryDate returns the FromDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetFromDeliveryDate() time.Time {
	if o == nil || IsNil(o.FromDeliveryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FromDeliveryDate.Get()
}

// GetFromDeliveryDateOk returns a tuple with the FromDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetFromDeliveryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FromDeliveryDate.Get(), o.FromDeliveryDate.IsSet()
}

// HasFromDeliveryDate returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasFromDeliveryDate() bool {
	if o != nil && o.FromDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetFromDeliveryDate gets a reference to the given NullableTime and assigns it to the FromDeliveryDate field.
func (o *IPurchaseOrderByFilter) SetFromDeliveryDate(v time.Time) {
	o.FromDeliveryDate.Set(&v)
}
// SetFromDeliveryDateNil sets the value for FromDeliveryDate to be an explicit nil
func (o *IPurchaseOrderByFilter) SetFromDeliveryDateNil() {
	o.FromDeliveryDate.Set(nil)
}

// UnsetFromDeliveryDate ensures that no value is present for FromDeliveryDate, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetFromDeliveryDate() {
	o.FromDeliveryDate.Unset()
}

// GetToDeliveryDate returns the ToDeliveryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetToDeliveryDate() time.Time {
	if o == nil || IsNil(o.ToDeliveryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ToDeliveryDate.Get()
}

// GetToDeliveryDateOk returns a tuple with the ToDeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetToDeliveryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToDeliveryDate.Get(), o.ToDeliveryDate.IsSet()
}

// HasToDeliveryDate returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasToDeliveryDate() bool {
	if o != nil && o.ToDeliveryDate.IsSet() {
		return true
	}

	return false
}

// SetToDeliveryDate gets a reference to the given NullableTime and assigns it to the ToDeliveryDate field.
func (o *IPurchaseOrderByFilter) SetToDeliveryDate(v time.Time) {
	o.ToDeliveryDate.Set(&v)
}
// SetToDeliveryDateNil sets the value for ToDeliveryDate to be an explicit nil
func (o *IPurchaseOrderByFilter) SetToDeliveryDateNil() {
	o.ToDeliveryDate.Set(nil)
}

// UnsetToDeliveryDate ensures that no value is present for ToDeliveryDate, not even an explicit nil
func (o *IPurchaseOrderByFilter) UnsetToDeliveryDate() {
	o.ToDeliveryDate.Unset()
}

// GetImportInformation returns the ImportInformation field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetImportInformation() IImportInformation {
	if o == nil || IsNil(o.ImportInformation) {
		var ret IImportInformation
		return ret
	}
	return *o.ImportInformation
}

// GetImportInformationOk returns a tuple with the ImportInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetImportInformationOk() (*IImportInformation, bool) {
	if o == nil || IsNil(o.ImportInformation) {
		return nil, false
	}
	return o.ImportInformation, true
}

// HasImportInformation returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasImportInformation() bool {
	if o != nil && !IsNil(o.ImportInformation) {
		return true
	}

	return false
}

// SetImportInformation gets a reference to the given IImportInformation and assigns it to the ImportInformation field.
func (o *IPurchaseOrderByFilter) SetImportInformation(v IImportInformation) {
	o.ImportInformation = &v
}

// GetSellingParty returns the SellingParty field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetSellingParty() IVendorParty {
	if o == nil || IsNil(o.SellingParty) {
		var ret IVendorParty
		return ret
	}
	return *o.SellingParty
}

// GetSellingPartyOk returns a tuple with the SellingParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetSellingPartyOk() (*IVendorParty, bool) {
	if o == nil || IsNil(o.SellingParty) {
		return nil, false
	}
	return o.SellingParty, true
}

// HasSellingParty returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasSellingParty() bool {
	if o != nil && !IsNil(o.SellingParty) {
		return true
	}

	return false
}

// SetSellingParty gets a reference to the given IVendorParty and assigns it to the SellingParty field.
func (o *IPurchaseOrderByFilter) SetSellingParty(v IVendorParty) {
	o.SellingParty = &v
}

// GetShipToParty returns the ShipToParty field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetShipToParty() IVendorParty {
	if o == nil || IsNil(o.ShipToParty) {
		var ret IVendorParty
		return ret
	}
	return *o.ShipToParty
}

// GetShipToPartyOk returns a tuple with the ShipToParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetShipToPartyOk() (*IVendorParty, bool) {
	if o == nil || IsNil(o.ShipToParty) {
		return nil, false
	}
	return o.ShipToParty, true
}

// HasShipToParty returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasShipToParty() bool {
	if o != nil && !IsNil(o.ShipToParty) {
		return true
	}

	return false
}

// SetShipToParty gets a reference to the given IVendorParty and assigns it to the ShipToParty field.
func (o *IPurchaseOrderByFilter) SetShipToParty(v IVendorParty) {
	o.ShipToParty = &v
}

// GetBuyingParty returns the BuyingParty field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetBuyingParty() IVendorParty {
	if o == nil || IsNil(o.BuyingParty) {
		var ret IVendorParty
		return ret
	}
	return *o.BuyingParty
}

// GetBuyingPartyOk returns a tuple with the BuyingParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetBuyingPartyOk() (*IVendorParty, bool) {
	if o == nil || IsNil(o.BuyingParty) {
		return nil, false
	}
	return o.BuyingParty, true
}

// HasBuyingParty returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasBuyingParty() bool {
	if o != nil && !IsNil(o.BuyingParty) {
		return true
	}

	return false
}

// SetBuyingParty gets a reference to the given IVendorParty and assigns it to the BuyingParty field.
func (o *IPurchaseOrderByFilter) SetBuyingParty(v IVendorParty) {
	o.BuyingParty = &v
}

// GetBillingParty returns the BillingParty field value if set, zero value otherwise.
func (o *IPurchaseOrderByFilter) GetBillingParty() IVendorParty {
	if o == nil || IsNil(o.BillingParty) {
		var ret IVendorParty
		return ret
	}
	return *o.BillingParty
}

// GetBillingPartyOk returns a tuple with the BillingParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPurchaseOrderByFilter) GetBillingPartyOk() (*IVendorParty, bool) {
	if o == nil || IsNil(o.BillingParty) {
		return nil, false
	}
	return o.BillingParty, true
}

// HasBillingParty returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasBillingParty() bool {
	if o != nil && !IsNil(o.BillingParty) {
		return true
	}

	return false
}

// SetBillingParty gets a reference to the given IVendorParty and assigns it to the BillingParty field.
func (o *IPurchaseOrderByFilter) SetBillingParty(v IVendorParty) {
	o.BillingParty = &v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPurchaseOrderByFilter) GetLines() []IPurchaseOrderLineByFilter {
	if o == nil {
		var ret []IPurchaseOrderLineByFilter
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPurchaseOrderByFilter) GetLinesOk() ([]IPurchaseOrderLineByFilter, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *IPurchaseOrderByFilter) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []IPurchaseOrderLineByFilter and assigns it to the Lines field.
func (o *IPurchaseOrderByFilter) SetLines(v []IPurchaseOrderLineByFilter) {
	o.Lines = v
}

func (o IPurchaseOrderByFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPurchaseOrderByFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if o.ChannelName.IsSet() {
		toSerialize["ChannelName"] = o.ChannelName.Get()
	}
	if o.GlobalChannelName.IsSet() {
		toSerialize["GlobalChannelName"] = o.GlobalChannelName.Get()
	}
	if o.GlobalChannelId.IsSet() {
		toSerialize["GlobalChannelId"] = o.GlobalChannelId.Get()
	}
	if o.ChannelPurchaseOrderNo.IsSet() {
		toSerialize["ChannelPurchaseOrderNo"] = o.ChannelPurchaseOrderNo.Get()
	}
	if o.MerchantPurchaseOrderNo.IsSet() {
		toSerialize["MerchantPurchaseOrderNo"] = o.MerchantPurchaseOrderNo.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if o.CreatedAt.IsSet() {
		toSerialize["CreatedAt"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["UpdatedAt"] = o.UpdatedAt.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if o.FromShipDate.IsSet() {
		toSerialize["FromShipDate"] = o.FromShipDate.Get()
	}
	if o.ToShipDate.IsSet() {
		toSerialize["ToShipDate"] = o.ToShipDate.Get()
	}
	if o.FromDeliveryDate.IsSet() {
		toSerialize["FromDeliveryDate"] = o.FromDeliveryDate.Get()
	}
	if o.ToDeliveryDate.IsSet() {
		toSerialize["ToDeliveryDate"] = o.ToDeliveryDate.Get()
	}
	if !IsNil(o.ImportInformation) {
		toSerialize["ImportInformation"] = o.ImportInformation
	}
	if !IsNil(o.SellingParty) {
		toSerialize["SellingParty"] = o.SellingParty
	}
	if !IsNil(o.ShipToParty) {
		toSerialize["ShipToParty"] = o.ShipToParty
	}
	if !IsNil(o.BuyingParty) {
		toSerialize["BuyingParty"] = o.BuyingParty
	}
	if !IsNil(o.BillingParty) {
		toSerialize["BillingParty"] = o.BillingParty
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	return toSerialize, nil
}

type NullableIPurchaseOrderByFilter struct {
	value *IPurchaseOrderByFilter
	isSet bool
}

func (v NullableIPurchaseOrderByFilter) Get() *IPurchaseOrderByFilter {
	return v.value
}

func (v *NullableIPurchaseOrderByFilter) Set(val *IPurchaseOrderByFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIPurchaseOrderByFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIPurchaseOrderByFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPurchaseOrderByFilter(val *IPurchaseOrderByFilter) *NullableIPurchaseOrderByFilter {
	return &NullableIPurchaseOrderByFilter{value: val, isSet: true}
}

func (v NullableIPurchaseOrderByFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPurchaseOrderByFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


