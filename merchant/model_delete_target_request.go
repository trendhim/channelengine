/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the DeleteTargetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteTargetRequest{}

// DeleteTargetRequest struct for DeleteTargetRequest
type DeleteTargetRequest struct {
	ChannelId NullableInt32 `json:"ChannelId,omitempty"`
	Targets []DeleteTargetView `json:"Targets,omitempty"`
}

// NewDeleteTargetRequest instantiates a new DeleteTargetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTargetRequest() *DeleteTargetRequest {
	this := DeleteTargetRequest{}
	return &this
}

// NewDeleteTargetRequestWithDefaults instantiates a new DeleteTargetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTargetRequestWithDefaults() *DeleteTargetRequest {
	this := DeleteTargetRequest{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteTargetRequest) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId.Get()) {
		var ret int32
		return ret
	}
	return *o.ChannelId.Get()
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteTargetRequest) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelId.Get(), o.ChannelId.IsSet()
}

// HasChannelId returns a boolean if a field has been set.
func (o *DeleteTargetRequest) HasChannelId() bool {
	if o != nil && o.ChannelId.IsSet() {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given NullableInt32 and assigns it to the ChannelId field.
func (o *DeleteTargetRequest) SetChannelId(v int32) {
	o.ChannelId.Set(&v)
}
// SetChannelIdNil sets the value for ChannelId to be an explicit nil
func (o *DeleteTargetRequest) SetChannelIdNil() {
	o.ChannelId.Set(nil)
}

// UnsetChannelId ensures that no value is present for ChannelId, not even an explicit nil
func (o *DeleteTargetRequest) UnsetChannelId() {
	o.ChannelId.Unset()
}

// GetTargets returns the Targets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteTargetRequest) GetTargets() []DeleteTargetView {
	if o == nil {
		var ret []DeleteTargetView
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteTargetRequest) GetTargetsOk() ([]DeleteTargetView, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *DeleteTargetRequest) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []DeleteTargetView and assigns it to the Targets field.
func (o *DeleteTargetRequest) SetTargets(v []DeleteTargetView) {
	o.Targets = v
}

func (o DeleteTargetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteTargetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelId.IsSet() {
		toSerialize["ChannelId"] = o.ChannelId.Get()
	}
	if o.Targets != nil {
		toSerialize["Targets"] = o.Targets
	}
	return toSerialize, nil
}

type NullableDeleteTargetRequest struct {
	value *DeleteTargetRequest
	isSet bool
}

func (v NullableDeleteTargetRequest) Get() *DeleteTargetRequest {
	return v.value
}

func (v *NullableDeleteTargetRequest) Set(val *DeleteTargetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTargetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTargetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTargetRequest(val *DeleteTargetRequest) *NullableDeleteTargetRequest {
	return &NullableDeleteTargetRequest{value: val, isSet: true}
}

func (v NullableDeleteTargetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTargetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


