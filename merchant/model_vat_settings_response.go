/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the VatSettingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VatSettingsResponse{}

// VatSettingsResponse struct for VatSettingsResponse
type VatSettingsResponse struct {
	CountryIso NullableString `json:"CountryIso,omitempty"`
	No NullableString `json:"No,omitempty"`
	StandardRate *float32 `json:"StandardRate,omitempty"`
	ReducedRate NullableFloat32 `json:"ReducedRate,omitempty"`
	SuperReducedRate NullableFloat32 `json:"SuperReducedRate,omitempty"`
}

// NewVatSettingsResponse instantiates a new VatSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVatSettingsResponse() *VatSettingsResponse {
	this := VatSettingsResponse{}
	return &this
}

// NewVatSettingsResponseWithDefaults instantiates a new VatSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVatSettingsResponseWithDefaults() *VatSettingsResponse {
	this := VatSettingsResponse{}
	return &this
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VatSettingsResponse) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso.Get()) {
		var ret string
		return ret
	}
	return *o.CountryIso.Get()
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VatSettingsResponse) GetCountryIsoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryIso.Get(), o.CountryIso.IsSet()
}

// HasCountryIso returns a boolean if a field has been set.
func (o *VatSettingsResponse) HasCountryIso() bool {
	if o != nil && o.CountryIso.IsSet() {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given NullableString and assigns it to the CountryIso field.
func (o *VatSettingsResponse) SetCountryIso(v string) {
	o.CountryIso.Set(&v)
}
// SetCountryIsoNil sets the value for CountryIso to be an explicit nil
func (o *VatSettingsResponse) SetCountryIsoNil() {
	o.CountryIso.Set(nil)
}

// UnsetCountryIso ensures that no value is present for CountryIso, not even an explicit nil
func (o *VatSettingsResponse) UnsetCountryIso() {
	o.CountryIso.Unset()
}

// GetNo returns the No field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VatSettingsResponse) GetNo() string {
	if o == nil || IsNil(o.No.Get()) {
		var ret string
		return ret
	}
	return *o.No.Get()
}

// GetNoOk returns a tuple with the No field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VatSettingsResponse) GetNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.No.Get(), o.No.IsSet()
}

// HasNo returns a boolean if a field has been set.
func (o *VatSettingsResponse) HasNo() bool {
	if o != nil && o.No.IsSet() {
		return true
	}

	return false
}

// SetNo gets a reference to the given NullableString and assigns it to the No field.
func (o *VatSettingsResponse) SetNo(v string) {
	o.No.Set(&v)
}
// SetNoNil sets the value for No to be an explicit nil
func (o *VatSettingsResponse) SetNoNil() {
	o.No.Set(nil)
}

// UnsetNo ensures that no value is present for No, not even an explicit nil
func (o *VatSettingsResponse) UnsetNo() {
	o.No.Unset()
}

// GetStandardRate returns the StandardRate field value if set, zero value otherwise.
func (o *VatSettingsResponse) GetStandardRate() float32 {
	if o == nil || IsNil(o.StandardRate) {
		var ret float32
		return ret
	}
	return *o.StandardRate
}

// GetStandardRateOk returns a tuple with the StandardRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VatSettingsResponse) GetStandardRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StandardRate) {
		return nil, false
	}
	return o.StandardRate, true
}

// HasStandardRate returns a boolean if a field has been set.
func (o *VatSettingsResponse) HasStandardRate() bool {
	if o != nil && !IsNil(o.StandardRate) {
		return true
	}

	return false
}

// SetStandardRate gets a reference to the given float32 and assigns it to the StandardRate field.
func (o *VatSettingsResponse) SetStandardRate(v float32) {
	o.StandardRate = &v
}

// GetReducedRate returns the ReducedRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VatSettingsResponse) GetReducedRate() float32 {
	if o == nil || IsNil(o.ReducedRate.Get()) {
		var ret float32
		return ret
	}
	return *o.ReducedRate.Get()
}

// GetReducedRateOk returns a tuple with the ReducedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VatSettingsResponse) GetReducedRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReducedRate.Get(), o.ReducedRate.IsSet()
}

// HasReducedRate returns a boolean if a field has been set.
func (o *VatSettingsResponse) HasReducedRate() bool {
	if o != nil && o.ReducedRate.IsSet() {
		return true
	}

	return false
}

// SetReducedRate gets a reference to the given NullableFloat32 and assigns it to the ReducedRate field.
func (o *VatSettingsResponse) SetReducedRate(v float32) {
	o.ReducedRate.Set(&v)
}
// SetReducedRateNil sets the value for ReducedRate to be an explicit nil
func (o *VatSettingsResponse) SetReducedRateNil() {
	o.ReducedRate.Set(nil)
}

// UnsetReducedRate ensures that no value is present for ReducedRate, not even an explicit nil
func (o *VatSettingsResponse) UnsetReducedRate() {
	o.ReducedRate.Unset()
}

// GetSuperReducedRate returns the SuperReducedRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VatSettingsResponse) GetSuperReducedRate() float32 {
	if o == nil || IsNil(o.SuperReducedRate.Get()) {
		var ret float32
		return ret
	}
	return *o.SuperReducedRate.Get()
}

// GetSuperReducedRateOk returns a tuple with the SuperReducedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VatSettingsResponse) GetSuperReducedRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuperReducedRate.Get(), o.SuperReducedRate.IsSet()
}

// HasSuperReducedRate returns a boolean if a field has been set.
func (o *VatSettingsResponse) HasSuperReducedRate() bool {
	if o != nil && o.SuperReducedRate.IsSet() {
		return true
	}

	return false
}

// SetSuperReducedRate gets a reference to the given NullableFloat32 and assigns it to the SuperReducedRate field.
func (o *VatSettingsResponse) SetSuperReducedRate(v float32) {
	o.SuperReducedRate.Set(&v)
}
// SetSuperReducedRateNil sets the value for SuperReducedRate to be an explicit nil
func (o *VatSettingsResponse) SetSuperReducedRateNil() {
	o.SuperReducedRate.Set(nil)
}

// UnsetSuperReducedRate ensures that no value is present for SuperReducedRate, not even an explicit nil
func (o *VatSettingsResponse) UnsetSuperReducedRate() {
	o.SuperReducedRate.Unset()
}

func (o VatSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VatSettingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CountryIso.IsSet() {
		toSerialize["CountryIso"] = o.CountryIso.Get()
	}
	if o.No.IsSet() {
		toSerialize["No"] = o.No.Get()
	}
	if !IsNil(o.StandardRate) {
		toSerialize["StandardRate"] = o.StandardRate
	}
	if o.ReducedRate.IsSet() {
		toSerialize["ReducedRate"] = o.ReducedRate.Get()
	}
	if o.SuperReducedRate.IsSet() {
		toSerialize["SuperReducedRate"] = o.SuperReducedRate.Get()
	}
	return toSerialize, nil
}

type NullableVatSettingsResponse struct {
	value *VatSettingsResponse
	isSet bool
}

func (v NullableVatSettingsResponse) Get() *VatSettingsResponse {
	return v.value
}

func (v *NullableVatSettingsResponse) Set(val *VatSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVatSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVatSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVatSettingsResponse(val *VatSettingsResponse) *NullableVatSettingsResponse {
	return &NullableVatSettingsResponse{value: val, isSet: true}
}

func (v NullableVatSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVatSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


