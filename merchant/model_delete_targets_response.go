/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
)

// checks if the DeleteTargetsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteTargetsResponse{}

// DeleteTargetsResponse struct for DeleteTargetsResponse
type DeleteTargetsResponse struct {
	DeletedTargets []DeleteTargetResponseVm `json:"DeletedTargets,omitempty"`
	NotExistingTargets []DeleteTargetResponseVm `json:"NotExistingTargets,omitempty"`
}

// NewDeleteTargetsResponse instantiates a new DeleteTargetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTargetsResponse() *DeleteTargetsResponse {
	this := DeleteTargetsResponse{}
	return &this
}

// NewDeleteTargetsResponseWithDefaults instantiates a new DeleteTargetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTargetsResponseWithDefaults() *DeleteTargetsResponse {
	this := DeleteTargetsResponse{}
	return &this
}

// GetDeletedTargets returns the DeletedTargets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteTargetsResponse) GetDeletedTargets() []DeleteTargetResponseVm {
	if o == nil {
		var ret []DeleteTargetResponseVm
		return ret
	}
	return o.DeletedTargets
}

// GetDeletedTargetsOk returns a tuple with the DeletedTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteTargetsResponse) GetDeletedTargetsOk() ([]DeleteTargetResponseVm, bool) {
	if o == nil || IsNil(o.DeletedTargets) {
		return nil, false
	}
	return o.DeletedTargets, true
}

// HasDeletedTargets returns a boolean if a field has been set.
func (o *DeleteTargetsResponse) HasDeletedTargets() bool {
	if o != nil && !IsNil(o.DeletedTargets) {
		return true
	}

	return false
}

// SetDeletedTargets gets a reference to the given []DeleteTargetResponseVm and assigns it to the DeletedTargets field.
func (o *DeleteTargetsResponse) SetDeletedTargets(v []DeleteTargetResponseVm) {
	o.DeletedTargets = v
}

// GetNotExistingTargets returns the NotExistingTargets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteTargetsResponse) GetNotExistingTargets() []DeleteTargetResponseVm {
	if o == nil {
		var ret []DeleteTargetResponseVm
		return ret
	}
	return o.NotExistingTargets
}

// GetNotExistingTargetsOk returns a tuple with the NotExistingTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteTargetsResponse) GetNotExistingTargetsOk() ([]DeleteTargetResponseVm, bool) {
	if o == nil || IsNil(o.NotExistingTargets) {
		return nil, false
	}
	return o.NotExistingTargets, true
}

// HasNotExistingTargets returns a boolean if a field has been set.
func (o *DeleteTargetsResponse) HasNotExistingTargets() bool {
	if o != nil && !IsNil(o.NotExistingTargets) {
		return true
	}

	return false
}

// SetNotExistingTargets gets a reference to the given []DeleteTargetResponseVm and assigns it to the NotExistingTargets field.
func (o *DeleteTargetsResponse) SetNotExistingTargets(v []DeleteTargetResponseVm) {
	o.NotExistingTargets = v
}

func (o DeleteTargetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteTargetsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeletedTargets != nil {
		toSerialize["DeletedTargets"] = o.DeletedTargets
	}
	if o.NotExistingTargets != nil {
		toSerialize["NotExistingTargets"] = o.NotExistingTargets
	}
	return toSerialize, nil
}

type NullableDeleteTargetsResponse struct {
	value *DeleteTargetsResponse
	isSet bool
}

func (v NullableDeleteTargetsResponse) Get() *DeleteTargetsResponse {
	return v.value
}

func (v *NullableDeleteTargetsResponse) Set(val *DeleteTargetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTargetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTargetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTargetsResponse(val *DeleteTargetsResponse) *NullableDeleteTargetsResponse {
	return &NullableDeleteTargetsResponse{value: val, isSet: true}
}

func (v NullableDeleteTargetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTargetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


