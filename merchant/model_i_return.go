/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the IReturn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IReturn{}

// IReturn struct for IReturn
type IReturn struct {
	Lines []IReturnLine `json:"Lines,omitempty"`
	Id *int32 `json:"Id,omitempty"`
	Status *ModuleReturnStatus `json:"Status,omitempty"`
	ChannelExportStatus *ChannelExportStatus `json:"ChannelExportStatus,omitempty"`
	Reason *ModuleReturnReason `json:"Reason,omitempty"`
	MerchantComment NullableString `json:"MerchantComment,omitempty"`
	MerchantReturnNo NullableString `json:"MerchantReturnNo,omitempty"`
	ChannelReturnNo NullableString `json:"ChannelReturnNo,omitempty"`
	ChannelOrderNo NullableString `json:"ChannelOrderNo,omitempty"`
	CreatedByType *CreatedByType `json:"CreatedByType,omitempty"`
	ReturnDate *time.Time `json:"ReturnDate,omitempty"`
	OrderDate NullableTime `json:"OrderDate,omitempty"`
	ExternalBatchNo NullableString `json:"ExternalBatchNo,omitempty"`
	ChannelAcknowledgedDate NullableTime `json:"ChannelAcknowledgedDate,omitempty"`
	MerchantAcknowledgedDate NullableTime `json:"MerchantAcknowledgedDate,omitempty"`
	OrderId *int32 `json:"OrderId,omitempty"`
	ChannelId *int32 `json:"ChannelId,omitempty"`
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	DeletedAt NullableTime `json:"DeletedAt,omitempty"`
}

// NewIReturn instantiates a new IReturn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIReturn() *IReturn {
	this := IReturn{}
	return &this
}

// NewIReturnWithDefaults instantiates a new IReturn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIReturnWithDefaults() *IReturn {
	this := IReturn{}
	return &this
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetLines() []IReturnLine {
	if o == nil {
		var ret []IReturnLine
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetLinesOk() ([]IReturnLine, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *IReturn) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []IReturnLine and assigns it to the Lines field.
func (o *IReturn) SetLines(v []IReturnLine) {
	o.Lines = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IReturn) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IReturn) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IReturn) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IReturn) GetStatus() ModuleReturnStatus {
	if o == nil || IsNil(o.Status) {
		var ret ModuleReturnStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetStatusOk() (*ModuleReturnStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IReturn) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ModuleReturnStatus and assigns it to the Status field.
func (o *IReturn) SetStatus(v ModuleReturnStatus) {
	o.Status = &v
}

// GetChannelExportStatus returns the ChannelExportStatus field value if set, zero value otherwise.
func (o *IReturn) GetChannelExportStatus() ChannelExportStatus {
	if o == nil || IsNil(o.ChannelExportStatus) {
		var ret ChannelExportStatus
		return ret
	}
	return *o.ChannelExportStatus
}

// GetChannelExportStatusOk returns a tuple with the ChannelExportStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetChannelExportStatusOk() (*ChannelExportStatus, bool) {
	if o == nil || IsNil(o.ChannelExportStatus) {
		return nil, false
	}
	return o.ChannelExportStatus, true
}

// HasChannelExportStatus returns a boolean if a field has been set.
func (o *IReturn) HasChannelExportStatus() bool {
	if o != nil && !IsNil(o.ChannelExportStatus) {
		return true
	}

	return false
}

// SetChannelExportStatus gets a reference to the given ChannelExportStatus and assigns it to the ChannelExportStatus field.
func (o *IReturn) SetChannelExportStatus(v ChannelExportStatus) {
	o.ChannelExportStatus = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *IReturn) GetReason() ModuleReturnReason {
	if o == nil || IsNil(o.Reason) {
		var ret ModuleReturnReason
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetReasonOk() (*ModuleReturnReason, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *IReturn) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given ModuleReturnReason and assigns it to the Reason field.
func (o *IReturn) SetReason(v ModuleReturnReason) {
	o.Reason = &v
}

// GetMerchantComment returns the MerchantComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetMerchantComment() string {
	if o == nil || IsNil(o.MerchantComment.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantComment.Get()
}

// GetMerchantCommentOk returns a tuple with the MerchantComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetMerchantCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantComment.Get(), o.MerchantComment.IsSet()
}

// HasMerchantComment returns a boolean if a field has been set.
func (o *IReturn) HasMerchantComment() bool {
	if o != nil && o.MerchantComment.IsSet() {
		return true
	}

	return false
}

// SetMerchantComment gets a reference to the given NullableString and assigns it to the MerchantComment field.
func (o *IReturn) SetMerchantComment(v string) {
	o.MerchantComment.Set(&v)
}
// SetMerchantCommentNil sets the value for MerchantComment to be an explicit nil
func (o *IReturn) SetMerchantCommentNil() {
	o.MerchantComment.Set(nil)
}

// UnsetMerchantComment ensures that no value is present for MerchantComment, not even an explicit nil
func (o *IReturn) UnsetMerchantComment() {
	o.MerchantComment.Unset()
}

// GetMerchantReturnNo returns the MerchantReturnNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetMerchantReturnNo() string {
	if o == nil || IsNil(o.MerchantReturnNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantReturnNo.Get()
}

// GetMerchantReturnNoOk returns a tuple with the MerchantReturnNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetMerchantReturnNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantReturnNo.Get(), o.MerchantReturnNo.IsSet()
}

// HasMerchantReturnNo returns a boolean if a field has been set.
func (o *IReturn) HasMerchantReturnNo() bool {
	if o != nil && o.MerchantReturnNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantReturnNo gets a reference to the given NullableString and assigns it to the MerchantReturnNo field.
func (o *IReturn) SetMerchantReturnNo(v string) {
	o.MerchantReturnNo.Set(&v)
}
// SetMerchantReturnNoNil sets the value for MerchantReturnNo to be an explicit nil
func (o *IReturn) SetMerchantReturnNoNil() {
	o.MerchantReturnNo.Set(nil)
}

// UnsetMerchantReturnNo ensures that no value is present for MerchantReturnNo, not even an explicit nil
func (o *IReturn) UnsetMerchantReturnNo() {
	o.MerchantReturnNo.Unset()
}

// GetChannelReturnNo returns the ChannelReturnNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetChannelReturnNo() string {
	if o == nil || IsNil(o.ChannelReturnNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelReturnNo.Get()
}

// GetChannelReturnNoOk returns a tuple with the ChannelReturnNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetChannelReturnNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelReturnNo.Get(), o.ChannelReturnNo.IsSet()
}

// HasChannelReturnNo returns a boolean if a field has been set.
func (o *IReturn) HasChannelReturnNo() bool {
	if o != nil && o.ChannelReturnNo.IsSet() {
		return true
	}

	return false
}

// SetChannelReturnNo gets a reference to the given NullableString and assigns it to the ChannelReturnNo field.
func (o *IReturn) SetChannelReturnNo(v string) {
	o.ChannelReturnNo.Set(&v)
}
// SetChannelReturnNoNil sets the value for ChannelReturnNo to be an explicit nil
func (o *IReturn) SetChannelReturnNoNil() {
	o.ChannelReturnNo.Set(nil)
}

// UnsetChannelReturnNo ensures that no value is present for ChannelReturnNo, not even an explicit nil
func (o *IReturn) UnsetChannelReturnNo() {
	o.ChannelReturnNo.Unset()
}

// GetChannelOrderNo returns the ChannelOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetChannelOrderNo() string {
	if o == nil || IsNil(o.ChannelOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelOrderNo.Get()
}

// GetChannelOrderNoOk returns a tuple with the ChannelOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetChannelOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelOrderNo.Get(), o.ChannelOrderNo.IsSet()
}

// HasChannelOrderNo returns a boolean if a field has been set.
func (o *IReturn) HasChannelOrderNo() bool {
	if o != nil && o.ChannelOrderNo.IsSet() {
		return true
	}

	return false
}

// SetChannelOrderNo gets a reference to the given NullableString and assigns it to the ChannelOrderNo field.
func (o *IReturn) SetChannelOrderNo(v string) {
	o.ChannelOrderNo.Set(&v)
}
// SetChannelOrderNoNil sets the value for ChannelOrderNo to be an explicit nil
func (o *IReturn) SetChannelOrderNoNil() {
	o.ChannelOrderNo.Set(nil)
}

// UnsetChannelOrderNo ensures that no value is present for ChannelOrderNo, not even an explicit nil
func (o *IReturn) UnsetChannelOrderNo() {
	o.ChannelOrderNo.Unset()
}

// GetCreatedByType returns the CreatedByType field value if set, zero value otherwise.
func (o *IReturn) GetCreatedByType() CreatedByType {
	if o == nil || IsNil(o.CreatedByType) {
		var ret CreatedByType
		return ret
	}
	return *o.CreatedByType
}

// GetCreatedByTypeOk returns a tuple with the CreatedByType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetCreatedByTypeOk() (*CreatedByType, bool) {
	if o == nil || IsNil(o.CreatedByType) {
		return nil, false
	}
	return o.CreatedByType, true
}

// HasCreatedByType returns a boolean if a field has been set.
func (o *IReturn) HasCreatedByType() bool {
	if o != nil && !IsNil(o.CreatedByType) {
		return true
	}

	return false
}

// SetCreatedByType gets a reference to the given CreatedByType and assigns it to the CreatedByType field.
func (o *IReturn) SetCreatedByType(v CreatedByType) {
	o.CreatedByType = &v
}

// GetReturnDate returns the ReturnDate field value if set, zero value otherwise.
func (o *IReturn) GetReturnDate() time.Time {
	if o == nil || IsNil(o.ReturnDate) {
		var ret time.Time
		return ret
	}
	return *o.ReturnDate
}

// GetReturnDateOk returns a tuple with the ReturnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetReturnDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReturnDate) {
		return nil, false
	}
	return o.ReturnDate, true
}

// HasReturnDate returns a boolean if a field has been set.
func (o *IReturn) HasReturnDate() bool {
	if o != nil && !IsNil(o.ReturnDate) {
		return true
	}

	return false
}

// SetReturnDate gets a reference to the given time.Time and assigns it to the ReturnDate field.
func (o *IReturn) SetReturnDate(v time.Time) {
	o.ReturnDate = &v
}

// GetOrderDate returns the OrderDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetOrderDate() time.Time {
	if o == nil || IsNil(o.OrderDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.OrderDate.Get()
}

// GetOrderDateOk returns a tuple with the OrderDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetOrderDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderDate.Get(), o.OrderDate.IsSet()
}

// HasOrderDate returns a boolean if a field has been set.
func (o *IReturn) HasOrderDate() bool {
	if o != nil && o.OrderDate.IsSet() {
		return true
	}

	return false
}

// SetOrderDate gets a reference to the given NullableTime and assigns it to the OrderDate field.
func (o *IReturn) SetOrderDate(v time.Time) {
	o.OrderDate.Set(&v)
}
// SetOrderDateNil sets the value for OrderDate to be an explicit nil
func (o *IReturn) SetOrderDateNil() {
	o.OrderDate.Set(nil)
}

// UnsetOrderDate ensures that no value is present for OrderDate, not even an explicit nil
func (o *IReturn) UnsetOrderDate() {
	o.OrderDate.Unset()
}

// GetExternalBatchNo returns the ExternalBatchNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetExternalBatchNo() string {
	if o == nil || IsNil(o.ExternalBatchNo.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalBatchNo.Get()
}

// GetExternalBatchNoOk returns a tuple with the ExternalBatchNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetExternalBatchNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalBatchNo.Get(), o.ExternalBatchNo.IsSet()
}

// HasExternalBatchNo returns a boolean if a field has been set.
func (o *IReturn) HasExternalBatchNo() bool {
	if o != nil && o.ExternalBatchNo.IsSet() {
		return true
	}

	return false
}

// SetExternalBatchNo gets a reference to the given NullableString and assigns it to the ExternalBatchNo field.
func (o *IReturn) SetExternalBatchNo(v string) {
	o.ExternalBatchNo.Set(&v)
}
// SetExternalBatchNoNil sets the value for ExternalBatchNo to be an explicit nil
func (o *IReturn) SetExternalBatchNoNil() {
	o.ExternalBatchNo.Set(nil)
}

// UnsetExternalBatchNo ensures that no value is present for ExternalBatchNo, not even an explicit nil
func (o *IReturn) UnsetExternalBatchNo() {
	o.ExternalBatchNo.Unset()
}

// GetChannelAcknowledgedDate returns the ChannelAcknowledgedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetChannelAcknowledgedDate() time.Time {
	if o == nil || IsNil(o.ChannelAcknowledgedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ChannelAcknowledgedDate.Get()
}

// GetChannelAcknowledgedDateOk returns a tuple with the ChannelAcknowledgedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetChannelAcknowledgedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelAcknowledgedDate.Get(), o.ChannelAcknowledgedDate.IsSet()
}

// HasChannelAcknowledgedDate returns a boolean if a field has been set.
func (o *IReturn) HasChannelAcknowledgedDate() bool {
	if o != nil && o.ChannelAcknowledgedDate.IsSet() {
		return true
	}

	return false
}

// SetChannelAcknowledgedDate gets a reference to the given NullableTime and assigns it to the ChannelAcknowledgedDate field.
func (o *IReturn) SetChannelAcknowledgedDate(v time.Time) {
	o.ChannelAcknowledgedDate.Set(&v)
}
// SetChannelAcknowledgedDateNil sets the value for ChannelAcknowledgedDate to be an explicit nil
func (o *IReturn) SetChannelAcknowledgedDateNil() {
	o.ChannelAcknowledgedDate.Set(nil)
}

// UnsetChannelAcknowledgedDate ensures that no value is present for ChannelAcknowledgedDate, not even an explicit nil
func (o *IReturn) UnsetChannelAcknowledgedDate() {
	o.ChannelAcknowledgedDate.Unset()
}

// GetMerchantAcknowledgedDate returns the MerchantAcknowledgedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetMerchantAcknowledgedDate() time.Time {
	if o == nil || IsNil(o.MerchantAcknowledgedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.MerchantAcknowledgedDate.Get()
}

// GetMerchantAcknowledgedDateOk returns a tuple with the MerchantAcknowledgedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetMerchantAcknowledgedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantAcknowledgedDate.Get(), o.MerchantAcknowledgedDate.IsSet()
}

// HasMerchantAcknowledgedDate returns a boolean if a field has been set.
func (o *IReturn) HasMerchantAcknowledgedDate() bool {
	if o != nil && o.MerchantAcknowledgedDate.IsSet() {
		return true
	}

	return false
}

// SetMerchantAcknowledgedDate gets a reference to the given NullableTime and assigns it to the MerchantAcknowledgedDate field.
func (o *IReturn) SetMerchantAcknowledgedDate(v time.Time) {
	o.MerchantAcknowledgedDate.Set(&v)
}
// SetMerchantAcknowledgedDateNil sets the value for MerchantAcknowledgedDate to be an explicit nil
func (o *IReturn) SetMerchantAcknowledgedDateNil() {
	o.MerchantAcknowledgedDate.Set(nil)
}

// UnsetMerchantAcknowledgedDate ensures that no value is present for MerchantAcknowledgedDate, not even an explicit nil
func (o *IReturn) UnsetMerchantAcknowledgedDate() {
	o.MerchantAcknowledgedDate.Unset()
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *IReturn) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *IReturn) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *IReturn) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *IReturn) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId) {
		var ret int32
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *IReturn) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given int32 and assigns it to the ChannelId field.
func (o *IReturn) SetChannelId(v int32) {
	o.ChannelId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IReturn) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IReturn) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IReturn) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IReturn) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IReturn) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IReturn) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *IReturn) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IReturn) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IReturn) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *IReturn) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *IReturn) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *IReturn) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *IReturn) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

func (o IReturn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IReturn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.ChannelExportStatus) {
		toSerialize["ChannelExportStatus"] = o.ChannelExportStatus
	}
	if !IsNil(o.Reason) {
		toSerialize["Reason"] = o.Reason
	}
	if o.MerchantComment.IsSet() {
		toSerialize["MerchantComment"] = o.MerchantComment.Get()
	}
	if o.MerchantReturnNo.IsSet() {
		toSerialize["MerchantReturnNo"] = o.MerchantReturnNo.Get()
	}
	if o.ChannelReturnNo.IsSet() {
		toSerialize["ChannelReturnNo"] = o.ChannelReturnNo.Get()
	}
	if o.ChannelOrderNo.IsSet() {
		toSerialize["ChannelOrderNo"] = o.ChannelOrderNo.Get()
	}
	if !IsNil(o.CreatedByType) {
		toSerialize["CreatedByType"] = o.CreatedByType
	}
	if !IsNil(o.ReturnDate) {
		toSerialize["ReturnDate"] = o.ReturnDate
	}
	if o.OrderDate.IsSet() {
		toSerialize["OrderDate"] = o.OrderDate.Get()
	}
	if o.ExternalBatchNo.IsSet() {
		toSerialize["ExternalBatchNo"] = o.ExternalBatchNo.Get()
	}
	if o.ChannelAcknowledgedDate.IsSet() {
		toSerialize["ChannelAcknowledgedDate"] = o.ChannelAcknowledgedDate.Get()
	}
	if o.MerchantAcknowledgedDate.IsSet() {
		toSerialize["MerchantAcknowledgedDate"] = o.MerchantAcknowledgedDate.Get()
	}
	if !IsNil(o.OrderId) {
		toSerialize["OrderId"] = o.OrderId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["ChannelId"] = o.ChannelId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if o.DeletedAt.IsSet() {
		toSerialize["DeletedAt"] = o.DeletedAt.Get()
	}
	return toSerialize, nil
}

type NullableIReturn struct {
	value *IReturn
	isSet bool
}

func (v NullableIReturn) Get() *IReturn {
	return v.value
}

func (v *NullableIReturn) Set(val *IReturn) {
	v.value = val
	v.isSet = true
}

func (v NullableIReturn) IsSet() bool {
	return v.isSet
}

func (v *NullableIReturn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIReturn(val *IReturn) *NullableIReturn {
	return &NullableIReturn{value: val, isSet: true}
}

func (v NullableIReturn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIReturn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


