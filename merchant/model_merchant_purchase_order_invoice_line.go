/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.14.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantPurchaseOrderInvoiceLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantPurchaseOrderInvoiceLine{}

// MerchantPurchaseOrderInvoiceLine struct for MerchantPurchaseOrderInvoiceLine
type MerchantPurchaseOrderInvoiceLine struct {
	ChannelPurchaseOrderNo NullableString `json:"ChannelPurchaseOrderNo,omitempty"`
	MerchantPurchaseOrderNo NullableString `json:"MerchantPurchaseOrderNo,omitempty"`
	ChannelProductNo NullableString `json:"ChannelProductNo,omitempty"`
	MerchantProductNo NullableString `json:"MerchantProductNo,omitempty"`
	Quantity *int32 `json:"Quantity,omitempty"`
	NetCostCurrencyCode NullableString `json:"NetCostCurrencyCode,omitempty"`
	NetCostAmount *float32 `json:"NetCostAmount,omitempty"`
	HsnCode NullableString `json:"HsnCode,omitempty"`
	CnReferenceInvoiceNumber NullableString `json:"CnReferenceInvoiceNumber,omitempty"`
	CnDebitNoteNumber NullableString `json:"CnDebitNoteNumber,omitempty"`
	CnReturnsReferenceNumber NullableString `json:"CnReturnsReferenceNumber,omitempty"`
	CnRmaId NullableString `json:"CnRmaId,omitempty"`
	CnGoodsReturnDate *time.Time `json:"CnGoodsReturnDate,omitempty"`
	CnCoopReferenceNumber NullableString `json:"CnCoopReferenceNumber,omitempty"`
	CnConsignorsReferenceNumber NullableString `json:"CnConsignorsReferenceNumber,omitempty"`
	AllowanceDetails []PurchaseOrderInvoiceAllowanceDetails `json:"AllowanceDetails,omitempty"`
	TaxDetails []PurchaseOrderInvoiceTaxDetails `json:"TaxDetails,omitempty"`
	ChargeDetails []PurchaseOrderInvoiceChargeDetails `json:"ChargeDetails,omitempty"`
}

// NewMerchantPurchaseOrderInvoiceLine instantiates a new MerchantPurchaseOrderInvoiceLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantPurchaseOrderInvoiceLine() *MerchantPurchaseOrderInvoiceLine {
	this := MerchantPurchaseOrderInvoiceLine{}
	return &this
}

// NewMerchantPurchaseOrderInvoiceLineWithDefaults instantiates a new MerchantPurchaseOrderInvoiceLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantPurchaseOrderInvoiceLineWithDefaults() *MerchantPurchaseOrderInvoiceLine {
	this := MerchantPurchaseOrderInvoiceLine{}
	return &this
}

// GetChannelPurchaseOrderNo returns the ChannelPurchaseOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetChannelPurchaseOrderNo() string {
	if o == nil || IsNil(o.ChannelPurchaseOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelPurchaseOrderNo.Get()
}

// GetChannelPurchaseOrderNoOk returns a tuple with the ChannelPurchaseOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetChannelPurchaseOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelPurchaseOrderNo.Get(), o.ChannelPurchaseOrderNo.IsSet()
}

// HasChannelPurchaseOrderNo returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasChannelPurchaseOrderNo() bool {
	if o != nil && o.ChannelPurchaseOrderNo.IsSet() {
		return true
	}

	return false
}

// SetChannelPurchaseOrderNo gets a reference to the given NullableString and assigns it to the ChannelPurchaseOrderNo field.
func (o *MerchantPurchaseOrderInvoiceLine) SetChannelPurchaseOrderNo(v string) {
	o.ChannelPurchaseOrderNo.Set(&v)
}
// SetChannelPurchaseOrderNoNil sets the value for ChannelPurchaseOrderNo to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetChannelPurchaseOrderNoNil() {
	o.ChannelPurchaseOrderNo.Set(nil)
}

// UnsetChannelPurchaseOrderNo ensures that no value is present for ChannelPurchaseOrderNo, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetChannelPurchaseOrderNo() {
	o.ChannelPurchaseOrderNo.Unset()
}

// GetMerchantPurchaseOrderNo returns the MerchantPurchaseOrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetMerchantPurchaseOrderNo() string {
	if o == nil || IsNil(o.MerchantPurchaseOrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantPurchaseOrderNo.Get()
}

// GetMerchantPurchaseOrderNoOk returns a tuple with the MerchantPurchaseOrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetMerchantPurchaseOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantPurchaseOrderNo.Get(), o.MerchantPurchaseOrderNo.IsSet()
}

// HasMerchantPurchaseOrderNo returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasMerchantPurchaseOrderNo() bool {
	if o != nil && o.MerchantPurchaseOrderNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantPurchaseOrderNo gets a reference to the given NullableString and assigns it to the MerchantPurchaseOrderNo field.
func (o *MerchantPurchaseOrderInvoiceLine) SetMerchantPurchaseOrderNo(v string) {
	o.MerchantPurchaseOrderNo.Set(&v)
}
// SetMerchantPurchaseOrderNoNil sets the value for MerchantPurchaseOrderNo to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetMerchantPurchaseOrderNoNil() {
	o.MerchantPurchaseOrderNo.Set(nil)
}

// UnsetMerchantPurchaseOrderNo ensures that no value is present for MerchantPurchaseOrderNo, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetMerchantPurchaseOrderNo() {
	o.MerchantPurchaseOrderNo.Unset()
}

// GetChannelProductNo returns the ChannelProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetChannelProductNo() string {
	if o == nil || IsNil(o.ChannelProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.ChannelProductNo.Get()
}

// GetChannelProductNoOk returns a tuple with the ChannelProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetChannelProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelProductNo.Get(), o.ChannelProductNo.IsSet()
}

// HasChannelProductNo returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasChannelProductNo() bool {
	if o != nil && o.ChannelProductNo.IsSet() {
		return true
	}

	return false
}

// SetChannelProductNo gets a reference to the given NullableString and assigns it to the ChannelProductNo field.
func (o *MerchantPurchaseOrderInvoiceLine) SetChannelProductNo(v string) {
	o.ChannelProductNo.Set(&v)
}
// SetChannelProductNoNil sets the value for ChannelProductNo to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetChannelProductNoNil() {
	o.ChannelProductNo.Set(nil)
}

// UnsetChannelProductNo ensures that no value is present for ChannelProductNo, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetChannelProductNo() {
	o.ChannelProductNo.Unset()
}

// GetMerchantProductNo returns the MerchantProductNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetMerchantProductNo() string {
	if o == nil || IsNil(o.MerchantProductNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantProductNo.Get()
}

// GetMerchantProductNoOk returns a tuple with the MerchantProductNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetMerchantProductNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantProductNo.Get(), o.MerchantProductNo.IsSet()
}

// HasMerchantProductNo returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasMerchantProductNo() bool {
	if o != nil && o.MerchantProductNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantProductNo gets a reference to the given NullableString and assigns it to the MerchantProductNo field.
func (o *MerchantPurchaseOrderInvoiceLine) SetMerchantProductNo(v string) {
	o.MerchantProductNo.Set(&v)
}
// SetMerchantProductNoNil sets the value for MerchantProductNo to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetMerchantProductNoNil() {
	o.MerchantProductNo.Set(nil)
}

// UnsetMerchantProductNo ensures that no value is present for MerchantProductNo, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetMerchantProductNo() {
	o.MerchantProductNo.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoiceLine) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoiceLine) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *MerchantPurchaseOrderInvoiceLine) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetNetCostCurrencyCode returns the NetCostCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetNetCostCurrencyCode() string {
	if o == nil || IsNil(o.NetCostCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.NetCostCurrencyCode.Get()
}

// GetNetCostCurrencyCodeOk returns a tuple with the NetCostCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetNetCostCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetCostCurrencyCode.Get(), o.NetCostCurrencyCode.IsSet()
}

// HasNetCostCurrencyCode returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasNetCostCurrencyCode() bool {
	if o != nil && o.NetCostCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetNetCostCurrencyCode gets a reference to the given NullableString and assigns it to the NetCostCurrencyCode field.
func (o *MerchantPurchaseOrderInvoiceLine) SetNetCostCurrencyCode(v string) {
	o.NetCostCurrencyCode.Set(&v)
}
// SetNetCostCurrencyCodeNil sets the value for NetCostCurrencyCode to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetNetCostCurrencyCodeNil() {
	o.NetCostCurrencyCode.Set(nil)
}

// UnsetNetCostCurrencyCode ensures that no value is present for NetCostCurrencyCode, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetNetCostCurrencyCode() {
	o.NetCostCurrencyCode.Unset()
}

// GetNetCostAmount returns the NetCostAmount field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoiceLine) GetNetCostAmount() float32 {
	if o == nil || IsNil(o.NetCostAmount) {
		var ret float32
		return ret
	}
	return *o.NetCostAmount
}

// GetNetCostAmountOk returns a tuple with the NetCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoiceLine) GetNetCostAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.NetCostAmount) {
		return nil, false
	}
	return o.NetCostAmount, true
}

// HasNetCostAmount returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasNetCostAmount() bool {
	if o != nil && !IsNil(o.NetCostAmount) {
		return true
	}

	return false
}

// SetNetCostAmount gets a reference to the given float32 and assigns it to the NetCostAmount field.
func (o *MerchantPurchaseOrderInvoiceLine) SetNetCostAmount(v float32) {
	o.NetCostAmount = &v
}

// GetHsnCode returns the HsnCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetHsnCode() string {
	if o == nil || IsNil(o.HsnCode.Get()) {
		var ret string
		return ret
	}
	return *o.HsnCode.Get()
}

// GetHsnCodeOk returns a tuple with the HsnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetHsnCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HsnCode.Get(), o.HsnCode.IsSet()
}

// HasHsnCode returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasHsnCode() bool {
	if o != nil && o.HsnCode.IsSet() {
		return true
	}

	return false
}

// SetHsnCode gets a reference to the given NullableString and assigns it to the HsnCode field.
func (o *MerchantPurchaseOrderInvoiceLine) SetHsnCode(v string) {
	o.HsnCode.Set(&v)
}
// SetHsnCodeNil sets the value for HsnCode to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetHsnCodeNil() {
	o.HsnCode.Set(nil)
}

// UnsetHsnCode ensures that no value is present for HsnCode, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetHsnCode() {
	o.HsnCode.Unset()
}

// GetCnReferenceInvoiceNumber returns the CnReferenceInvoiceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnReferenceInvoiceNumber() string {
	if o == nil || IsNil(o.CnReferenceInvoiceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CnReferenceInvoiceNumber.Get()
}

// GetCnReferenceInvoiceNumberOk returns a tuple with the CnReferenceInvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnReferenceInvoiceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnReferenceInvoiceNumber.Get(), o.CnReferenceInvoiceNumber.IsSet()
}

// HasCnReferenceInvoiceNumber returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnReferenceInvoiceNumber() bool {
	if o != nil && o.CnReferenceInvoiceNumber.IsSet() {
		return true
	}

	return false
}

// SetCnReferenceInvoiceNumber gets a reference to the given NullableString and assigns it to the CnReferenceInvoiceNumber field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnReferenceInvoiceNumber(v string) {
	o.CnReferenceInvoiceNumber.Set(&v)
}
// SetCnReferenceInvoiceNumberNil sets the value for CnReferenceInvoiceNumber to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnReferenceInvoiceNumberNil() {
	o.CnReferenceInvoiceNumber.Set(nil)
}

// UnsetCnReferenceInvoiceNumber ensures that no value is present for CnReferenceInvoiceNumber, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnReferenceInvoiceNumber() {
	o.CnReferenceInvoiceNumber.Unset()
}

// GetCnDebitNoteNumber returns the CnDebitNoteNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnDebitNoteNumber() string {
	if o == nil || IsNil(o.CnDebitNoteNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CnDebitNoteNumber.Get()
}

// GetCnDebitNoteNumberOk returns a tuple with the CnDebitNoteNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnDebitNoteNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnDebitNoteNumber.Get(), o.CnDebitNoteNumber.IsSet()
}

// HasCnDebitNoteNumber returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnDebitNoteNumber() bool {
	if o != nil && o.CnDebitNoteNumber.IsSet() {
		return true
	}

	return false
}

// SetCnDebitNoteNumber gets a reference to the given NullableString and assigns it to the CnDebitNoteNumber field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnDebitNoteNumber(v string) {
	o.CnDebitNoteNumber.Set(&v)
}
// SetCnDebitNoteNumberNil sets the value for CnDebitNoteNumber to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnDebitNoteNumberNil() {
	o.CnDebitNoteNumber.Set(nil)
}

// UnsetCnDebitNoteNumber ensures that no value is present for CnDebitNoteNumber, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnDebitNoteNumber() {
	o.CnDebitNoteNumber.Unset()
}

// GetCnReturnsReferenceNumber returns the CnReturnsReferenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnReturnsReferenceNumber() string {
	if o == nil || IsNil(o.CnReturnsReferenceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CnReturnsReferenceNumber.Get()
}

// GetCnReturnsReferenceNumberOk returns a tuple with the CnReturnsReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnReturnsReferenceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnReturnsReferenceNumber.Get(), o.CnReturnsReferenceNumber.IsSet()
}

// HasCnReturnsReferenceNumber returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnReturnsReferenceNumber() bool {
	if o != nil && o.CnReturnsReferenceNumber.IsSet() {
		return true
	}

	return false
}

// SetCnReturnsReferenceNumber gets a reference to the given NullableString and assigns it to the CnReturnsReferenceNumber field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnReturnsReferenceNumber(v string) {
	o.CnReturnsReferenceNumber.Set(&v)
}
// SetCnReturnsReferenceNumberNil sets the value for CnReturnsReferenceNumber to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnReturnsReferenceNumberNil() {
	o.CnReturnsReferenceNumber.Set(nil)
}

// UnsetCnReturnsReferenceNumber ensures that no value is present for CnReturnsReferenceNumber, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnReturnsReferenceNumber() {
	o.CnReturnsReferenceNumber.Unset()
}

// GetCnRmaId returns the CnRmaId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnRmaId() string {
	if o == nil || IsNil(o.CnRmaId.Get()) {
		var ret string
		return ret
	}
	return *o.CnRmaId.Get()
}

// GetCnRmaIdOk returns a tuple with the CnRmaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnRmaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnRmaId.Get(), o.CnRmaId.IsSet()
}

// HasCnRmaId returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnRmaId() bool {
	if o != nil && o.CnRmaId.IsSet() {
		return true
	}

	return false
}

// SetCnRmaId gets a reference to the given NullableString and assigns it to the CnRmaId field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnRmaId(v string) {
	o.CnRmaId.Set(&v)
}
// SetCnRmaIdNil sets the value for CnRmaId to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnRmaIdNil() {
	o.CnRmaId.Set(nil)
}

// UnsetCnRmaId ensures that no value is present for CnRmaId, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnRmaId() {
	o.CnRmaId.Unset()
}

// GetCnGoodsReturnDate returns the CnGoodsReturnDate field value if set, zero value otherwise.
func (o *MerchantPurchaseOrderInvoiceLine) GetCnGoodsReturnDate() time.Time {
	if o == nil || IsNil(o.CnGoodsReturnDate) {
		var ret time.Time
		return ret
	}
	return *o.CnGoodsReturnDate
}

// GetCnGoodsReturnDateOk returns a tuple with the CnGoodsReturnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantPurchaseOrderInvoiceLine) GetCnGoodsReturnDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CnGoodsReturnDate) {
		return nil, false
	}
	return o.CnGoodsReturnDate, true
}

// HasCnGoodsReturnDate returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnGoodsReturnDate() bool {
	if o != nil && !IsNil(o.CnGoodsReturnDate) {
		return true
	}

	return false
}

// SetCnGoodsReturnDate gets a reference to the given time.Time and assigns it to the CnGoodsReturnDate field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnGoodsReturnDate(v time.Time) {
	o.CnGoodsReturnDate = &v
}

// GetCnCoopReferenceNumber returns the CnCoopReferenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnCoopReferenceNumber() string {
	if o == nil || IsNil(o.CnCoopReferenceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CnCoopReferenceNumber.Get()
}

// GetCnCoopReferenceNumberOk returns a tuple with the CnCoopReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnCoopReferenceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnCoopReferenceNumber.Get(), o.CnCoopReferenceNumber.IsSet()
}

// HasCnCoopReferenceNumber returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnCoopReferenceNumber() bool {
	if o != nil && o.CnCoopReferenceNumber.IsSet() {
		return true
	}

	return false
}

// SetCnCoopReferenceNumber gets a reference to the given NullableString and assigns it to the CnCoopReferenceNumber field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnCoopReferenceNumber(v string) {
	o.CnCoopReferenceNumber.Set(&v)
}
// SetCnCoopReferenceNumberNil sets the value for CnCoopReferenceNumber to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnCoopReferenceNumberNil() {
	o.CnCoopReferenceNumber.Set(nil)
}

// UnsetCnCoopReferenceNumber ensures that no value is present for CnCoopReferenceNumber, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnCoopReferenceNumber() {
	o.CnCoopReferenceNumber.Unset()
}

// GetCnConsignorsReferenceNumber returns the CnConsignorsReferenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetCnConsignorsReferenceNumber() string {
	if o == nil || IsNil(o.CnConsignorsReferenceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CnConsignorsReferenceNumber.Get()
}

// GetCnConsignorsReferenceNumberOk returns a tuple with the CnConsignorsReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetCnConsignorsReferenceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CnConsignorsReferenceNumber.Get(), o.CnConsignorsReferenceNumber.IsSet()
}

// HasCnConsignorsReferenceNumber returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasCnConsignorsReferenceNumber() bool {
	if o != nil && o.CnConsignorsReferenceNumber.IsSet() {
		return true
	}

	return false
}

// SetCnConsignorsReferenceNumber gets a reference to the given NullableString and assigns it to the CnConsignorsReferenceNumber field.
func (o *MerchantPurchaseOrderInvoiceLine) SetCnConsignorsReferenceNumber(v string) {
	o.CnConsignorsReferenceNumber.Set(&v)
}
// SetCnConsignorsReferenceNumberNil sets the value for CnConsignorsReferenceNumber to be an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) SetCnConsignorsReferenceNumberNil() {
	o.CnConsignorsReferenceNumber.Set(nil)
}

// UnsetCnConsignorsReferenceNumber ensures that no value is present for CnConsignorsReferenceNumber, not even an explicit nil
func (o *MerchantPurchaseOrderInvoiceLine) UnsetCnConsignorsReferenceNumber() {
	o.CnConsignorsReferenceNumber.Unset()
}

// GetAllowanceDetails returns the AllowanceDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetAllowanceDetails() []PurchaseOrderInvoiceAllowanceDetails {
	if o == nil {
		var ret []PurchaseOrderInvoiceAllowanceDetails
		return ret
	}
	return o.AllowanceDetails
}

// GetAllowanceDetailsOk returns a tuple with the AllowanceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetAllowanceDetailsOk() ([]PurchaseOrderInvoiceAllowanceDetails, bool) {
	if o == nil || IsNil(o.AllowanceDetails) {
		return nil, false
	}
	return o.AllowanceDetails, true
}

// HasAllowanceDetails returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasAllowanceDetails() bool {
	if o != nil && !IsNil(o.AllowanceDetails) {
		return true
	}

	return false
}

// SetAllowanceDetails gets a reference to the given []PurchaseOrderInvoiceAllowanceDetails and assigns it to the AllowanceDetails field.
func (o *MerchantPurchaseOrderInvoiceLine) SetAllowanceDetails(v []PurchaseOrderInvoiceAllowanceDetails) {
	o.AllowanceDetails = v
}

// GetTaxDetails returns the TaxDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetTaxDetails() []PurchaseOrderInvoiceTaxDetails {
	if o == nil {
		var ret []PurchaseOrderInvoiceTaxDetails
		return ret
	}
	return o.TaxDetails
}

// GetTaxDetailsOk returns a tuple with the TaxDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetTaxDetailsOk() ([]PurchaseOrderInvoiceTaxDetails, bool) {
	if o == nil || IsNil(o.TaxDetails) {
		return nil, false
	}
	return o.TaxDetails, true
}

// HasTaxDetails returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasTaxDetails() bool {
	if o != nil && !IsNil(o.TaxDetails) {
		return true
	}

	return false
}

// SetTaxDetails gets a reference to the given []PurchaseOrderInvoiceTaxDetails and assigns it to the TaxDetails field.
func (o *MerchantPurchaseOrderInvoiceLine) SetTaxDetails(v []PurchaseOrderInvoiceTaxDetails) {
	o.TaxDetails = v
}

// GetChargeDetails returns the ChargeDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantPurchaseOrderInvoiceLine) GetChargeDetails() []PurchaseOrderInvoiceChargeDetails {
	if o == nil {
		var ret []PurchaseOrderInvoiceChargeDetails
		return ret
	}
	return o.ChargeDetails
}

// GetChargeDetailsOk returns a tuple with the ChargeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantPurchaseOrderInvoiceLine) GetChargeDetailsOk() ([]PurchaseOrderInvoiceChargeDetails, bool) {
	if o == nil || IsNil(o.ChargeDetails) {
		return nil, false
	}
	return o.ChargeDetails, true
}

// HasChargeDetails returns a boolean if a field has been set.
func (o *MerchantPurchaseOrderInvoiceLine) HasChargeDetails() bool {
	if o != nil && !IsNil(o.ChargeDetails) {
		return true
	}

	return false
}

// SetChargeDetails gets a reference to the given []PurchaseOrderInvoiceChargeDetails and assigns it to the ChargeDetails field.
func (o *MerchantPurchaseOrderInvoiceLine) SetChargeDetails(v []PurchaseOrderInvoiceChargeDetails) {
	o.ChargeDetails = v
}

func (o MerchantPurchaseOrderInvoiceLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantPurchaseOrderInvoiceLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelPurchaseOrderNo.IsSet() {
		toSerialize["ChannelPurchaseOrderNo"] = o.ChannelPurchaseOrderNo.Get()
	}
	if o.MerchantPurchaseOrderNo.IsSet() {
		toSerialize["MerchantPurchaseOrderNo"] = o.MerchantPurchaseOrderNo.Get()
	}
	if o.ChannelProductNo.IsSet() {
		toSerialize["ChannelProductNo"] = o.ChannelProductNo.Get()
	}
	if o.MerchantProductNo.IsSet() {
		toSerialize["MerchantProductNo"] = o.MerchantProductNo.Get()
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	if o.NetCostCurrencyCode.IsSet() {
		toSerialize["NetCostCurrencyCode"] = o.NetCostCurrencyCode.Get()
	}
	if !IsNil(o.NetCostAmount) {
		toSerialize["NetCostAmount"] = o.NetCostAmount
	}
	if o.HsnCode.IsSet() {
		toSerialize["HsnCode"] = o.HsnCode.Get()
	}
	if o.CnReferenceInvoiceNumber.IsSet() {
		toSerialize["CnReferenceInvoiceNumber"] = o.CnReferenceInvoiceNumber.Get()
	}
	if o.CnDebitNoteNumber.IsSet() {
		toSerialize["CnDebitNoteNumber"] = o.CnDebitNoteNumber.Get()
	}
	if o.CnReturnsReferenceNumber.IsSet() {
		toSerialize["CnReturnsReferenceNumber"] = o.CnReturnsReferenceNumber.Get()
	}
	if o.CnRmaId.IsSet() {
		toSerialize["CnRmaId"] = o.CnRmaId.Get()
	}
	if !IsNil(o.CnGoodsReturnDate) {
		toSerialize["CnGoodsReturnDate"] = o.CnGoodsReturnDate
	}
	if o.CnCoopReferenceNumber.IsSet() {
		toSerialize["CnCoopReferenceNumber"] = o.CnCoopReferenceNumber.Get()
	}
	if o.CnConsignorsReferenceNumber.IsSet() {
		toSerialize["CnConsignorsReferenceNumber"] = o.CnConsignorsReferenceNumber.Get()
	}
	if o.AllowanceDetails != nil {
		toSerialize["AllowanceDetails"] = o.AllowanceDetails
	}
	if o.TaxDetails != nil {
		toSerialize["TaxDetails"] = o.TaxDetails
	}
	if o.ChargeDetails != nil {
		toSerialize["ChargeDetails"] = o.ChargeDetails
	}
	return toSerialize, nil
}

type NullableMerchantPurchaseOrderInvoiceLine struct {
	value *MerchantPurchaseOrderInvoiceLine
	isSet bool
}

func (v NullableMerchantPurchaseOrderInvoiceLine) Get() *MerchantPurchaseOrderInvoiceLine {
	return v.value
}

func (v *NullableMerchantPurchaseOrderInvoiceLine) Set(val *MerchantPurchaseOrderInvoiceLine) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantPurchaseOrderInvoiceLine) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantPurchaseOrderInvoiceLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantPurchaseOrderInvoiceLine(val *MerchantPurchaseOrderInvoiceLine) *NullableMerchantPurchaseOrderInvoiceLine {
	return &NullableMerchantPurchaseOrderInvoiceLine{value: val, isSet: true}
}

func (v NullableMerchantPurchaseOrderInvoiceLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantPurchaseOrderInvoiceLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


