/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the MerchantShipmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantShipmentRequest{}

// MerchantShipmentRequest struct for MerchantShipmentRequest
type MerchantShipmentRequest struct {
	// The unique shipment reference used by the Merchant.
	MerchantShipmentNo string `json:"MerchantShipmentNo"`
	// The unique order reference used by the Merchant.
	MerchantOrderNo string `json:"MerchantOrderNo"`
	Lines []MerchantShipmentLineRequest `json:"Lines"`
	// Extra data on the order. Each item must have an unqiue key
	ExtraData map[string]string `json:"ExtraData,omitempty"`
	// The unique shipping reference used by the Shipping carrier (track&trace number).
	TrackTraceNo NullableString `json:"TrackTraceNo,omitempty"`
	// A link to a page of the carrier where the customer can track the shipping of her package.
	TrackTraceUrl NullableString `json:"TrackTraceUrl,omitempty"`
	// The unique return shipping reference that may be used by the Shipping carrier (track & trace number) if the shipment is returned.
	ReturnTrackTraceNo NullableString `json:"ReturnTrackTraceNo,omitempty"`
	// Shipment method: the carrier used for shipping the package. E.g. DHL, postNL.
	Method NullableString `json:"Method,omitempty"`
	// The code of the country from where the package is being shipped.
	ShippedFromCountryCode NullableString `json:"ShippedFromCountryCode,omitempty"`
	// The id of the stock location where you ship the package from
	ShippedFromStockLocationId NullableInt32 `json:"ShippedFromStockLocationId,omitempty"`
	// The date at which the shipment was originally created in the source system (if available).
	ShipmentDate NullableTime `json:"ShipmentDate,omitempty"`
}

type _MerchantShipmentRequest MerchantShipmentRequest

// NewMerchantShipmentRequest instantiates a new MerchantShipmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantShipmentRequest(merchantShipmentNo string, merchantOrderNo string, lines []MerchantShipmentLineRequest) *MerchantShipmentRequest {
	this := MerchantShipmentRequest{}
	this.MerchantShipmentNo = merchantShipmentNo
	this.MerchantOrderNo = merchantOrderNo
	this.Lines = lines
	return &this
}

// NewMerchantShipmentRequestWithDefaults instantiates a new MerchantShipmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantShipmentRequestWithDefaults() *MerchantShipmentRequest {
	this := MerchantShipmentRequest{}
	return &this
}

// GetMerchantShipmentNo returns the MerchantShipmentNo field value
func (o *MerchantShipmentRequest) GetMerchantShipmentNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantShipmentNo
}

// GetMerchantShipmentNoOk returns a tuple with the MerchantShipmentNo field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentRequest) GetMerchantShipmentNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantShipmentNo, true
}

// SetMerchantShipmentNo sets field value
func (o *MerchantShipmentRequest) SetMerchantShipmentNo(v string) {
	o.MerchantShipmentNo = v
}

// GetMerchantOrderNo returns the MerchantOrderNo field value
func (o *MerchantShipmentRequest) GetMerchantOrderNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantOrderNo
}

// GetMerchantOrderNoOk returns a tuple with the MerchantOrderNo field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentRequest) GetMerchantOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantOrderNo, true
}

// SetMerchantOrderNo sets field value
func (o *MerchantShipmentRequest) SetMerchantOrderNo(v string) {
	o.MerchantOrderNo = v
}

// GetLines returns the Lines field value
func (o *MerchantShipmentRequest) GetLines() []MerchantShipmentLineRequest {
	if o == nil {
		var ret []MerchantShipmentLineRequest
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentRequest) GetLinesOk() ([]MerchantShipmentLineRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *MerchantShipmentRequest) SetLines(v []MerchantShipmentLineRequest) {
	o.Lines = v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasExtraData() bool {
	if o != nil && IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *MerchantShipmentRequest) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

// GetTrackTraceNo returns the TrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetTrackTraceNo() string {
	if o == nil || IsNil(o.TrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceNo.Get()
}

// GetTrackTraceNoOk returns a tuple with the TrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceNo.Get(), o.TrackTraceNo.IsSet()
}

// HasTrackTraceNo returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasTrackTraceNo() bool {
	if o != nil && o.TrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceNo gets a reference to the given NullableString and assigns it to the TrackTraceNo field.
func (o *MerchantShipmentRequest) SetTrackTraceNo(v string) {
	o.TrackTraceNo.Set(&v)
}
// SetTrackTraceNoNil sets the value for TrackTraceNo to be an explicit nil
func (o *MerchantShipmentRequest) SetTrackTraceNoNil() {
	o.TrackTraceNo.Set(nil)
}

// UnsetTrackTraceNo ensures that no value is present for TrackTraceNo, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetTrackTraceNo() {
	o.TrackTraceNo.Unset()
}

// GetTrackTraceUrl returns the TrackTraceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetTrackTraceUrl() string {
	if o == nil || IsNil(o.TrackTraceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceUrl.Get()
}

// GetTrackTraceUrlOk returns a tuple with the TrackTraceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetTrackTraceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceUrl.Get(), o.TrackTraceUrl.IsSet()
}

// HasTrackTraceUrl returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasTrackTraceUrl() bool {
	if o != nil && o.TrackTraceUrl.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceUrl gets a reference to the given NullableString and assigns it to the TrackTraceUrl field.
func (o *MerchantShipmentRequest) SetTrackTraceUrl(v string) {
	o.TrackTraceUrl.Set(&v)
}
// SetTrackTraceUrlNil sets the value for TrackTraceUrl to be an explicit nil
func (o *MerchantShipmentRequest) SetTrackTraceUrlNil() {
	o.TrackTraceUrl.Set(nil)
}

// UnsetTrackTraceUrl ensures that no value is present for TrackTraceUrl, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetTrackTraceUrl() {
	o.TrackTraceUrl.Unset()
}

// GetReturnTrackTraceNo returns the ReturnTrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetReturnTrackTraceNo() string {
	if o == nil || IsNil(o.ReturnTrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnTrackTraceNo.Get()
}

// GetReturnTrackTraceNoOk returns a tuple with the ReturnTrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetReturnTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnTrackTraceNo.Get(), o.ReturnTrackTraceNo.IsSet()
}

// HasReturnTrackTraceNo returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasReturnTrackTraceNo() bool {
	if o != nil && o.ReturnTrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetReturnTrackTraceNo gets a reference to the given NullableString and assigns it to the ReturnTrackTraceNo field.
func (o *MerchantShipmentRequest) SetReturnTrackTraceNo(v string) {
	o.ReturnTrackTraceNo.Set(&v)
}
// SetReturnTrackTraceNoNil sets the value for ReturnTrackTraceNo to be an explicit nil
func (o *MerchantShipmentRequest) SetReturnTrackTraceNoNil() {
	o.ReturnTrackTraceNo.Set(nil)
}

// UnsetReturnTrackTraceNo ensures that no value is present for ReturnTrackTraceNo, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetReturnTrackTraceNo() {
	o.ReturnTrackTraceNo.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *MerchantShipmentRequest) SetMethod(v string) {
	o.Method.Set(&v)
}
// SetMethodNil sets the value for Method to be an explicit nil
func (o *MerchantShipmentRequest) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetMethod() {
	o.Method.Unset()
}

// GetShippedFromCountryCode returns the ShippedFromCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetShippedFromCountryCode() string {
	if o == nil || IsNil(o.ShippedFromCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.ShippedFromCountryCode.Get()
}

// GetShippedFromCountryCodeOk returns a tuple with the ShippedFromCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetShippedFromCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromCountryCode.Get(), o.ShippedFromCountryCode.IsSet()
}

// HasShippedFromCountryCode returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasShippedFromCountryCode() bool {
	if o != nil && o.ShippedFromCountryCode.IsSet() {
		return true
	}

	return false
}

// SetShippedFromCountryCode gets a reference to the given NullableString and assigns it to the ShippedFromCountryCode field.
func (o *MerchantShipmentRequest) SetShippedFromCountryCode(v string) {
	o.ShippedFromCountryCode.Set(&v)
}
// SetShippedFromCountryCodeNil sets the value for ShippedFromCountryCode to be an explicit nil
func (o *MerchantShipmentRequest) SetShippedFromCountryCodeNil() {
	o.ShippedFromCountryCode.Set(nil)
}

// UnsetShippedFromCountryCode ensures that no value is present for ShippedFromCountryCode, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetShippedFromCountryCode() {
	o.ShippedFromCountryCode.Unset()
}

// GetShippedFromStockLocationId returns the ShippedFromStockLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetShippedFromStockLocationId() int32 {
	if o == nil || IsNil(o.ShippedFromStockLocationId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShippedFromStockLocationId.Get()
}

// GetShippedFromStockLocationIdOk returns a tuple with the ShippedFromStockLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetShippedFromStockLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromStockLocationId.Get(), o.ShippedFromStockLocationId.IsSet()
}

// HasShippedFromStockLocationId returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasShippedFromStockLocationId() bool {
	if o != nil && o.ShippedFromStockLocationId.IsSet() {
		return true
	}

	return false
}

// SetShippedFromStockLocationId gets a reference to the given NullableInt32 and assigns it to the ShippedFromStockLocationId field.
func (o *MerchantShipmentRequest) SetShippedFromStockLocationId(v int32) {
	o.ShippedFromStockLocationId.Set(&v)
}
// SetShippedFromStockLocationIdNil sets the value for ShippedFromStockLocationId to be an explicit nil
func (o *MerchantShipmentRequest) SetShippedFromStockLocationIdNil() {
	o.ShippedFromStockLocationId.Set(nil)
}

// UnsetShippedFromStockLocationId ensures that no value is present for ShippedFromStockLocationId, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetShippedFromStockLocationId() {
	o.ShippedFromStockLocationId.Unset()
}

// GetShipmentDate returns the ShipmentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentRequest) GetShipmentDate() time.Time {
	if o == nil || IsNil(o.ShipmentDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ShipmentDate.Get()
}

// GetShipmentDateOk returns a tuple with the ShipmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentRequest) GetShipmentDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShipmentDate.Get(), o.ShipmentDate.IsSet()
}

// HasShipmentDate returns a boolean if a field has been set.
func (o *MerchantShipmentRequest) HasShipmentDate() bool {
	if o != nil && o.ShipmentDate.IsSet() {
		return true
	}

	return false
}

// SetShipmentDate gets a reference to the given NullableTime and assigns it to the ShipmentDate field.
func (o *MerchantShipmentRequest) SetShipmentDate(v time.Time) {
	o.ShipmentDate.Set(&v)
}
// SetShipmentDateNil sets the value for ShipmentDate to be an explicit nil
func (o *MerchantShipmentRequest) SetShipmentDateNil() {
	o.ShipmentDate.Set(nil)
}

// UnsetShipmentDate ensures that no value is present for ShipmentDate, not even an explicit nil
func (o *MerchantShipmentRequest) UnsetShipmentDate() {
	o.ShipmentDate.Unset()
}

func (o MerchantShipmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantShipmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["MerchantShipmentNo"] = o.MerchantShipmentNo
	toSerialize["MerchantOrderNo"] = o.MerchantOrderNo
	toSerialize["Lines"] = o.Lines
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.TrackTraceNo.IsSet() {
		toSerialize["TrackTraceNo"] = o.TrackTraceNo.Get()
	}
	if o.TrackTraceUrl.IsSet() {
		toSerialize["TrackTraceUrl"] = o.TrackTraceUrl.Get()
	}
	if o.ReturnTrackTraceNo.IsSet() {
		toSerialize["ReturnTrackTraceNo"] = o.ReturnTrackTraceNo.Get()
	}
	if o.Method.IsSet() {
		toSerialize["Method"] = o.Method.Get()
	}
	if o.ShippedFromCountryCode.IsSet() {
		toSerialize["ShippedFromCountryCode"] = o.ShippedFromCountryCode.Get()
	}
	if o.ShippedFromStockLocationId.IsSet() {
		toSerialize["ShippedFromStockLocationId"] = o.ShippedFromStockLocationId.Get()
	}
	if o.ShipmentDate.IsSet() {
		toSerialize["ShipmentDate"] = o.ShipmentDate.Get()
	}
	return toSerialize, nil
}

func (o *MerchantShipmentRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"MerchantShipmentNo",
		"MerchantOrderNo",
		"Lines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantShipmentRequest := _MerchantShipmentRequest{}

	err = json.Unmarshal(bytes, &varMerchantShipmentRequest)

	if err != nil {
		return err
	}

	*o = MerchantShipmentRequest(varMerchantShipmentRequest)

	return err
}

type NullableMerchantShipmentRequest struct {
	value *MerchantShipmentRequest
	isSet bool
}

func (v NullableMerchantShipmentRequest) Get() *MerchantShipmentRequest {
	return v.value
}

func (v *NullableMerchantShipmentRequest) Set(val *MerchantShipmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantShipmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantShipmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantShipmentRequest(val *MerchantShipmentRequest) *NullableMerchantShipmentRequest {
	return &NullableMerchantShipmentRequest{value: val, isSet: true}
}

func (v NullableMerchantShipmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantShipmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


