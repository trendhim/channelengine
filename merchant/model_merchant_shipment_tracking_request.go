/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MerchantShipmentTrackingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantShipmentTrackingRequest{}

// MerchantShipmentTrackingRequest struct for MerchantShipmentTrackingRequest
type MerchantShipmentTrackingRequest struct {
	// Shipment method (carrier).
	Method string `json:"Method"`
	// The unique shipping reference used by the Shipping carrier (track & trace number).
	TrackTraceNo string `json:"TrackTraceNo"`
	// The unique return shipping reference that may be used by the Shipping carrier (track & trace number) if the shipment is returned.
	ReturnTrackTraceNo NullableString `json:"ReturnTrackTraceNo,omitempty"`
	// A link to a page of the carrier where the customer can track the shipping of her package.
	TrackTraceUrl NullableString `json:"TrackTraceUrl,omitempty"`
	// The code of the country from where the package is being shipped.
	ShippedFromCountryCode NullableString `json:"ShippedFromCountryCode,omitempty"`
}

type _MerchantShipmentTrackingRequest MerchantShipmentTrackingRequest

// NewMerchantShipmentTrackingRequest instantiates a new MerchantShipmentTrackingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantShipmentTrackingRequest(method string, trackTraceNo string) *MerchantShipmentTrackingRequest {
	this := MerchantShipmentTrackingRequest{}
	this.Method = method
	this.TrackTraceNo = trackTraceNo
	return &this
}

// NewMerchantShipmentTrackingRequestWithDefaults instantiates a new MerchantShipmentTrackingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantShipmentTrackingRequestWithDefaults() *MerchantShipmentTrackingRequest {
	this := MerchantShipmentTrackingRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *MerchantShipmentTrackingRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentTrackingRequest) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *MerchantShipmentTrackingRequest) SetMethod(v string) {
	o.Method = v
}

// GetTrackTraceNo returns the TrackTraceNo field value
func (o *MerchantShipmentTrackingRequest) GetTrackTraceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackTraceNo
}

// GetTrackTraceNoOk returns a tuple with the TrackTraceNo field value
// and a boolean to check if the value has been set.
func (o *MerchantShipmentTrackingRequest) GetTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackTraceNo, true
}

// SetTrackTraceNo sets field value
func (o *MerchantShipmentTrackingRequest) SetTrackTraceNo(v string) {
	o.TrackTraceNo = v
}

// GetReturnTrackTraceNo returns the ReturnTrackTraceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentTrackingRequest) GetReturnTrackTraceNo() string {
	if o == nil || IsNil(o.ReturnTrackTraceNo.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnTrackTraceNo.Get()
}

// GetReturnTrackTraceNoOk returns a tuple with the ReturnTrackTraceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentTrackingRequest) GetReturnTrackTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnTrackTraceNo.Get(), o.ReturnTrackTraceNo.IsSet()
}

// HasReturnTrackTraceNo returns a boolean if a field has been set.
func (o *MerchantShipmentTrackingRequest) HasReturnTrackTraceNo() bool {
	if o != nil && o.ReturnTrackTraceNo.IsSet() {
		return true
	}

	return false
}

// SetReturnTrackTraceNo gets a reference to the given NullableString and assigns it to the ReturnTrackTraceNo field.
func (o *MerchantShipmentTrackingRequest) SetReturnTrackTraceNo(v string) {
	o.ReturnTrackTraceNo.Set(&v)
}
// SetReturnTrackTraceNoNil sets the value for ReturnTrackTraceNo to be an explicit nil
func (o *MerchantShipmentTrackingRequest) SetReturnTrackTraceNoNil() {
	o.ReturnTrackTraceNo.Set(nil)
}

// UnsetReturnTrackTraceNo ensures that no value is present for ReturnTrackTraceNo, not even an explicit nil
func (o *MerchantShipmentTrackingRequest) UnsetReturnTrackTraceNo() {
	o.ReturnTrackTraceNo.Unset()
}

// GetTrackTraceUrl returns the TrackTraceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentTrackingRequest) GetTrackTraceUrl() string {
	if o == nil || IsNil(o.TrackTraceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.TrackTraceUrl.Get()
}

// GetTrackTraceUrlOk returns a tuple with the TrackTraceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentTrackingRequest) GetTrackTraceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackTraceUrl.Get(), o.TrackTraceUrl.IsSet()
}

// HasTrackTraceUrl returns a boolean if a field has been set.
func (o *MerchantShipmentTrackingRequest) HasTrackTraceUrl() bool {
	if o != nil && o.TrackTraceUrl.IsSet() {
		return true
	}

	return false
}

// SetTrackTraceUrl gets a reference to the given NullableString and assigns it to the TrackTraceUrl field.
func (o *MerchantShipmentTrackingRequest) SetTrackTraceUrl(v string) {
	o.TrackTraceUrl.Set(&v)
}
// SetTrackTraceUrlNil sets the value for TrackTraceUrl to be an explicit nil
func (o *MerchantShipmentTrackingRequest) SetTrackTraceUrlNil() {
	o.TrackTraceUrl.Set(nil)
}

// UnsetTrackTraceUrl ensures that no value is present for TrackTraceUrl, not even an explicit nil
func (o *MerchantShipmentTrackingRequest) UnsetTrackTraceUrl() {
	o.TrackTraceUrl.Unset()
}

// GetShippedFromCountryCode returns the ShippedFromCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantShipmentTrackingRequest) GetShippedFromCountryCode() string {
	if o == nil || IsNil(o.ShippedFromCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.ShippedFromCountryCode.Get()
}

// GetShippedFromCountryCodeOk returns a tuple with the ShippedFromCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantShipmentTrackingRequest) GetShippedFromCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShippedFromCountryCode.Get(), o.ShippedFromCountryCode.IsSet()
}

// HasShippedFromCountryCode returns a boolean if a field has been set.
func (o *MerchantShipmentTrackingRequest) HasShippedFromCountryCode() bool {
	if o != nil && o.ShippedFromCountryCode.IsSet() {
		return true
	}

	return false
}

// SetShippedFromCountryCode gets a reference to the given NullableString and assigns it to the ShippedFromCountryCode field.
func (o *MerchantShipmentTrackingRequest) SetShippedFromCountryCode(v string) {
	o.ShippedFromCountryCode.Set(&v)
}
// SetShippedFromCountryCodeNil sets the value for ShippedFromCountryCode to be an explicit nil
func (o *MerchantShipmentTrackingRequest) SetShippedFromCountryCodeNil() {
	o.ShippedFromCountryCode.Set(nil)
}

// UnsetShippedFromCountryCode ensures that no value is present for ShippedFromCountryCode, not even an explicit nil
func (o *MerchantShipmentTrackingRequest) UnsetShippedFromCountryCode() {
	o.ShippedFromCountryCode.Unset()
}

func (o MerchantShipmentTrackingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantShipmentTrackingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Method"] = o.Method
	toSerialize["TrackTraceNo"] = o.TrackTraceNo
	if o.ReturnTrackTraceNo.IsSet() {
		toSerialize["ReturnTrackTraceNo"] = o.ReturnTrackTraceNo.Get()
	}
	if o.TrackTraceUrl.IsSet() {
		toSerialize["TrackTraceUrl"] = o.TrackTraceUrl.Get()
	}
	if o.ShippedFromCountryCode.IsSet() {
		toSerialize["ShippedFromCountryCode"] = o.ShippedFromCountryCode.Get()
	}
	return toSerialize, nil
}

func (o *MerchantShipmentTrackingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Method",
		"TrackTraceNo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMerchantShipmentTrackingRequest := _MerchantShipmentTrackingRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMerchantShipmentTrackingRequest)

	if err != nil {
		return err
	}

	*o = MerchantShipmentTrackingRequest(varMerchantShipmentTrackingRequest)

	return err
}

type NullableMerchantShipmentTrackingRequest struct {
	value *MerchantShipmentTrackingRequest
	isSet bool
}

func (v NullableMerchantShipmentTrackingRequest) Get() *MerchantShipmentTrackingRequest {
	return v.value
}

func (v *NullableMerchantShipmentTrackingRequest) Set(val *MerchantShipmentTrackingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantShipmentTrackingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantShipmentTrackingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantShipmentTrackingRequest(val *MerchantShipmentTrackingRequest) *NullableMerchantShipmentTrackingRequest {
	return &NullableMerchantShipmentTrackingRequest{value: val, isSet: true}
}

func (v NullableMerchantShipmentTrackingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantShipmentTrackingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


