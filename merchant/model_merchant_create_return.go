/*
ChannelEngine Merchant API

ChannelEngine API for merchants

API version: 2.17.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merchant

import (
	"encoding/json"
	"time"
)

// checks if the MerchantCreateReturn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantCreateReturn{}

// MerchantCreateReturn struct for MerchantCreateReturn
type MerchantCreateReturn struct {
	OrderIdentifier NullableString `json:"OrderIdentifier,omitempty"`
	MerchantReturnNo NullableString `json:"MerchantReturnNo,omitempty"`
	Reason *ModuleReturnReason `json:"Reason,omitempty"`
	MerchantComment NullableString `json:"MerchantComment,omitempty"`
	ReturnDate *time.Time `json:"ReturnDate,omitempty"`
	ExtraData map[string]string `json:"ExtraData,omitempty"`
	Lines []MerchantCreateReturnLine `json:"Lines,omitempty"`
}

// NewMerchantCreateReturn instantiates a new MerchantCreateReturn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantCreateReturn() *MerchantCreateReturn {
	this := MerchantCreateReturn{}
	return &this
}

// NewMerchantCreateReturnWithDefaults instantiates a new MerchantCreateReturn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantCreateReturnWithDefaults() *MerchantCreateReturn {
	this := MerchantCreateReturn{}
	return &this
}

// GetOrderIdentifier returns the OrderIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateReturn) GetOrderIdentifier() string {
	if o == nil || IsNil(o.OrderIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.OrderIdentifier.Get()
}

// GetOrderIdentifierOk returns a tuple with the OrderIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateReturn) GetOrderIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderIdentifier.Get(), o.OrderIdentifier.IsSet()
}

// HasOrderIdentifier returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasOrderIdentifier() bool {
	if o != nil && o.OrderIdentifier.IsSet() {
		return true
	}

	return false
}

// SetOrderIdentifier gets a reference to the given NullableString and assigns it to the OrderIdentifier field.
func (o *MerchantCreateReturn) SetOrderIdentifier(v string) {
	o.OrderIdentifier.Set(&v)
}
// SetOrderIdentifierNil sets the value for OrderIdentifier to be an explicit nil
func (o *MerchantCreateReturn) SetOrderIdentifierNil() {
	o.OrderIdentifier.Set(nil)
}

// UnsetOrderIdentifier ensures that no value is present for OrderIdentifier, not even an explicit nil
func (o *MerchantCreateReturn) UnsetOrderIdentifier() {
	o.OrderIdentifier.Unset()
}

// GetMerchantReturnNo returns the MerchantReturnNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateReturn) GetMerchantReturnNo() string {
	if o == nil || IsNil(o.MerchantReturnNo.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantReturnNo.Get()
}

// GetMerchantReturnNoOk returns a tuple with the MerchantReturnNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateReturn) GetMerchantReturnNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantReturnNo.Get(), o.MerchantReturnNo.IsSet()
}

// HasMerchantReturnNo returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasMerchantReturnNo() bool {
	if o != nil && o.MerchantReturnNo.IsSet() {
		return true
	}

	return false
}

// SetMerchantReturnNo gets a reference to the given NullableString and assigns it to the MerchantReturnNo field.
func (o *MerchantCreateReturn) SetMerchantReturnNo(v string) {
	o.MerchantReturnNo.Set(&v)
}
// SetMerchantReturnNoNil sets the value for MerchantReturnNo to be an explicit nil
func (o *MerchantCreateReturn) SetMerchantReturnNoNil() {
	o.MerchantReturnNo.Set(nil)
}

// UnsetMerchantReturnNo ensures that no value is present for MerchantReturnNo, not even an explicit nil
func (o *MerchantCreateReturn) UnsetMerchantReturnNo() {
	o.MerchantReturnNo.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *MerchantCreateReturn) GetReason() ModuleReturnReason {
	if o == nil || IsNil(o.Reason) {
		var ret ModuleReturnReason
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateReturn) GetReasonOk() (*ModuleReturnReason, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given ModuleReturnReason and assigns it to the Reason field.
func (o *MerchantCreateReturn) SetReason(v ModuleReturnReason) {
	o.Reason = &v
}

// GetMerchantComment returns the MerchantComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateReturn) GetMerchantComment() string {
	if o == nil || IsNil(o.MerchantComment.Get()) {
		var ret string
		return ret
	}
	return *o.MerchantComment.Get()
}

// GetMerchantCommentOk returns a tuple with the MerchantComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateReturn) GetMerchantCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantComment.Get(), o.MerchantComment.IsSet()
}

// HasMerchantComment returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasMerchantComment() bool {
	if o != nil && o.MerchantComment.IsSet() {
		return true
	}

	return false
}

// SetMerchantComment gets a reference to the given NullableString and assigns it to the MerchantComment field.
func (o *MerchantCreateReturn) SetMerchantComment(v string) {
	o.MerchantComment.Set(&v)
}
// SetMerchantCommentNil sets the value for MerchantComment to be an explicit nil
func (o *MerchantCreateReturn) SetMerchantCommentNil() {
	o.MerchantComment.Set(nil)
}

// UnsetMerchantComment ensures that no value is present for MerchantComment, not even an explicit nil
func (o *MerchantCreateReturn) UnsetMerchantComment() {
	o.MerchantComment.Unset()
}

// GetReturnDate returns the ReturnDate field value if set, zero value otherwise.
func (o *MerchantCreateReturn) GetReturnDate() time.Time {
	if o == nil || IsNil(o.ReturnDate) {
		var ret time.Time
		return ret
	}
	return *o.ReturnDate
}

// GetReturnDateOk returns a tuple with the ReturnDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantCreateReturn) GetReturnDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReturnDate) {
		return nil, false
	}
	return o.ReturnDate, true
}

// HasReturnDate returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasReturnDate() bool {
	if o != nil && !IsNil(o.ReturnDate) {
		return true
	}

	return false
}

// SetReturnDate gets a reference to the given time.Time and assigns it to the ReturnDate field.
func (o *MerchantCreateReturn) SetReturnDate(v time.Time) {
	o.ReturnDate = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateReturn) GetExtraData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateReturn) GetExtraDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraData) {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasExtraData() bool {
	if o != nil && !IsNil(o.ExtraData) {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]string and assigns it to the ExtraData field.
func (o *MerchantCreateReturn) SetExtraData(v map[string]string) {
	o.ExtraData = v
}

// GetLines returns the Lines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantCreateReturn) GetLines() []MerchantCreateReturnLine {
	if o == nil {
		var ret []MerchantCreateReturnLine
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantCreateReturn) GetLinesOk() ([]MerchantCreateReturnLine, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *MerchantCreateReturn) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []MerchantCreateReturnLine and assigns it to the Lines field.
func (o *MerchantCreateReturn) SetLines(v []MerchantCreateReturnLine) {
	o.Lines = v
}

func (o MerchantCreateReturn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantCreateReturn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderIdentifier.IsSet() {
		toSerialize["OrderIdentifier"] = o.OrderIdentifier.Get()
	}
	if o.MerchantReturnNo.IsSet() {
		toSerialize["MerchantReturnNo"] = o.MerchantReturnNo.Get()
	}
	if !IsNil(o.Reason) {
		toSerialize["Reason"] = o.Reason
	}
	if o.MerchantComment.IsSet() {
		toSerialize["MerchantComment"] = o.MerchantComment.Get()
	}
	if !IsNil(o.ReturnDate) {
		toSerialize["ReturnDate"] = o.ReturnDate
	}
	if o.ExtraData != nil {
		toSerialize["ExtraData"] = o.ExtraData
	}
	if o.Lines != nil {
		toSerialize["Lines"] = o.Lines
	}
	return toSerialize, nil
}

type NullableMerchantCreateReturn struct {
	value *MerchantCreateReturn
	isSet bool
}

func (v NullableMerchantCreateReturn) Get() *MerchantCreateReturn {
	return v.value
}

func (v *NullableMerchantCreateReturn) Set(val *MerchantCreateReturn) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantCreateReturn) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantCreateReturn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantCreateReturn(val *MerchantCreateReturn) *NullableMerchantCreateReturn {
	return &NullableMerchantCreateReturn{value: val, isSet: true}
}

func (v NullableMerchantCreateReturn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantCreateReturn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


